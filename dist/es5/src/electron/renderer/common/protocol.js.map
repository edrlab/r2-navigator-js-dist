{"version":3,"file":"protocol.js","sourceRoot":"","sources":["../../../../../../src/electron/renderer/common/protocol.ts"],"names":[],"mappings":";;;AAOA,qCAA8C;AAE9C,kDAAwE;AAIjE,IAAM,gBAAgB,GAAG;IAK5B,IAAK,mBAAgB,CAAC,6BAA6B,EAAE;QAChD,mBAAgB,CAAC,6BAA6B,CAAC,0CAA+B,EAAE;YAC7E,mBAAmB,EAAE,KAAK;YAC1B,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,IAAI;YACjB,MAAM,EAAE,IAAI;YACZ,eAAe,EAAE,IAAI;SACxB,CAAC,CAAC;KACN;SAAM;QAGH,mBAAQ,CAAC,2BAA2B,CAAC,CAAC;gBAClC,UAAU,EAAE;oBACR,mBAAmB,EAAE,KAAK;oBAC1B,SAAS,EAAE,KAAK;oBAChB,WAAW,EAAE,IAAI;oBACjB,MAAM,EAAE,IAAI;oBACZ,QAAQ,EAAE,IAAI;oBACd,eAAe,EAAE,IAAI;iBACxB;gBACD,MAAM,EAAE,0CAA+B;aAC1C,CAAC,CAAC,CAAC;KACP;AACL,CAAC,CAAC;AA5BW,QAAA,gBAAgB,oBA4B3B","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { protocol, webFrame } from \"electron\";\n\nimport { READIUM2_ELECTRON_HTTP_PROTOCOL } from \"../../common/sessions\";\n\n// not needed in renderer process if fetch() is not used for READIUM2_ELECTRON_HTTP_PROTOCOL\n// (instead, use https://127.0.0.1:PORT via convertCustomSchemeToHttpUrl())\nexport const registerProtocol = () => {\n    // https://github.com/electron/electron/blob/v3.0.0/docs/api/breaking-changes.md#webframe\n    // protocol.registerStandardSchemes([READIUM2_ELECTRON_HTTP_PROTOCOL], { secure: true });\n    // webFrame.registerURLSchemeAsSecure(READIUM2_ELECTRON_HTTP_PROTOCOL);\n    // // webFrame.registerURLSchemeAsBypassingCSP(READIUM2_ELECTRON_HTTP_PROTOCOL);\n    if ((webFrame as any).registerURLSchemeAsPrivileged) {\n        (webFrame as any).registerURLSchemeAsPrivileged(READIUM2_ELECTRON_HTTP_PROTOCOL, {\n            allowServiceWorkers: false,\n            bypassCSP: false,\n            corsEnabled: true,\n            secure: true,\n            supportFetchAPI: true,\n        });\n    } else {\n        // tslint:disable-next-line:max-line-length\n        // https://github.com/electron/electron/blob/v5.0.0/docs/api/breaking-changes.md#privileged-schemes-registration\n        protocol.registerSchemesAsPrivileged([{\n            privileges: {\n                allowServiceWorkers: false,\n                bypassCSP: false,\n                corsEnabled: true,\n                secure: true,\n                standard: true,\n                supportFetchAPI: true,\n            },\n            scheme: READIUM2_ELECTRON_HTTP_PROTOCOL,\n        }]);\n    }\n};\n"]}