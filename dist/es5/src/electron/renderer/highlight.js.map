{"version":3,"file":"highlight.js","sourceRoot":"","sources":["../../../../../src/electron/renderer/highlight.ts"],"names":[],"mappings":";;;AAOA,2CAI0B;AAQ1B,SAAgB,0BAA0B,CACtC,YAAoB,EACpB,SAAgB,EAChB,kBAA2C;IAE3C,IAAI,YAAY,KAAK,iCAAwB,EAAE;QAE3C,IAAM,aAAa,GAAG,kBAAkB,CAAC;QAIzC,IAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAA2C,CAAC;QACvE,IAAI,wBAAwB,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE;YACzD,wBAAwB,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;SACjF;QACD,OAAO,IAAI,CAAC;KACf;SAAM,IAAI,YAAY,KAAK,kCAAyB,EAAE;QACnD,OAAO,IAAI,CAAC;KACf;SAAM;QACH,OAAO,KAAK,CAAC;KAChB;AACL,CAAC;AArBD,gEAqBC;AAED,IAAI,wBAAqF,CAAC;AAC1F,SAAgB,qBAAqB,CAAC,uBAAsE;IACxG,wBAAwB,GAAG,uBAAuB,CAAC;AACvD,CAAC;AAFD,sDAEC;AACD,SAAgB,mBAAmB,CAAC,IAAY;IAAhD,iBAQC;IAPG,IAAM,aAAa,GAAI,MAAwC,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;IAC5F,IAAI,aAAa,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;QAE3F,UAAU,CAAC;;;4BACP,WAAM,aAAa,CAAC,IAAI,CAAC,sCAA6B,CAAC,EAAA;;wBAAvD,SAAuD,CAAC;;;;aAC3D,EAAE,CAAC,CAAC,CAAC;KACT;AACL,CAAC;AARD,kDAQC;AACD,SAAgB,gBAAgB,CAAC,IAAY,EAAE,YAAsB;IAArE,iBAWC;IAVG,IAAM,aAAa,GAAI,MAAwC,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;IAC5F,IAAI,aAAa,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;QAC3F,IAAM,SAAO,GAA4C;YACrD,YAAY,cAAA;SACf,CAAC;QAEF,UAAU,CAAC;;;4BACP,WAAM,aAAa,CAAC,IAAI,CAAC,kCAAyB,EAAE,SAAO,CAAC,EAAA;;wBAA5D,SAA4D,CAAC;;;;aAChE,EAAE,CAAC,CAAC,CAAC;KACT;AACL,CAAC;AAXD,4CAWC;AACD,SAAsB,gBAAgB,CAClC,IAAY,EACZ,oBAAwD;;;;YAExD,WAAO,IAAI,OAAO,CAA2B,UAAC,OAAO,EAAE,MAAM;oBAEzD,IAAM,aAAa,GAAI,MAAwC,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;oBAC5F,IAAI,CAAC,aAAa,EAAE;wBAChB,MAAM,CAAC,wBAAwB,CAAC,CAAC;wBACjC,OAAO;qBACV;oBACD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE;wBAC9B,MAAM,CAAC,6BAA6B,CAAC,CAAC;wBACtC,OAAO;qBACV;oBACD,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;wBAC3C,MAAM,CAAC,mCAAmC,CAAC,CAAC;wBAC5C,OAAO;qBACV;oBAED,IAAM,EAAE,GAAG,UAAC,KAA+B;wBACvC,IAAI,KAAK,CAAC,OAAO,KAAK,kCAAyB,EAAE;4BAC7C,IAAM,OAAO,GAAG,KAAK,CAAC,aAAwC,CAAC;4BAC/D,IAAI,OAAO,KAAK,aAAa,EAAE;gCAC3B,MAAM,CAAC,2BAA2B,CAAC,CAAC;gCACpC,OAAO;6BACV;4BACD,IAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAA4C,CAAC;4BAC7E,aAAa,CAAC,mBAAmB,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;4BACrD,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;gCACzB,MAAM,CAAC,wBAAwB,CAAC,CAAC;6BACpC;iCAAM;gCACH,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;6BACnC;yBACJ;oBACL,CAAC,CAAC;oBACF,aAAa,CAAC,gBAAgB,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;oBAClD,IAAM,WAAW,GAA4C;wBACzD,oBAAoB,sBAAA;wBACpB,UAAU,EAAE,SAAS;qBACxB,CAAC;oBAEF,UAAU,CAAC;;;wCACP,WAAM,aAAa,CAAC,IAAI,CAAC,kCAAyB,EAAE,WAAW,CAAC,EAAA;;oCAAhE,SAAgE,CAAC;;;;yBACpE,EAAE,CAAC,CAAC,CAAC;gBACV,CAAC,CAAC,EAAC;;;CACN;AA9CD,4CA8CC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport {\n    IEventPayload_R2_EVENT_HIGHLIGHT_CLICK, IEventPayload_R2_EVENT_HIGHLIGHT_CREATE,\n    IEventPayload_R2_EVENT_HIGHLIGHT_REMOVE, R2_EVENT_HIGHLIGHT_CLICK, R2_EVENT_HIGHLIGHT_CREATE,\n    R2_EVENT_HIGHLIGHT_REMOVE, R2_EVENT_HIGHLIGHT_REMOVE_ALL,\n} from \"../common/events\";\nimport { IHighlight, IHighlightDefinition } from \"../common/highlight\";\nimport { IReadiumElectronBrowserWindow, IReadiumElectronWebview } from \"./webview/state\";\n\n// import * as debug_ from \"debug\";\n// const debug = debug_(\"r2:navigator#electron/renderer/index\");\n// const IS_DEV = (process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"dev\");\n\nexport function highlightsHandleIpcMessage(\n    eventChannel: string,\n    eventArgs: any[],\n    eventCurrentTarget: IReadiumElectronWebview): boolean {\n\n    if (eventChannel === R2_EVENT_HIGHLIGHT_CLICK) {\n        // (window as IReadiumElectronBrowserWindow).READIUM2.getActiveWebView();\n        const activeWebView = eventCurrentTarget;\n        // if (!activeWebView) {\n        //     return true;\n        // }\n        const payload = eventArgs[0] as IEventPayload_R2_EVENT_HIGHLIGHT_CLICK;\n        if (_highlightsClickListener && activeWebView.READIUM2.link) {\n            _highlightsClickListener(activeWebView.READIUM2.link.Href, payload.highlight);\n        }\n        return true;\n    } else if (eventChannel === R2_EVENT_HIGHLIGHT_CREATE) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nlet _highlightsClickListener: ((href: string, highlight: IHighlight) => void) | undefined;\nexport function highlightsClickListen(highlightsClickListener: (href: string, highlight: IHighlight) => void) {\n    _highlightsClickListener = highlightsClickListener;\n}\nexport function highlightsRemoveAll(href: string) {\n    const activeWebView = (window as IReadiumElectronBrowserWindow).READIUM2.getActiveWebView();\n    if (activeWebView && activeWebView.READIUM2.link && activeWebView.READIUM2.link.Href === href) {\n\n        setTimeout(async () => {\n            await activeWebView.send(R2_EVENT_HIGHLIGHT_REMOVE_ALL);\n        }, 0);\n    }\n}\nexport function highlightsRemove(href: string, highlightIDs: string[]) {\n    const activeWebView = (window as IReadiumElectronBrowserWindow).READIUM2.getActiveWebView();\n    if (activeWebView && activeWebView.READIUM2.link && activeWebView.READIUM2.link.Href === href) {\n        const payload: IEventPayload_R2_EVENT_HIGHLIGHT_REMOVE = {\n            highlightIDs,\n        };\n\n        setTimeout(async () => {\n            await activeWebView.send(R2_EVENT_HIGHLIGHT_REMOVE, payload);\n        }, 0);\n    }\n}\nexport async function highlightsCreate(\n    href: string,\n    highlightDefinitions: IHighlightDefinition[] | undefined):\n    Promise<Array<IHighlight | null>> {\n    return new Promise<Array<IHighlight | null>>((resolve, reject) => {\n\n        const activeWebView = (window as IReadiumElectronBrowserWindow).READIUM2.getActiveWebView();\n        if (!activeWebView) {\n            reject(\"No navigator webview?!\");\n            return;\n        }\n        if (!activeWebView.READIUM2.link) {\n            reject(\"No navigator webview link?!\");\n            return;\n        }\n        if (activeWebView.READIUM2.link.Href !== href) {\n            reject(\"Navigator webview link no match?!\");\n            return;\n        }\n\n        const cb = (event: Electron.IpcMessageEvent) => {\n            if (event.channel === R2_EVENT_HIGHLIGHT_CREATE) {\n                const webview = event.currentTarget as IReadiumElectronWebview;\n                if (webview !== activeWebView) {\n                    reject(\"Wrong navigator webview?!\");\n                    return;\n                }\n                const payloadPong = event.args[0] as IEventPayload_R2_EVENT_HIGHLIGHT_CREATE;\n                activeWebView.removeEventListener(\"ipc-message\", cb);\n                if (!payloadPong.highlights) { // includes undefined and empty array\n                    reject(\"highlightCreate fail?!\");\n                } else {\n                    resolve(payloadPong.highlights);\n                }\n            }\n        };\n        activeWebView.addEventListener(\"ipc-message\", cb);\n        const payloadPing: IEventPayload_R2_EVENT_HIGHLIGHT_CREATE = {\n            highlightDefinitions,\n            highlights: undefined,\n        };\n\n        setTimeout(async () => {\n            await activeWebView.send(R2_EVENT_HIGHLIGHT_CREATE, payloadPing);\n        }, 0);\n    });\n}\n"]}