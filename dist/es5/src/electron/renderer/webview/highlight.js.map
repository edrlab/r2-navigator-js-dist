{"version":3,"file":"highlight.js","sourceRoot":"","sources":["../../../../../../src/electron/renderer/webview/highlight.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as crypto from \"crypto\";\nimport { debounce } from \"debounce\";\nimport { ipcRenderer } from \"electron\";\n\nimport {\n    IEventPayload_R2_EVENT_HIGHLIGHT_CLICK, R2_EVENT_HIGHLIGHT_CLICK,\n} from \"../../common/events\";\nimport { IColor, IHighlight } from \"../../common/highlight\";\nimport { isPaginated } from \"../../common/readium-css-inject\";\nimport { ISelectionInfo } from \"../../common/selection\";\nimport { IRectSimple, getClientRectsNoOverlap } from \"../common/rect-utils\";\nimport { getScrollingElement } from \"./readium-css\";\nimport { convertRangeInfo } from \"./selection\";\nimport { IReadiumElectronWebviewWindow } from \"./state\";\n\n// import { isRTL } from './readium-css';\n\nexport const ID_HIGHLIGHTS_CONTAINER = \"R2_ID_HIGHLIGHTS_CONTAINER\";\nexport const CLASS_HIGHLIGHT_CONTAINER = \"R2_CLASS_HIGHLIGHT_CONTAINER\";\nexport const CLASS_HIGHLIGHT_AREA = \"R2_CLASS_HIGHLIGHT_AREA\";\nexport const CLASS_HIGHLIGHT_BOUNDING_AREA = \"R2_CLASS_HIGHLIGHT_BOUNDING_AREA\";\n\nconst USE_SVG = false;\n\nconst DEFAULT_BACKGROUND_COLOR_OPACITY = 0.3;\nconst ALT_BACKGROUND_COLOR_OPACITY = 0.45;\nconst DEFAULT_BACKGROUND_COLOR: IColor = {\n    blue: 100,\n    green: 50,\n    red: 230,\n};\n\nconst _highlights: IHighlight[] = [];\n\ninterface IWithRect {\n    rect: IRectSimple;\n    scale: number;\n    // xOffset: number;\n    // yOffset: number;\n}\ninterface IHTMLDivElementWithRect extends HTMLDivElement, IWithRect {\n}\n\nconst SVG_XML_NAMESPACE = \"http://www.w3.org/2000/svg\";\ninterface ISVGRectElementWithRect extends SVGRectElement, IWithRect {\n}\ninterface ISVGLineElementWithRect extends SVGLineElement, IWithRect {\n}\n\nfunction resetHighlightBoundingStyle(_win: IReadiumElectronWebviewWindow, highlightBounding: HTMLElement) {\n\n    highlightBounding.style.outline = \"none\";\n    // tslint:disable-next-line:max-line-length\n    highlightBounding.style.setProperty(\"background-color\", \"transparent\", \"important\");\n}\n\n// tslint:disable-next-line:max-line-length\nfunction setHighlightBoundingStyle(_win: IReadiumElectronWebviewWindow, highlightBounding: HTMLElement, highlight: IHighlight) {\n\n    const opacity = ALT_BACKGROUND_COLOR_OPACITY;\n    // tslint:disable-next-line:max-line-length\n    highlightBounding.style.setProperty(\"background-color\", `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity})`, \"important\");\n\n    // tslint:disable-next-line:max-line-length\n    highlightBounding.style.outlineColor = `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, 1)`;\n    highlightBounding.style.outlineStyle = \"solid\";\n    highlightBounding.style.outlineWidth = \"1px\";\n    highlightBounding.style.outlineOffset = \"0px\";\n}\n\nfunction resetHighlightAreaStyle(win: IReadiumElectronWebviewWindow, highlightArea: HTMLElement | SVGElement) {\n\n    const useSVG = !win.READIUM2.DEBUG_VISUALS && USE_SVG;\n    const isSVG = useSVG && highlightArea.namespaceURI === SVG_XML_NAMESPACE;\n\n    const id = isSVG ?\n        // tslint:disable-next-line:max-line-length\n        ((highlightArea.parentNode && highlightArea.parentNode.parentNode && highlightArea.parentNode.parentNode.nodeType === Node.ELEMENT_NODE && (highlightArea.parentNode.parentNode as Element).getAttribute) ? (highlightArea.parentNode.parentNode as Element).getAttribute(\"id\") : undefined) :\n        // tslint:disable-next-line:max-line-length\n        ((highlightArea.parentNode && highlightArea.parentNode.nodeType === Node.ELEMENT_NODE && (highlightArea.parentNode as Element).getAttribute) ? (highlightArea.parentNode as Element).getAttribute(\"id\") : undefined);\n    if (id) {\n        const highlight = _highlights.find((h) => {\n            return h.id === id;\n        });\n        if (highlight) {\n            const opacity = DEFAULT_BACKGROUND_COLOR_OPACITY;\n            // highlightArea as ElementCSSInlineStyle (implied by HTMLElement | SVGElement)\n            if (isSVG) {\n                // tslint:disable-next-line:max-line-length\n                highlightArea.style.setProperty(\"fill\", `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue})`, \"important\");\n                // tslint:disable-next-line:max-line-length\n                highlightArea.style.setProperty(\"fill-opacity\", `${opacity}`, \"important\");\n                // tslint:disable-next-line:max-line-length\n                highlightArea.style.setProperty(\"stroke\", `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue})`, \"important\");\n                // tslint:disable-next-line:max-line-length\n                highlightArea.style.setProperty(\"stroke-opacity\", `${opacity}`, \"important\");\n            } else {\n                // tslint:disable-next-line:max-line-length\n                highlightArea.style.setProperty(\"background-color\", `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity})`, \"important\");\n            }\n        }\n    }\n}\n\n// tslint:disable-next-line:max-line-length\nfunction setHighlightAreaStyle(win: IReadiumElectronWebviewWindow, highlightAreas: Array<HTMLElement | SVGElement>, highlight: IHighlight) {\n\n    const useSVG = !win.READIUM2.DEBUG_VISUALS && USE_SVG;\n    for (const highlightArea of highlightAreas) {\n        const isSVG = useSVG && highlightArea.namespaceURI === SVG_XML_NAMESPACE;\n\n        const opacity = ALT_BACKGROUND_COLOR_OPACITY;\n        // highlightArea as ElementCSSInlineStyle (implied by HTMLElement | SVGElement)\n        if (isSVG) {\n            // tslint:disable-next-line:max-line-length\n            highlightArea.style.setProperty(\"fill\", `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue})`, \"important\");\n            // tslint:disable-next-line:max-line-length\n            highlightArea.style.setProperty(\"fill-opacity\", `${opacity}`, \"important\");\n            // tslint:disable-next-line:max-line-length\n            highlightArea.style.setProperty(\"stroke\", `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue})`, \"important\");\n            // tslint:disable-next-line:max-line-length\n            highlightArea.style.setProperty(\"stroke-opacity\", `${opacity}`, \"important\");\n        } else {\n            // tslint:disable-next-line:max-line-length\n            highlightArea.style.setProperty(\"background-color\", `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity})`, \"important\");\n        }\n\n        // if (!win.READIUM2.DEBUG_VISUALS) {\n        // tslint:disable-next-line:max-line-length\n        //     (highlightArea as HTMLElement).style.outlineColor = `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, 1)`;\n        //     (highlightArea as HTMLElement).style.outlineStyle = \"solid\";\n        //     (highlightArea as HTMLElement).style.outlineWidth = \"1px\";\n        //     (highlightArea as HTMLElement).style.outlineOffset = \"0px\";\n        // }\n    }\n}\n\nfunction processMouseEvent(win: IReadiumElectronWebviewWindow, ev: MouseEvent) {\n    const documant = win.document;\n    const scrollElement = getScrollingElement(documant);\n\n    // relative to fixed window top-left corner\n    // (unlike pageX/Y which is relative to top-left rendered content area, subject to scrolling)\n    const x = ev.clientX;\n    const y = ev.clientY;\n\n    // const highlightsContainer = documant.getElementById(`${ID_HIGHLIGHTS_CONTAINER}`);\n    if (!_highlightsContainer) {\n        return;\n    }\n\n    const paginated = isPaginated(documant);\n    const bodyRect = documant.body.getBoundingClientRect();\n    const xOffset = paginated ? (-scrollElement.scrollLeft) : bodyRect.left;\n    const yOffset = paginated ? (-scrollElement.scrollTop) : bodyRect.top;\n\n    let foundHighlight: IHighlight | undefined;\n    let foundElement: IHTMLDivElementWithRect | undefined;\n    // for (const highlight of _highlights) {\n    for (let i = _highlights.length - 1; i >= 0; i--) {\n        const highlight = _highlights[i];\n\n        let highlightParent = documant.getElementById(`${highlight.id}`);\n        if (!highlightParent) { // ??!!\n            highlightParent = _highlightsContainer.querySelector(`#${highlight.id}`); // .${CLASS_HIGHLIGHT_CONTAINER}\n        }\n        if (!highlightParent) { // what?\n            continue;\n        }\n\n        let hit = false;\n        const highlightFragments = highlightParent.querySelectorAll(`.${CLASS_HIGHLIGHT_AREA}`);\n        for (const highlightFragment of highlightFragments) {\n            const withRect = (highlightFragment as unknown) as IWithRect;\n            // tslint:disable-next-line:max-line-length\n            // console.log(`RECT: ${withRect.rect.left} | ${withRect.rect.top} // ${withRect.rect.width} | ${withRect.rect.height}`);\n\n            const left = withRect.rect.left + xOffset; // (paginated ? withRect.xOffset : xOffset);\n            const top = withRect.rect.top + yOffset; // (paginated ? withRect.yOffset : yOffset);\n            if (x >= left &&\n                x < (left + withRect.rect.width) &&\n                y >= top &&\n                y < (top + withRect.rect.height)\n                ) {\n\n                hit = true;\n                break;\n            }\n        }\n        if (hit) {\n            foundHighlight = highlight;\n            foundElement = highlightParent as IHTMLDivElementWithRect;\n            break;\n        }\n\n        // hit = false;\n        // const highlightBounding = highlightParent.querySelector(`.${CLASS_HIGHLIGHT_BOUNDING_AREA}`);\n        // if (highlightBounding) {\n        //     const highlightBoundingWithRect = highlightBounding as IHTMLDivElementWithRect;\n\n        //     const left = highlightBoundingWithRect.rect.left + highlightBoundingWithRect.xOffset;\n        //     const top = highlightBoundingWithRect.rect.top + highlightBoundingWithRect.yOffset;\n        //     if (x >= left &&\n        //         x < (left + highlightBoundingWithRect.rect.width) &&\n        //         y >= top &&\n        //         y < (top + highlightBoundingWithRect.rect.height)\n        //         ) {\n\n        //         hit = true;\n        //     }\n        // }\n        // if (hit) {\n        //     foundHighlight = highlight;\n        //     foundElement = highlightParent as IHTMLDivElementWithRect;\n        //     break;\n        // }\n    }\n    if (!foundHighlight || !foundElement) {\n        const highlightBoundings = _highlightsContainer.querySelectorAll(`.${CLASS_HIGHLIGHT_BOUNDING_AREA}`);\n        for (const highlightBounding of highlightBoundings) {\n            resetHighlightBoundingStyle(win, highlightBounding as HTMLElement);\n        }\n        const allHighlightAreas = Array.from(_highlightsContainer.querySelectorAll(`.${CLASS_HIGHLIGHT_AREA}`));\n        for (const highlightArea of allHighlightAreas) {\n            resetHighlightAreaStyle(win, highlightArea as HTMLElement); // can also be SVGElement\n        }\n        return;\n    }\n    if (foundElement.getAttribute(\"data-click\")) {\n        if (ev.type === \"mousemove\") {\n            // tslint:disable-next-line:max-line-length\n            const foundElementHighlightAreas = Array.from(foundElement.querySelectorAll(`.${CLASS_HIGHLIGHT_AREA}`));\n            const allHighlightAreas = _highlightsContainer.querySelectorAll(`.${CLASS_HIGHLIGHT_AREA}`);\n            for (const highlightArea of allHighlightAreas) {\n                if (foundElementHighlightAreas.indexOf(highlightArea) < 0) {\n                    resetHighlightAreaStyle(win, highlightArea as HTMLElement); // can also be SVGElement\n                }\n            }\n            // tslint:disable-next-line:max-line-length\n            setHighlightAreaStyle(win, foundElementHighlightAreas as HTMLElement[], foundHighlight); // can also be SVGElement[]\n\n            const foundElementHighlightBounding = foundElement.querySelector(`.${CLASS_HIGHLIGHT_BOUNDING_AREA}`);\n            const allHighlightBoundings = _highlightsContainer.querySelectorAll(`.${CLASS_HIGHLIGHT_BOUNDING_AREA}`);\n            for (const highlightBounding of allHighlightBoundings) {\n                if (!foundElementHighlightBounding || highlightBounding !== foundElementHighlightBounding) {\n                    resetHighlightBoundingStyle(win, highlightBounding as HTMLElement);\n                }\n            }\n            if (foundElementHighlightBounding) {\n                if (win.READIUM2.DEBUG_VISUALS) {\n                    setHighlightBoundingStyle(win, foundElementHighlightBounding as HTMLElement, foundHighlight);\n                }\n            }\n        } else if (ev.type === \"mouseup\" || ev.type === \"click\") {\n            const payload: IEventPayload_R2_EVENT_HIGHLIGHT_CLICK = {\n                highlight: foundHighlight,\n            };\n            ipcRenderer.sendToHost(R2_EVENT_HIGHLIGHT_CLICK, payload);\n        }\n    }\n}\n\nlet lastMouseDownX = -1;\nlet lastMouseDownY = -1;\nlet bodyEventListenersSet = false;\nlet _highlightsContainer: HTMLElement | null;\nfunction ensureHighlightsContainer(win: IReadiumElectronWebviewWindow): HTMLElement {\n    const documant = win.document;\n\n    if (!_highlightsContainer) {\n\n        if (!bodyEventListenersSet) {\n            bodyEventListenersSet = true;\n\n            // reminder: mouseenter/mouseleave do not bubble, so no event delegation\n            // documant.body.addEventListener(\"click\", (ev: MouseEvent) => {\n            //     processMouseEvent(win, ev);\n            // }, false);\n            documant.body.addEventListener(\"mousedown\", (ev: MouseEvent) => {\n                lastMouseDownX = ev.clientX;\n                lastMouseDownY = ev.clientY;\n            }, false);\n            documant.body.addEventListener(\"mouseup\", (ev: MouseEvent) => {\n                if ((Math.abs(lastMouseDownX - ev.clientX) < 3) &&\n                    (Math.abs(lastMouseDownY - ev.clientY) < 3)) {\n                    processMouseEvent(win, ev);\n                }\n            }, false);\n            documant.body.addEventListener(\"mousemove\", (ev: MouseEvent) => {\n                processMouseEvent(win, ev);\n            }, false);\n        }\n\n        _highlightsContainer = documant.createElement(\"div\");\n        _highlightsContainer.setAttribute(\"id\", ID_HIGHLIGHTS_CONTAINER);\n        _highlightsContainer.style.setProperty(\"pointer-events\", \"none\");\n        documant.body.append(_highlightsContainer);\n        // documant.documentElement.append(_highlightsContainer);\n    }\n    return _highlightsContainer;\n}\n\nexport function hideAllhighlights(_documant: Document) {\n    // for (const highlight of _highlights) {\n    //     const highlightContainer = documant.getElementById(highlight.id);\n    //     if (highlightContainer) {\n    //         highlightContainer.remove();\n    //     }\n    // }\n    if (_highlightsContainer) {\n        _highlightsContainer.remove();\n        _highlightsContainer = null;\n        // ensureHighlightsContainer(documant);\n    }\n}\n\nexport function destroyAllhighlights(documant: Document) {\n    // _highlights.forEach((highlight) => {\n    //     destroyHighlight(highlight.id);\n    // });\n    // for (const highlight of _highlights) {\n    //     destroyHighlight(highlight.id);\n    // }\n    // for (let i = _highlights.length - 1; i >= 0; i--) {\n    //     const highlight = _highlights[i];\n    //     destroyHighlight(highlight.id);\n    // }\n    hideAllhighlights(documant);\n    _highlights.splice(0, _highlights.length);\n}\n\nexport function destroyHighlight(documant: Document, id: string) {\n    let i = -1;\n    const highlight = _highlights.find((h, j) => {\n        i = j;\n        return h.id === id;\n    });\n    if (highlight && i >= 0 && i < _highlights.length) {\n        _highlights.splice(i, 1);\n    }\n\n    const highlightContainer = documant.getElementById(id);\n    if (highlightContainer) {\n        highlightContainer.remove();\n    }\n}\n\nexport function recreateAllHighlightsRaw(win: IReadiumElectronWebviewWindow) {\n    hideAllhighlights(win.document);\n    for (const highlight of _highlights) {\n        createHighlightDom(win, highlight);\n    }\n}\n\nexport const recreateAllHighlightsDebounced = debounce((win: IReadiumElectronWebviewWindow) => {\n    recreateAllHighlightsRaw(win);\n}, 500);\n\nexport function recreateAllHighlights(win: IReadiumElectronWebviewWindow) {\n    hideAllhighlights(win.document);\n    recreateAllHighlightsDebounced(win);\n}\n\nexport function createHighlight(\n    win: IReadiumElectronWebviewWindow,\n    selectionInfo: ISelectionInfo,\n    color: IColor | undefined,\n    pointerInteraction: boolean): IHighlight {\n\n    // tslint:disable-next-line:no-string-literal\n    // console.log(\"Chromium: \" + process.versions[\"chrome\"]);\n\n    // tslint:disable-next-line:max-line-length\n    const uniqueStr = `${selectionInfo.rangeInfo.cfi}${selectionInfo.rangeInfo.startContainerElementCssSelector}${selectionInfo.rangeInfo.startContainerChildTextNodeIndex}${selectionInfo.rangeInfo.startOffset}${selectionInfo.rangeInfo.endContainerElementCssSelector}${selectionInfo.rangeInfo.endContainerChildTextNodeIndex}${selectionInfo.rangeInfo.endOffset}`;\n    // const unique = Buffer.from(JSON.stringify(selectionInfo.rangeInfo, null, \"\")).toString(\"base64\");\n    // const unique = Buffer.from(uniqueStr).toString(\"base64\");\n    // const id = \"R2_HIGHLIGHT_\" + unique.replace(/\\+/, \"_\").replace(/=/, \"-\").replace(/\\//, \".\");\n    const checkSum = crypto.createHash(\"sha256\");\n    checkSum.update(uniqueStr);\n    const sha256Hex = checkSum.digest(\"hex\");\n    const id = \"R2_HIGHLIGHT_\" + sha256Hex;\n\n    destroyHighlight(win.document, id);\n\n    const highlight: IHighlight = {\n        color: color ? color : DEFAULT_BACKGROUND_COLOR,\n        id,\n        pointerInteraction,\n        selectionInfo,\n    };\n    _highlights.push(highlight);\n\n    createHighlightDom(win, highlight);\n\n    return highlight;\n}\n\nfunction createHighlightDom(win: IReadiumElectronWebviewWindow, highlight: IHighlight): HTMLDivElement | undefined {\n\n    const documant = win.document;\n    const scrollElement = getScrollingElement(documant);\n\n    const range = convertRangeInfo(documant, highlight.selectionInfo.rangeInfo);\n    if (!range) {\n        return undefined;\n    }\n\n    const paginated = isPaginated(documant);\n    // const rtl = isRTL();\n\n    // checkRangeFix(documant);\n\n    const highlightsContainer = ensureHighlightsContainer(win);\n\n    const highlightParent = documant.createElement(\"div\") as IHTMLDivElementWithRect;\n    highlightParent.setAttribute(\"id\", highlight.id);\n    highlightParent.setAttribute(\"class\", CLASS_HIGHLIGHT_CONTAINER);\n    highlightParent.style.setProperty(\"pointer-events\", \"none\");\n    if (highlight.pointerInteraction) {\n        highlightParent.setAttribute(\"data-click\", \"1\");\n    }\n\n    // Note that legacy ResizeSensor sets body position to \"relative\" (default static).\n    // Also note that ReadiumCSS default to (via stylesheet :root):\n    // documant.documentElement.style.position = \"relative\";\n    documant.body.style.position = \"relative\";\n    // documant.body.style.setProperty(\"position\", \"relative !important\");\n\n    // const docStyle = (documant.defaultView as Window).getComputedStyle(documant.documentElement);\n    // const bodyStyle = (documant.defaultView as Window).getComputedStyle(documant.body);\n    // const marginLeft = bodyStyle.getPropertyValue(\"margin-left\");\n    // console.log(\"marginLeft: \" + marginLeft);\n    // const marginTop = bodyStyle.getPropertyValue(\"margin-top\");\n    // console.log(\"marginTop: \" + marginTop);\n\n    const bodyRect = documant.body.getBoundingClientRect();\n    // console.log(\"==== bodyRect:\");\n    // console.log(\"width: \" + bodyRect.width);\n    // console.log(\"height: \" + bodyRect.height);\n    // console.log(\"top: \" + bodyRect.top);\n    // console.log(\"bottom: \" + bodyRect.bottom);\n    // console.log(\"left: \" + bodyRect.left);\n    // console.log(\"right: \" + bodyRect.right);\n\n    // const xOffset = paginated ? (bodyRect.left - parseInt(marginLeft, 10)) : bodyRect.left;\n    // const yOffset = paginated ? (bodyRect.top - parseInt(marginTop, 10)) : bodyRect.top;\n\n    const xOffset = paginated ? (-scrollElement.scrollLeft) : bodyRect.left;\n    const yOffset = paginated ? (-scrollElement.scrollTop) : bodyRect.top;\n\n    const scale = 1 / ((win.READIUM2 && win.READIUM2.isFixedLayout) ? win.READIUM2.fxlViewportScale : 1);\n\n    // console.log(\"scrollElement.scrollLeft: \" + scrollElement.scrollLeft);\n    // console.log(\"scrollElement.scrollTop: \" + scrollElement.scrollTop);\n\n    const useSVG = !win.READIUM2.DEBUG_VISUALS && USE_SVG;\n    const drawUnderline = true;\n    const drawStrikeThrough = false;\n\n    const doNotMergeHorizontallyAlignedRects = drawUnderline || drawStrikeThrough;\n    // const clientRects = range.getClientRects(); // ClientRectList | DOMRectList\n    // tslint:disable-next-line:max-line-length\n    const clientRects = win.READIUM2.DEBUG_VISUALS ? range.getClientRects() : getClientRectsNoOverlap(range, doNotMergeHorizontallyAlignedRects);\n\n    let highlightAreaSVGDocFrag: DocumentFragment | undefined;\n\n    const roundedCorner = 3;\n    const underlineThickness = 2;\n    const strikeThroughLineThickness = 3;\n\n    for (const clientRect of clientRects) {\n        const opacity = DEFAULT_BACKGROUND_COLOR_OPACITY;\n\n        if (useSVG) {\n            const borderThickness = 0;\n\n            if (!highlightAreaSVGDocFrag) {\n                highlightAreaSVGDocFrag = documant.createDocumentFragment();\n            }\n\n            const highlightAreaSVGRect = documant.createElementNS(SVG_XML_NAMESPACE, \"rect\") as ISVGRectElementWithRect;\n            highlightAreaSVGRect.setAttribute(\"class\", CLASS_HIGHLIGHT_AREA);\n\n            // tslint:disable-next-line:max-line-length\n            highlightAreaSVGRect.setAttribute(\"style\", `fill: rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}) !important; fill-opacity: ${opacity} !important; stroke-width: 0;`); // stroke-width: ${borderThickness}; stroke: rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}) !important; stroke-opacity: ${opacity} !important\n            highlightAreaSVGRect.scale = scale;\n            // highlightAreaSVGRect.xOffset = xOffset;\n            // highlightAreaSVGRect.yOffset = yOffset;\n            highlightAreaSVGRect.rect = {\n                height: clientRect.height,\n                left: clientRect.left - xOffset,\n                top: clientRect.top - yOffset,\n                width: clientRect.width,\n            };\n            highlightAreaSVGRect.setAttribute(\"rx\", `${roundedCorner * scale}`);\n            highlightAreaSVGRect.setAttribute(\"ry\", `${roundedCorner * scale}`);\n            highlightAreaSVGRect.setAttribute(\"x\", `${(highlightAreaSVGRect.rect.left - borderThickness) * scale}`);\n            highlightAreaSVGRect.setAttribute(\"y\", `${(highlightAreaSVGRect.rect.top - borderThickness) * scale}`);\n            // tslint:disable-next-line:max-line-length\n            highlightAreaSVGRect.setAttribute(\"height\", `${(highlightAreaSVGRect.rect.height + (borderThickness * 2)) * scale}`);\n            // tslint:disable-next-line:max-line-length\n            highlightAreaSVGRect.setAttribute(\"width\", `${(highlightAreaSVGRect.rect.width + (borderThickness * 2)) * scale}`);\n            highlightAreaSVGDocFrag.appendChild(highlightAreaSVGRect);\n\n            if (drawUnderline) {\n                // tslint:disable-next-line:max-line-length\n                const highlightAreaSVGLine = documant.createElementNS(SVG_XML_NAMESPACE, \"line\") as ISVGLineElementWithRect;\n                highlightAreaSVGLine.setAttribute(\"class\", CLASS_HIGHLIGHT_AREA);\n\n                // tslint:disable-next-line:max-line-length\n                highlightAreaSVGLine.setAttribute(\"style\", `stroke-linecap: round; stroke-width: ${underlineThickness * scale}; stroke: rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}) !important; stroke-opacity: ${opacity} !important`);\n                highlightAreaSVGLine.scale = scale;\n                // highlightAreaSVGLine.xOffset = xOffset;\n                // highlightAreaSVGLine.yOffset = yOffset;\n                highlightAreaSVGLine.rect = {\n                    height: clientRect.height,\n                    left: clientRect.left - xOffset,\n                    top: clientRect.top - yOffset,\n                    width: clientRect.width,\n                };\n                const lineOffset = (highlightAreaSVGLine.rect.width > roundedCorner) ? roundedCorner : 0;\n                highlightAreaSVGLine.setAttribute(\"x1\", `${(highlightAreaSVGLine.rect.left + lineOffset) * scale}`);\n                // tslint:disable-next-line:max-line-length\n                highlightAreaSVGLine.setAttribute(\"x2\", `${(highlightAreaSVGLine.rect.left + highlightAreaSVGLine.rect.width - lineOffset) * scale}`);\n                // tslint:disable-next-line:max-line-length\n                const y = (highlightAreaSVGLine.rect.top + highlightAreaSVGLine.rect.height - (underlineThickness / 2)) * scale;\n                highlightAreaSVGLine.setAttribute(\"y1\", `${y}`);\n                highlightAreaSVGLine.setAttribute(\"y2\", `${y}`);\n\n                highlightAreaSVGLine.setAttribute(\"height\", `${highlightAreaSVGLine.rect.height * scale}`);\n                highlightAreaSVGLine.setAttribute(\"width\", `${highlightAreaSVGLine.rect.width * scale}`);\n                highlightAreaSVGDocFrag.appendChild(highlightAreaSVGLine);\n            }\n            if (drawStrikeThrough) {\n                // tslint:disable-next-line:max-line-length\n                const highlightAreaSVGLine = documant.createElementNS(SVG_XML_NAMESPACE, \"line\") as ISVGLineElementWithRect;\n                highlightAreaSVGLine.setAttribute(\"class\", CLASS_HIGHLIGHT_AREA);\n\n                // tslint:disable-next-line:max-line-length\n                highlightAreaSVGLine.setAttribute(\"style\", `stroke-linecap: butt; stroke-width: ${strikeThroughLineThickness * scale}; stroke: rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}) !important; stroke-opacity: ${opacity} !important`); // stroke-dasharray: ${lineThickness * 2},${lineThickness * 2};\n                highlightAreaSVGLine.scale = scale;\n                // highlightAreaSVGLine.xOffset = xOffset;\n                // highlightAreaSVGLine.yOffset = yOffset;\n                highlightAreaSVGLine.rect = {\n                    height: clientRect.height,\n                    left: clientRect.left - xOffset,\n                    top: clientRect.top - yOffset,\n                    width: clientRect.width,\n                };\n                highlightAreaSVGLine.setAttribute(\"x1\", `${highlightAreaSVGLine.rect.left * scale}`);\n                // tslint:disable-next-line:max-line-length\n                highlightAreaSVGLine.setAttribute(\"x2\", `${(highlightAreaSVGLine.rect.left + highlightAreaSVGLine.rect.width) * scale}`);\n\n                const lineOffset = highlightAreaSVGLine.rect.height / 2;\n                const y = (highlightAreaSVGLine.rect.top + lineOffset) * scale;\n                highlightAreaSVGLine.setAttribute(\"y1\", `${y}`);\n                highlightAreaSVGLine.setAttribute(\"y2\", `${y}`);\n\n                highlightAreaSVGLine.setAttribute(\"height\", `${highlightAreaSVGLine.rect.height * scale}`);\n                highlightAreaSVGLine.setAttribute(\"width\", `${highlightAreaSVGLine.rect.width * scale}`);\n                highlightAreaSVGDocFrag.appendChild(highlightAreaSVGLine);\n            }\n        } else {\n            const highlightArea = documant.createElement(\"div\") as IHTMLDivElementWithRect;\n            highlightArea.setAttribute(\"class\", CLASS_HIGHLIGHT_AREA);\n\n            let extra = \"\";\n            if (win.READIUM2.DEBUG_VISUALS) {\n                const rgb = Math.round(0xffffff * Math.random());\n                // tslint:disable-next-line:no-bitwise\n                const r = rgb >> 16;\n                // tslint:disable-next-line:no-bitwise\n                const g = rgb >> 8 & 255;\n                // tslint:disable-next-line:no-bitwise\n                const b = rgb & 255;\n                // tslint:disable-next-line:max-line-length\n                extra = `outline-color: rgb(${r}, ${g}, ${b}); outline-style: solid; outline-width: 1px; outline-offset: -1px;`;\n                // box-shadow: inset 0 0 0 1px #600;\n            } else {\n                if (drawUnderline) {\n                    // tslint:disable-next-line:max-line-length\n                    extra += `border-bottom: ${underlineThickness * scale}px solid rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity}) !important`;\n                }\n            }\n            // tslint:disable-next-line:max-line-length\n            highlightArea.setAttribute(\"style\", `border-radius: ${roundedCorner}px !important; background-color: rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity}) !important; ${extra}`);\n            // tslint:disable-next-line:max-line-length\n            // highlightArea.setAttribute(\"style\", `outline-color: magenta; outline-style: solid; outline-width: 1px; outline-offset: -1px;`);\n            highlightArea.style.setProperty(\"pointer-events\", \"none\");\n            highlightArea.style.position = paginated ? \"fixed\" : \"absolute\";\n            highlightArea.scale = scale;\n            // highlightArea.xOffset = xOffset;\n            // highlightArea.yOffset = yOffset;\n            highlightArea.rect = {\n                height: clientRect.height,\n                left: clientRect.left - xOffset,\n                top: clientRect.top - yOffset,\n                width: clientRect.width,\n            };\n            highlightArea.style.width = `${highlightArea.rect.width * scale}px`;\n            highlightArea.style.height = `${highlightArea.rect.height * scale}px`;\n            highlightArea.style.left = `${highlightArea.rect.left * scale}px`;\n            highlightArea.style.top = `${highlightArea.rect.top * scale}px`;\n\n            // if (highlight.pointerInteraction) {\n            //     highlightArea.style.setProperty(\"pointer-events\", \"auto\");\n            // }\n\n            highlightParent.append(highlightArea);\n\n            if (!win.READIUM2.DEBUG_VISUALS && drawStrikeThrough) {\n\n                const highlightAreaLine = documant.createElement(\"div\") as IHTMLDivElementWithRect;\n                highlightAreaLine.setAttribute(\"class\", CLASS_HIGHLIGHT_AREA);\n\n                // tslint:disable-next-line:max-line-length\n                highlightAreaLine.setAttribute(\"style\", `background-color: rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity}) !important;`);\n                // tslint:disable-next-line:max-line-length\n                // highlightArea.setAttribute(\"style\", `outline-color: magenta; outline-style: solid; outline-width: 1px; outline-offset: -1px;`);\n                highlightAreaLine.style.setProperty(\"pointer-events\", \"none\");\n                highlightAreaLine.style.position = paginated ? \"fixed\" : \"absolute\";\n                highlightAreaLine.scale = scale;\n                // highlightAreaLine.xOffset = xOffset;\n                // highlightAreaLine.yOffset = yOffset;\n                highlightAreaLine.rect = {\n                    height: clientRect.height,\n                    left: clientRect.left - xOffset,\n                    top: clientRect.top - yOffset,\n                    width: clientRect.width,\n                };\n                highlightAreaLine.style.width = `${highlightAreaLine.rect.width * scale}px`;\n                highlightAreaLine.style.height = `${strikeThroughLineThickness * scale}px`;\n                highlightAreaLine.style.left = `${highlightAreaLine.rect.left * scale}px`;\n                // tslint:disable-next-line:max-line-length\n                highlightAreaLine.style.top = `${(highlightAreaLine.rect.top + (highlightAreaLine.rect.height / 2) - (strikeThroughLineThickness / 2)) * scale}px`;\n\n                highlightParent.append(highlightAreaLine);\n            }\n        }\n    }\n\n    if (useSVG && highlightAreaSVGDocFrag) {\n        // const highlightAreaSVGG = documant.createElementNS(SVG_XML_NAMESPACE, \"g\");\n        // highlightAreaSVGG.appendChild(highlightAreaSVGDocFrag);\n        const highlightAreaSVG = documant.createElementNS(SVG_XML_NAMESPACE, \"svg\");\n        highlightAreaSVG.setAttribute(\"pointer-events\", \"none\");\n        highlightAreaSVG.style.position = paginated ? \"fixed\" : \"absolute\";\n        highlightAreaSVG.style.overflow = \"visible\";\n        highlightAreaSVG.style.left = \"0\";\n        highlightAreaSVG.style.top = \"0\";\n        highlightAreaSVG.append(highlightAreaSVGDocFrag);\n        highlightParent.append(highlightAreaSVG);\n    }\n\n    const rangeBoundingClientRect = range.getBoundingClientRect();\n    const highlightBounding = documant.createElement(\"div\") as IHTMLDivElementWithRect;\n    highlightBounding.setAttribute(\"class\", CLASS_HIGHLIGHT_BOUNDING_AREA);\n    if (win.READIUM2.DEBUG_VISUALS) {\n        // tslint:disable-next-line:max-line-length\n        highlightBounding.setAttribute(\"style\", `outline-color: magenta; outline-style: solid; outline-width: 1px; outline-offset: -1px;`);\n    }\n    highlightBounding.style.setProperty(\"pointer-events\", \"none\");\n    highlightBounding.style.position = paginated ? \"fixed\" : \"absolute\";\n    highlightBounding.scale = scale;\n    // highlightBounding.xOffset = xOffset;\n    // highlightBounding.yOffset = yOffset;\n    highlightBounding.rect = {\n        height: rangeBoundingClientRect.height,\n        left: rangeBoundingClientRect.left - xOffset,\n        top: rangeBoundingClientRect.top - yOffset,\n        width: rangeBoundingClientRect.width,\n    };\n    highlightBounding.style.width = `${highlightBounding.rect.width * scale}px`;\n    highlightBounding.style.height = `${highlightBounding.rect.height * scale}px`;\n    highlightBounding.style.left = `${highlightBounding.rect.left * scale}px`;\n    highlightBounding.style.top = `${highlightBounding.rect.top * scale}px`;\n    highlightParent.append(highlightBounding);\n\n    highlightsContainer.append(highlightParent);\n    return highlightParent;\n}\n"]}