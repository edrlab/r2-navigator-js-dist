{"version":3,"file":"readium-css.js","sourceRoot":"","sources":["../../../../../../src/electron/renderer/webview/readium-css.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { ipcRenderer } from \"electron\";\n\nimport {\n    IEventPayload_R2_EVENT_READIUMCSS,\n    R2_EVENT_READIUMCSS,\n} from \"../../common/events\";\nimport { isDocRTL, isDocVertical, isPaginated, readiumCSSSet } from \"../../common/readium-css-inject\";\nimport { READIUM_CSS_URL_PATH } from \"../../common/readium-css-settings\";\nimport {\n    READIUM2_ELECTRON_HTTP_PROTOCOL,\n    convertCustomSchemeToHttpUrl,\n} from \"../../common/sessions\";\nimport { IElectronWebviewTagWindow } from \"./state\";\n\nconst win = (global as any).window as IElectronWebviewTagWindow;\n\nlet origin = win.location.origin;\nif (origin.startsWith(READIUM2_ELECTRON_HTTP_PROTOCOL + \"://\")) {\n    origin = convertCustomSchemeToHttpUrl(win.location.href);\n    origin = origin.replace(/\\/pub\\/.*/, \"\");\n}\nconst urlRootReadiumCSS = origin + \"/\" + READIUM_CSS_URL_PATH + \"/\";\n\n// const urlResizeSensor = win.location.origin + \"/resize-sensor.js\";\n\nexport const calculateMaxScrollShift = (): number => {\n\n    if (!win || !win.document || !win.document.body || !win.document.documentElement) {\n        return 0;\n    }\n\n    const isPaged = isPaginated(win.document);\n\n    const maxScrollShift = isPaged ?\n        ((isVerticalWritingMode() ?\n            (win.document.body.scrollHeight - win.document.documentElement.offsetHeight) :\n            (win.document.body.scrollWidth - win.document.documentElement.offsetWidth))) :\n        ((isVerticalWritingMode() ?\n            (win.document.body.scrollWidth - win.document.documentElement.clientWidth) :\n            (win.document.body.scrollHeight - win.document.documentElement.clientHeight)));\n\n    return maxScrollShift;\n};\n\nexport const isTwoPageSpread = (): boolean => {\n\n    if (!win || !win.document || !win.document.documentElement) {\n        return false;\n    }\n\n    // const bodyStyle = win.getComputedStyle(win.document.body);\n    const docStyle = win.getComputedStyle(win.document.documentElement);\n\n    let docColumnCount: number | undefined;\n    // let docColumnGap: number | undefined;\n    if (docStyle) {\n        docColumnCount = parseInt(docStyle.getPropertyValue(\"column-count\"), 10);\n        // docColumnGap = parseInt(docStyle.getPropertyValue(\"column-gap\"), 10);\n    }\n\n    return docColumnCount === 2;\n};\nexport const calculateTotalColumns = (): number => {\n    if (!win || !win.document || !win.document.body || !isPaginated(win.document)) {\n        return 0;\n    }\n\n    let totalColumns = 0;\n    if (isVerticalWritingMode()) {\n        totalColumns = Math.ceil(win.document.body.offsetWidth / win.document.body.scrollWidth);\n    } else {\n        totalColumns = Math.ceil(win.document.body.offsetHeight / win.document.body.scrollHeight);\n    }\n    return totalColumns;\n};\nexport function calculateColumnDimension(): number {\n    if (!win.document || !win.document.documentElement || !win.document.body || !isPaginated(win.document)) {\n        return 0;\n    }\n\n    // win.document.body.offsetWidth + left/right margins === win.document.documentElement.offsetWidth\n    // margins non-zero in single page view\n\n    const isTwoPage = isTwoPageSpread();\n\n    let columnDimension = 0;\n    if (isVerticalWritingMode()) {\n        columnDimension = win.document.documentElement.offsetHeight;\n    } else {\n        columnDimension = (win.document.documentElement.offsetWidth * (isTwoPage ? 0.5 : 1));\n    }\n    return columnDimension;\n}\n\nlet _isVerticalWritingMode = false;\nexport function isVerticalWritingMode(): boolean {\n    return _isVerticalWritingMode;\n}\n\nlet _isRTL = false;\nexport function isRTL(): boolean {\n    return _isRTL;\n}\n\n// TODO? page-progression-direction\n// tslint:disable-next-line:max-line-length\n// https://github.com/readium/readium-css/blob/develop/docs/CSS16-internationalization.md\n// tslint:disable-next-line:max-line-length\n// https://github.com/readium/readium-css/blob/develop/docs/CSS12-user_prefs.md#user-settings-can-be-language-specific\nexport function computeVerticalRTL() {\n\n    if (!win.document || !win.document.documentElement) {\n        return;\n    }\n\n    let rtl = isDocRTL(win.document);\n    let vertical = isDocVertical(win.document);\n\n    const htmlStyle = win.getComputedStyle(win.document.documentElement);\n    if (htmlStyle) {\n        let prop = htmlStyle.getPropertyValue(\"writing-mode\");\n        if (!prop) {\n            prop = htmlStyle.getPropertyValue(\"-epub-writing-mode\");\n        }\n        if (prop && prop.indexOf(\"vertical\") >= 0) {\n            vertical = true;\n        }\n        if (prop && prop.indexOf(\"-rl\") > 0) {\n            rtl = true;\n        }\n        if (!rtl) {\n            prop = htmlStyle.getPropertyValue(\"direction\");\n            if (prop && prop.indexOf(\"rtl\") >= 0) {\n                rtl = true;\n            }\n        }\n    }\n    if ((!vertical || !rtl) && win.document.body) {\n        const bodyStyle = win.getComputedStyle(win.document.body);\n        if (bodyStyle) {\n            let prop: string;\n            if (!vertical) {\n                prop = bodyStyle.getPropertyValue(\"writing-mode\");\n                if (!prop) {\n                    prop = bodyStyle.getPropertyValue(\"-epub-writing-mode\");\n                }\n                if (prop && prop.indexOf(\"vertical\") >= 0) {\n                    vertical = true;\n                }\n                if (prop && prop.indexOf(\"-rl\") > 0) {\n                    rtl = true;\n                }\n            }\n            if (!rtl) {\n                prop = bodyStyle.getPropertyValue(\"direction\");\n                if (prop && prop.indexOf(\"rtl\") >= 0) {\n                    rtl = true;\n                }\n            }\n        }\n    }\n\n    _isVerticalWritingMode = vertical;\n    _isRTL = rtl;\n}\n\nipcRenderer.on(R2_EVENT_READIUMCSS, (_event: any, payload: IEventPayload_R2_EVENT_READIUMCSS) => {\n    readiumCSS(win.document, payload);\n});\n\nexport const readiumCSS = (documant: Document, messageJson: IEventPayload_R2_EVENT_READIUMCSS) => {\n    console.log(\"urlRootReadiumCSS: \", urlRootReadiumCSS);\n    console.log(\"messageJson.urlRoot: \", messageJson.urlRoot);\n    readiumCSSSet(documant, messageJson, urlRootReadiumCSS, _isVerticalWritingMode, _isRTL);\n};\n\n// // // https://javascript.info/size-and-scroll\n// export function debugCSSMetrics() {\n\n//     if (!win || !win.document || !win.document.documentElement || !win.document.body) {\n//         return;\n//     }\n\n//     // offsetW/H: excludes margin, includes border, scrollbar, padding.\n//     // clientW/H: excludes margin, border, scrollbar, includes padding.\n//     // scrollW/H: like client, but includes hidden (overflow) areas\n\n//     const bodyStyle = win.getComputedStyle(win.document.body);\n//     const docStyle = win.getComputedStyle(win.document.documentElement);\n\n//     console.log(\"--- XXXXX ---\");\n//     console.log(\"webview.innerWidth: \" + win.innerWidth);\n//     console.log(\"document.offsetWidth: \" + win.document.documentElement.offsetWidth);\n//     console.log(\"document.clientWidth: \" + win.document.documentElement.clientWidth);\n//     console.log(\"document.scrollWidth: \" + win.document.documentElement.scrollWidth);\n//     console.log(\"document.scrollLeft: \" + win.document.documentElement.scrollLeft);\n//     if (docStyle) {\n//         let propVal = docStyle.getPropertyValue(\"padding-left\");\n//         const docPaddingLeft = parseInt(propVal, 10);\n//         console.log(\"document.paddingLeft: \" + docPaddingLeft + \" // \" + propVal);\n\n//         propVal = docStyle.getPropertyValue(\"padding-right\");\n//         const docPaddingRight = parseInt(propVal, 10);\n//         console.log(\"document.paddingRight: \" + docPaddingRight + \" // \" + propVal);\n\n//         propVal = docStyle.getPropertyValue(\"margin-left\");\n//         const docMarginLeft = parseInt(propVal, 10);\n//         console.log(\"document.marginLeft: \" + docMarginLeft + \" // \" + propVal);\n\n//         propVal = docStyle.getPropertyValue(\"margin-right\");\n//         const docMarginRight = parseInt(propVal, 10);\n//         console.log(\"document.marginRight: \" + docMarginRight + \" // \" + propVal);\n\n//         const docTotalWidth = win.document.documentElement.offsetWidth + docMarginLeft + docMarginRight;\n//         console.log(\"document.offsetWidth + margins: \" + docTotalWidth);\n//     }\n//     console.log(\"body.offsetWidth: \" + win.document.body.offsetWidth);\n//     console.log(\"body.clientWidth: \" + win.document.body.clientWidth);\n//     console.log(\"body.scrollWidth: \" + win.document.body.scrollWidth);\n//     console.log(\"body.scrollLeft: \" + win.document.body.scrollLeft);\n//     if (bodyStyle) {\n//         let propVal = bodyStyle.getPropertyValue(\"padding-left\");\n//         const bodyPaddingLeft = parseInt(bodyStyle.getPropertyValue(\"padding-left\"), 10);\n//         console.log(\"body.paddingLeft: \" + bodyPaddingLeft + \" // \" + propVal);\n\n//         propVal = bodyStyle.getPropertyValue(\"padding-right\");\n//         const bodyPaddingRight = parseInt(propVal, 10);\n//         console.log(\"body.paddingRight: \" + bodyPaddingRight + \" // \" + propVal);\n\n//         propVal = bodyStyle.getPropertyValue(\"margin-left\");\n//         const bodyMarginLeft = parseInt(propVal, 10);\n//         console.log(\"body.marginLeft: \" + bodyMarginLeft + \" // \" + propVal);\n\n//         propVal = bodyStyle.getPropertyValue(\"margin-right\");\n//         const bodyMarginRight = parseInt(propVal, 10);\n//         console.log(\"body.marginRight: \" + bodyMarginRight + \" // \" + propVal);\n\n//         const bodyTotalWidth = win.document.body.offsetWidth + bodyMarginLeft + bodyMarginRight;\n//         console.log(\"body.offsetWidth + margins: \" + bodyTotalWidth);\n\n//         console.log(\"--- X factor: \" + (win.document.documentElement.offsetWidth / bodyTotalWidth));\n//     }\n//     console.log(\"--- YYYYY ---\");\n//     console.log(\"webview.innerHeight: \" + win.innerHeight);\n//     console.log(\"document.offsetHeight: \" + win.document.documentElement.offsetHeight);\n//     console.log(\"document.clientHeight: \" + win.document.documentElement.clientHeight);\n//     console.log(\"document.scrollHeight: \" + win.document.documentElement.scrollHeight);\n//     console.log(\"document.scrollTop: \" + win.document.documentElement.scrollTop);\n//     if (docStyle) {\n//         let propVal = docStyle.getPropertyValue(\"padding-top\");\n//         const docPaddingTop = parseInt(propVal, 10);\n//         console.log(\"document.paddingTop: \" + docPaddingTop + \" // \" + propVal);\n\n//         propVal = docStyle.getPropertyValue(\"padding-bottom\");\n//         const docPaddingBottom = parseInt(propVal, 10);\n//         console.log(\"document.paddingBottom: \" + docPaddingBottom + \" // \" + propVal);\n\n//         propVal = docStyle.getPropertyValue(\"margin-top\");\n//         const docMarginTop = parseInt(propVal, 10);\n//         console.log(\"document.marginTop: \" + docMarginTop + \" // \" + propVal);\n\n//         propVal = docStyle.getPropertyValue(\"margin-bottom\");\n//         const docMarginBottom = parseInt(propVal, 10);\n//         console.log(\"document.marginBottom: \" + docMarginBottom + \" // \" + propVal);\n\n//         const docTotalHeight = win.document.documentElement.offsetHeight + docMarginTop + docMarginBottom;\n//         console.log(\"document.offsetHeight + margins: \" + docTotalHeight);\n//     }\n//     console.log(\"body.offsetHeight: \" + win.document.body.offsetHeight);\n//     console.log(\"body.clientHeight: \" + win.document.body.clientHeight);\n//     console.log(\"body.scrollHeight: \" + win.document.body.scrollHeight);\n//     console.log(\"body.scrollTop: \" + win.document.body.scrollTop);\n//     if (bodyStyle) {\n//         let propVal = bodyStyle.getPropertyValue(\"padding-top\");\n//         const bodyPaddingTop = parseInt(propVal, 10);\n//         console.log(\"body.paddingTop: \" + bodyPaddingTop);\n\n//         propVal = bodyStyle.getPropertyValue(\"padding-bottom\");\n//         const bodyPaddingBottom = parseInt(propVal, 10);\n//         console.log(\"body.paddingBottom: \" + bodyPaddingBottom);\n\n//         propVal = bodyStyle.getPropertyValue(\"margin-top\");\n//         const bodyMarginTop = parseInt(propVal, 10);\n//         console.log(\"body.marginTop: \" + bodyMarginTop);\n\n//         propVal = bodyStyle.getPropertyValue(\"margin-bottom\");\n//         const bodyMarginBottom = parseInt(propVal, 10);\n//         console.log(\"body.marginBottom: \" + bodyMarginBottom);\n\n//         const bodyTotalHeight = win.document.body.offsetHeight + bodyMarginTop + bodyMarginBottom;\n//         console.log(\"body.offsetHeight + margins: \" + bodyTotalHeight);\n\n//         console.log(\"--- Y factor: \" + (win.document.documentElement.offsetHeight / bodyTotalHeight));\n//     }\n//     console.log(\"---\");\n// }\n"]}