{"version":3,"file":"popupFootNotes.js","sourceRoot":"","sources":["../../../../../../src/electron/renderer/webview/popupFootNotes.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as path from \"path\";\n\nimport {\n    CSS_CLASS_NO_FOCUS_OUTLINE, FOOTNOTES_CONTAINER_CLASS, ROOT_CLASS_NO_FOOTNOTES,\n} from \"../../common/styles\";\nimport { PopupDialog } from \"../common/popup-dialog\";\n\n// import {\n//     READIUM2_ELECTRON_HTTP_PROTOCOL, convertCustomSchemeToHttpUrl,\n// } from \"../../common/sessions\";\n\nexport async function popupFootNote(\n    element: HTMLElement,\n    focusScrollRaw:\n        (el: HTMLOrSVGElement, doFocus: boolean, animate: boolean, domRect: DOMRect | undefined) => void,\n    href: string,\n    ensureTwoPageSpreadWithOddColumnsIsOffsetTempDisable: () => number,\n    ensureTwoPageSpreadWithOddColumnsIsOffsetReEnable: (val: number) => void,\n): Promise<boolean> {\n\n    let documant = element.ownerDocument as Document;\n\n    if (!documant.documentElement ||\n        documant.documentElement.classList.contains(ROOT_CLASS_NO_FOOTNOTES)) {\n        return false;\n    }\n\n    let epubType = element.getAttribute(\"epub:type\");\n    if (!epubType) {\n        epubType = element.getAttributeNS(\"http://www.idpf.org/2007/ops\", \"type\");\n        if (!epubType) {\n            epubType = element.getAttribute(\"role\");\n        }\n    }\n    if (!epubType) {\n        return false;\n    }\n    epubType = epubType.trim().replace(/\\s\\s+/g, \" \"); // whitespace collapse\n\n\n    // epubType.indexOf(\"biblioref\") >= 0 ||\n    // epubType.indexOf(\"glossref\") >= 0 ||\n    // epubType.indexOf(\"annoref\") >= 0\n    const isNoteref = epubType.indexOf(\"noteref\") >= 0 // this includes doc-* below\n        // || epubType.indexOf(\"doc-noteref\") >= 0\n    ;\n    if (!isNoteref) {\n        return false;\n    }\n\n    const url = new URL(href,\n        // edge case: SVG a@href animVal doesn't automatically resolve full absolute URL\n        href.startsWith(\"#\") ? documant.location.href : undefined);\n    if (!url.hash) { // includes #\n        return false;\n    }\n\n    const hrefSelf = documant.location.href;\n    // if (hrefSelf.startsWith(READIUM2_ELECTRON_HTTP_PROTOCOL + \"://\")) {\n    //     hrefSelf = convertCustomSchemeToHttpUrl(hrefSelf);\n    // }\n    const urlSelf = new URL(hrefSelf);\n    if (urlSelf.protocol !== url.protocol ||\n        urlSelf.origin !== url.origin) {\n\n        return false;\n    }\n\n    if (urlSelf.pathname !== url.pathname) {\n        try {\n            const res = await fetch(href);\n            const txt = await res.text();\n            const domparser = new DOMParser();\n            documant = domparser.parseFromString(\n                txt,\n                \"application/xhtml+xml\");\n\n            const aNodeList = documant.querySelectorAll(\"a[href]\");\n\n            // tslint:disable-next-line:prefer-for-of\n            for (let i = 0; i < aNodeList.length; i++) {\n                const aNode = aNodeList[i];\n                const href = aNode.getAttribute(\"href\");\n                if (!href\n                    // || !href.startsWith(\".\")\n                    || href.startsWith(\"/\")\n                    || href.startsWith(\"data:\")\n                    || /^https?:\\/\\//.test(href)) {\n                    continue;\n                }\n\n                // HTMLLinkElement\n                // let linkHref = (aNode as HTMLAnchorElement | SVGAElement).href;\n                // if (!linkHref) {\n                //     continue;\n                // }\n                // if ((linkHref as SVGAnimatedString).animVal) {\n                //     linkHref = (linkHref as SVGAnimatedString).animVal;\n\n                //     if (!linkHref) {\n                //         continue;\n                //     }\n                // }\n                // const linkUrl = new URL(linkHref as string);\n\n                // we want linkHref (full URL) expressed as path relative to urlSelf (also full URL)\n                const from = path.dirname(urlSelf.pathname).replace(/\\\\/g, \"/\");\n                const too = url.pathname;\n                const relFromMainToNotes = path.relative(\n                    from,\n                    too,\n                ).replace(/\\\\/g, \"/\");\n                const relPath = relFromMainToNotes + \"/../\" + href;\n                console.log(from, too, relFromMainToNotes, relPath);\n\n                // const newUrl = new URL(linkHref as string, urlSelf);\n                // console.log(\n                //     href.replace(urlSelf.origin, \"\"),\n                //     (linkHref as string).replace(urlSelf.origin, \"\"),\n                //     (new URL(href, url)).toString().replace(urlSelf.origin, \"\"),\n                //     newUrl.toString().replace(urlSelf.origin, \"\"));\n\n                aNode.setAttribute(\"href\", relPath);\n            }\n\n        } catch (e) {\n            console.log(\"EPUB FOOTNOTE FETCH FAIL: \" + href, e);\n            return false;\n        }\n    }\n\n    // ==> we're in preload here, so not streamer-injected\n    // (unlike checkHiddenFootNotes() called from readium-css.ts)\n    //\n    // if (!documant.querySelector) { // TODO: polyfill querySelector[All]() ?\n    //     return; // when streamer-injected\n    // }\n    // ... AND even when we fetch an external HTML document,\n    // we use the webview DOM parser (not the NodeJS XML parser)\n\n    // const targetElement = win.document.getElementById(url.hash.substr(1));\n    const targetElement = documant.querySelector(url.hash); // documant.getElementById(url.substring(1));\n    if (!targetElement) {\n        return false;\n    }\n\n    // const existingDialog = documant.getElementById(id) as IHTMLDialogElementWithPopup;\n    // if (existingDialog && existingDialog.popDialog) {\n    //     existingDialog.popDialog.show(element);\n    //     return true;\n    // }\n\n    let htmltxt = targetElement.innerHTML;\n    if (!htmltxt) {\n        return false;\n    }\n\n    htmltxt = htmltxt.replace(/xmlns=[\"']http:\\/\\/www.w3.org\\/1999\\/xhtml[\"']/g, \" \");\n    htmltxt = htmltxt.replace(/xmlns:epub=[\"']http:\\/\\/www.idpf.org\\/2007\\/ops[\"']/g, \" \");\n    // htmltxt = htmltxt.replace(/epub:type=[\"'][^\"']+[\"']/g, \" \");\n    htmltxt = htmltxt.replace(/<script>.+<\\/script>/g, \" \");\n\n    const ID_PREFIX_ = \"r2-footnote-for_\";\n    const id_ = ID_PREFIX_ + targetElement.id;\n    // htmltxt = htmltxt.replace(/id=[\"'][^\"']+[\"']/, `id=\"${id_}\"`);\n    htmltxt = htmltxt.replace(/id=[\"']([^\"']+)[\"']/g, \"idvoid=\\\"$1\\\"\"); // remove duplicate IDs\n\n    // tslint:disable-next-line:max-line-length\n    htmltxt = `<div id=\"${id_}\" class=\"${FOOTNOTES_CONTAINER_CLASS} ${CSS_CLASS_NO_FOCUS_OUTLINE}\" tabindex=\"0\" autofocus=\"autofocus\">${htmltxt}</div>`;\n\n    // htmltxt = htmltxt.replace(/click=[\"']javascript:.+[\"']/g, \" \");\n    // console.log(htmltxt);\n\n    // import * as xmldom from \"@xmldom/xmldom\";\n    // not application/xhtml+xml because:\n    // https://github.com/jindw/xmldom/pull/208\n    // https://github.com/jindw/xmldom/pull/242\n    // https://github.com/xmldom/xmldom/blob/3db6ccf3f7ecbde73608490d71f96c727abdd69a/lib/dom-parser.js#L12\n    // const dom = new xmldom.DOMParser().parseFromString(htmltxt, \"application/xhtml\");\n\n    // const payload_: IEventPayload_R2_EVENT_LINK_FOOTNOTE = {\n    //     hash: url.hash,\n    //     html: htmltxt,\n    //     url: href,\n    // };\n    // ipcRenderer.sendToHost(R2_EVENT_LINK_FOOTNOTE, payload_);\n\n    const val = ensureTwoPageSpreadWithOddColumnsIsOffsetTempDisable();\n\n    function onDialogClosed(el: HTMLOrSVGElement | null) {\n\n        if (el) {\n            focusScrollRaw(el, true, true, undefined);\n        } else {\n            ensureTwoPageSpreadWithOddColumnsIsOffsetReEnable(val);\n        }\n\n        setTimeout(() => {\n            pop.dialog.remove();\n        }, 50);\n    }\n    const pop = new PopupDialog(element.ownerDocument as Document, htmltxt, onDialogClosed);\n    pop.show(element);\n\n    return true;\n}\n"]}