{"version":3,"file":"soundtrack.js","sourceRoot":"","sources":["../../../../../src/electron/renderer/soundtrack.ts"],"names":[],"mappings":";;;AAOA,2CAE0B;AAM1B,SAAgB,0BAA0B,CACtC,YAAoB,EACpB,SAAgB,EAChB,mBAA4C;IAE5C,IAAI,YAAY,KAAK,kCAAyB,EAAE;QAE5C,IAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAA4C,CAAC;QACxE,qBAAqB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KACtC;SAAM;QACH,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAbD,gEAaC;AAED,IAAM,mBAAmB,GAAG,wBAAwB,CAAC;AACrD,IAAI,uBAA2C,CAAC;AAChD,SAAS,qBAAqB,CAAC,GAAW;IACtC,IAAI,GAAG,KAAK,uBAAuB,EAAE;QACjC,OAAO;KACV;IACD,uBAAuB,GAAG,GAAG,CAAC;IAC9B,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;IAC3D,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,EAAE;QAC/B,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KAC3C;IACD,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC1C,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;IAC/C,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IAChD,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACjC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACrC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAC7C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC;IAClD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport {\n    IEventPayload_R2_EVENT_AUDIO_SOUNDTRACK, R2_EVENT_AUDIO_SOUNDTRACK,\n} from \"../common/events\";\nimport { IReadiumElectronWebview } from \"./webview/state\";\n\n// const IS_DEV = (process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"dev\");\n// const win = window as IReadiumElectronBrowserWindow;\n\nexport function soundtrackHandleIpcMessage(\n    eventChannel: string,\n    eventArgs: any[],\n    _eventCurrentTarget: IReadiumElectronWebview): boolean {\n\n    if (eventChannel === R2_EVENT_AUDIO_SOUNDTRACK) {\n        // debug(\"R2_EVENT_AUDIO_SOUNDTRACK (webview.addEventListener('ipc-message')\");\n        const payload = eventArgs[0] as IEventPayload_R2_EVENT_AUDIO_SOUNDTRACK;\n        handleAudioSoundTrack(payload.url);\n    } else {\n        return false;\n    }\n    return true;\n}\n\nconst AUDIO_SOUNDTRACK_ID = \"R2_AUDIO_SOUNDTRACK_ID\";\nlet _currentAudioSoundTrack: string | undefined;\nfunction handleAudioSoundTrack(url: string) {\n    if (url === _currentAudioSoundTrack) {\n        return;\n    }\n    _currentAudioSoundTrack = url;\n    let audioEl = document.getElementById(AUDIO_SOUNDTRACK_ID);\n    if (audioEl && audioEl.parentNode) {\n        audioEl.parentNode.removeChild(audioEl);\n    }\n    audioEl = document.createElement(\"audio\"); // no controls => should be invisible\n    audioEl.setAttribute(\"style\", \"display: none\");\n    audioEl.setAttribute(\"id\", AUDIO_SOUNDTRACK_ID);\n    audioEl.setAttribute(\"src\", url);\n    audioEl.setAttribute(\"loop\", \"loop\");\n    audioEl.setAttribute(\"autoplay\", \"autoplay\");\n    audioEl.setAttribute(\"role\", \"ibooks:soundtrack\"); // epub:type\n    document.body.appendChild(audioEl);\n}\n"]}