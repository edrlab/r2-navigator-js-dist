{"version":3,"file":"readaloud.js","sourceRoot":"","sources":["../../../../../src/electron/renderer/readaloud.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as debounce from \"debounce\";\n\nimport {\n    IEventPayload_R2_EVENT_TTS_CLICK_ENABLE, IEventPayload_R2_EVENT_TTS_DO_NEXT_OR_PREVIOUS,\n    IEventPayload_R2_EVENT_TTS_DO_PLAY, IEventPayload_R2_EVENT_TTS_OVERLAY_ENABLE,\n    IEventPayload_R2_EVENT_TTS_PLAYBACK_RATE, IEventPayload_R2_EVENT_TTS_SENTENCE_DETECT_ENABLE,\n    IEventPayload_R2_EVENT_TTS_SKIP_ENABLE, R2_EVENT_TTS_SKIP_ENABLE,\n    IEventPayload_R2_EVENT_TTS_VOICE, R2_EVENT_READING_LOCATION, R2_EVENT_TTS_CLICK_ENABLE,\n    R2_EVENT_TTS_DOC_END, R2_EVENT_TTS_DO_NEXT, R2_EVENT_TTS_DO_PAUSE, R2_EVENT_TTS_DO_PLAY,\n    R2_EVENT_TTS_DO_PREVIOUS, R2_EVENT_TTS_DO_RESUME, R2_EVENT_TTS_DO_STOP, R2_EVENT_TTS_IS_PAUSED,\n    R2_EVENT_TTS_IS_PLAYING, R2_EVENT_TTS_IS_STOPPED, R2_EVENT_TTS_OVERLAY_ENABLE,\n    R2_EVENT_TTS_PLAYBACK_RATE, R2_EVENT_TTS_SENTENCE_DETECT_ENABLE, R2_EVENT_TTS_VOICE,\n} from \"../common/events\";\nimport { getCurrentReadingLocation, navLeftOrRight } from \"./location\";\nimport { isRTL } from \"./readium-css\";\nimport { ReadiumElectronBrowserWindow, IReadiumElectronWebview } from \"./webview/state\";\n\n// import * as debug_ from \"debug\";\n// const debug = debug_(\"r2:navigator#electron/renderer/index\");\n// const IS_DEV = (process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"dev\");\n\nconst win = global.window as ReadiumElectronBrowserWindow;\n\nlet _lastTTSWebView: IReadiumElectronWebview | undefined;\nlet _lastTTSWebViewHref: string | undefined;\nlet _ttsAutoPlayTimeout: number | undefined;\nexport function checkTtsState(wv: IReadiumElectronWebview) {\n    let wasStopped = false;\n    if (_lastTTSWebView && _lastTTSWebViewHref) {\n\n        if (win.READIUM2.ttsClickEnabled ||\n            !win.READIUM2.getActiveWebViews().includes(_lastTTSWebView) ||\n            !win.READIUM2.getActiveWebViews().find((webview) => webview.READIUM2.link?.Href === _lastTTSWebViewHref)) {\n\n            wasStopped = true;\n\n            setTimeout(() => {\n                win.speechSynthesis.cancel();\n            }, 0);\n\n            _lastTTSWebView = undefined;\n            _lastTTSWebViewHref = undefined;\n            if (_ttsListener) {\n                _ttsListener(TTSStateEnum.STOPPED);\n            }\n        }\n    }\n\n    checkTtsStateDebounced(wasStopped, wv);\n}\nconst checkTtsStateDebounced = debounce(checkTtsStateRaw, 400);\nfunction checkTtsStateRaw(wasStopped: boolean, wv: IReadiumElectronWebview) {\n\n    if (wasStopped || win.READIUM2.ttsClickEnabled) {\n        if (wv.READIUM2.link?.Href) {\n            if (_ttsAutoPlayTimeout) {\n                win.clearTimeout(_ttsAutoPlayTimeout);\n                _ttsAutoPlayTimeout = undefined;\n            }\n            _ttsAutoPlayTimeout = win.setTimeout(() => {\n                _ttsAutoPlayTimeout = undefined;\n\n                if (!_lastTTSWebView && wv.READIUM2.link?.Href) {\n\n                    _lastTTSWebView = wv;\n                    _lastTTSWebViewHref = wv.READIUM2.link.Href;\n                    playTtsOnReadingLocation(wv.READIUM2.link.Href);\n                }\n            }, 100);\n        }\n    }\n}\nexport function playTtsOnReadingLocation(href: string) {\n    const activeWebView = win.READIUM2.getActiveWebViews().find((webview) => {\n        return webview.READIUM2.link?.Href === href;\n    });\n    if (activeWebView) {\n        let done = false;\n        const cb = (event: Electron.IpcMessageEvent) => {\n            if (event.channel === R2_EVENT_READING_LOCATION) {\n                const webview = event.currentTarget as IReadiumElectronWebview;\n                if (webview !== activeWebView) {\n                    console.log(\"Wrong navigator webview?!\");\n                    return;\n                }\n                done = true;\n                activeWebView.removeEventListener(\"ipc-message\", cb);\n                if (activeWebView.READIUM2.link?.Href === href) {\n                    ttsPlay(win.READIUM2.ttsPlaybackRate, win.READIUM2.ttsVoice);\n                }\n            }\n        };\n        setTimeout(() => {\n            if (done) {\n                return;\n            }\n            try {\n                activeWebView.removeEventListener(\"ipc-message\", cb);\n            } catch (err) {\n                console.log(err);\n            }\n            const activeWebView_ = win.READIUM2.getActiveWebViews().find((webview) => {\n                return webview.READIUM2.link?.Href === href;\n            });\n            if (activeWebView_) {\n                ttsPlay(win.READIUM2.ttsPlaybackRate, win.READIUM2.ttsVoice);\n            }\n        }, 1000);\n        activeWebView.addEventListener(\"ipc-message\", cb);\n    }\n}\nexport function ttsHandleIpcMessage(\n    eventChannel: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _eventArgs: any[],\n    eventCurrentTarget: IReadiumElectronWebview): boolean {\n\n    if (eventChannel === R2_EVENT_TTS_IS_PAUSED) {\n        _lastTTSWebView = eventCurrentTarget;\n        _lastTTSWebViewHref = eventCurrentTarget.READIUM2.link?.Href;\n        if (_ttsListener) {\n            _ttsListener(TTSStateEnum.PAUSED);\n        }\n    } else if (eventChannel === R2_EVENT_TTS_IS_STOPPED) {\n        _lastTTSWebView = undefined;\n        _lastTTSWebViewHref = undefined;\n        if (_ttsListener) {\n            _ttsListener(TTSStateEnum.STOPPED);\n        }\n    } else if (eventChannel === R2_EVENT_TTS_IS_PLAYING) {\n        _lastTTSWebView = eventCurrentTarget;\n        _lastTTSWebViewHref = eventCurrentTarget.READIUM2.link?.Href;\n        if (_ttsListener) {\n            _ttsListener(TTSStateEnum.PLAYING);\n        }\n    } else if (eventChannel === R2_EVENT_TTS_DOC_END) {\n        // _lastTTSWebView = undefined;\n        // _lastTTSWebViewHref = undefined;\n        // if (_ttsListener) {\n        //     _ttsListener(TTSStateEnum.STOPPED);\n        // }\n        // const nextSpine =\n        navLeftOrRight(isRTL(), true, true);\n        // if (nextSpine) {\n        //     setTimeout(() => {\n        //         playTtsOnReadingLocation(nextSpine.Href);\n        //     }, 200);\n        // }\n    } else {\n        return false;\n    }\n    // else if (eventChannel === R2_EVENT_TTS_PLAYBACK_RATE) {\n    //     // debug(\"R2_EVENT_TTS_PLAYBACK_RATE (webview.addEventListener('ipc-message')\");\n    //     const payload = eventArgs[0] as IEventPayload_R2_EVENT_TTS_PLAYBACK_RATE;\n    //     setCurrentTTSPlaybackRate(payload.speed);\n    // }\n    return true;\n}\n\nexport enum TTSStateEnum {\n    PAUSED = \"PAUSED\",\n    PLAYING = \"PLAYING\",\n    STOPPED = \"STOPPED\",\n}\nlet _ttsListener: ((ttsState: TTSStateEnum) => void) | undefined;\nexport function ttsListen(ttsListener: (ttsState: TTSStateEnum) => void) {\n    _ttsListener = ttsListener;\n}\n\nexport function ttsPlay(speed: number, voice: SpeechSynthesisVoice | null) {\n    if (win.READIUM2) {\n        win.READIUM2.ttsPlaybackRate = speed;\n        win.READIUM2.ttsVoice = voice;\n    }\n\n    let startElementCSSSelector: string | undefined;\n    const loc = getCurrentReadingLocation();\n\n    let activeWebView = win.READIUM2.getActiveWebViews().find((webview) => {\n        return loc && loc.locator.href && loc.locator.href === webview.READIUM2.link?.Href;\n    });\n    if (loc && activeWebView) {\n        startElementCSSSelector = loc.locator.locations.cssSelector;\n    }\n    if (!activeWebView) {\n        activeWebView = win.READIUM2.getFirstWebView();\n    }\n    _lastTTSWebView = activeWebView;\n    _lastTTSWebViewHref = undefined;\n    if (!activeWebView) {\n        return;\n    }\n    _lastTTSWebViewHref = activeWebView.READIUM2.link?.Href;\n\n    const payload: IEventPayload_R2_EVENT_TTS_DO_PLAY = {\n        rootElement: \"html > body\", // win.document.body\n        speed,\n        startElement: startElementCSSSelector,\n        voice,\n    };\n\n    setTimeout(async () => {\n        if (activeWebView) {\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_DO_PLAY, payload);\n            }\n        }\n    }, 0);\n}\n\nexport function ttsPause() {\n    const activeWebViews = win.READIUM2.getActiveWebViews();\n    for (const activeWebView of activeWebViews) {\n        if (_lastTTSWebView && _lastTTSWebView !== activeWebView) {\n            continue;\n        }\n        setTimeout(async () => {\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_DO_PAUSE);\n            }\n        }, 0);\n    }\n}\nexport function ttsStop() {\n    const activeWebViews = win.READIUM2.getActiveWebViews();\n    for (const activeWebView of activeWebViews) {\n        if (_lastTTSWebView && _lastTTSWebView !== activeWebView) {\n            continue;\n        }\n        _lastTTSWebView = undefined;\n        _lastTTSWebViewHref = undefined;\n        setTimeout(async () => {\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_DO_STOP);\n            }\n        }, 0);\n    }\n}\nexport function ttsResume() {\n    const activeWebViews = win.READIUM2.getActiveWebViews();\n    for (const activeWebView of activeWebViews) {\n        if (_lastTTSWebView && _lastTTSWebView !== activeWebView) {\n            continue;\n        }\n        setTimeout(async () => {\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_DO_RESUME);\n            }\n        }, 0);\n    }\n}\nexport function ttsPrevious(skipSentences = false) {\n    const activeWebViews = win.READIUM2.getActiveWebViews();\n    for (const activeWebView of activeWebViews) {\n        if (_lastTTSWebView && _lastTTSWebView !== activeWebView) {\n            continue;\n        }\n        setTimeout(async () => {\n            const payload: IEventPayload_R2_EVENT_TTS_DO_NEXT_OR_PREVIOUS = {\n                skipSentences,\n            };\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_DO_PREVIOUS, payload);\n            }\n        }, 0);\n    }\n}\nexport function ttsNext(skipSentences = false) {\n    const activeWebViews = win.READIUM2.getActiveWebViews();\n    for (const activeWebView of activeWebViews) {\n        if (_lastTTSWebView && _lastTTSWebView !== activeWebView) {\n            continue;\n        }\n        setTimeout(async () => {\n            const payload: IEventPayload_R2_EVENT_TTS_DO_NEXT_OR_PREVIOUS = {\n                skipSentences,\n            };\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_DO_NEXT, payload);\n            }\n        }, 0);\n    }\n}\n\nexport function ttsOverlayEnable(doEnable: boolean) {\n    if (win.READIUM2) {\n        win.READIUM2.ttsOverlayEnabled = doEnable;\n    }\n\n    const activeWebViews = win.READIUM2.getActiveWebViews();\n    for (const activeWebView of activeWebViews) {\n        setTimeout(async () => {\n            const payload: IEventPayload_R2_EVENT_TTS_OVERLAY_ENABLE = {\n                doEnable,\n            };\n\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_OVERLAY_ENABLE, payload);\n            }\n        }, 0);\n    }\n}\n\nexport function ttsClickEnable(doEnable: boolean) {\n    if (win.READIUM2) {\n        win.READIUM2.ttsClickEnabled = doEnable;\n    }\n\n    const activeWebViews = win.READIUM2.getActiveWebViews();\n    for (const activeWebView of activeWebViews) {\n        setTimeout(async () => {\n            const payload: IEventPayload_R2_EVENT_TTS_CLICK_ENABLE = {\n                doEnable,\n            };\n\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_CLICK_ENABLE, payload);\n            }\n        }, 0);\n    }\n}\n\nexport function ttsVoice(voice: SpeechSynthesisVoice | null) {\n    if (win.READIUM2) {\n        win.READIUM2.ttsVoice = voice;\n    }\n\n    const activeWebViews = win.READIUM2.getActiveWebViews();\n    for (const activeWebView of activeWebViews) {\n        const payload: IEventPayload_R2_EVENT_TTS_VOICE = {\n            voice,\n        };\n        setTimeout(async () => {\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_VOICE, payload);\n            }\n        }, 0);\n    }\n}\n\nexport function ttsPlaybackRate(speed: number) {\n    if (win.READIUM2) {\n        win.READIUM2.ttsPlaybackRate = speed;\n    }\n\n    const activeWebViews = win.READIUM2.getActiveWebViews();\n    for (const activeWebView of activeWebViews) {\n        const payload: IEventPayload_R2_EVENT_TTS_PLAYBACK_RATE = {\n            speed,\n        };\n        setTimeout(async () => {\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_PLAYBACK_RATE, payload);\n            }\n        }, 0);\n    }\n}\n\nexport function ttsSkippabilityEnable(doEnable: boolean) {\n\n    if (win.READIUM2) {\n        win.READIUM2.ttsSkippabilityEnabled = doEnable;\n    }\n\n    const activeWebViews = win.READIUM2.getActiveWebViews();\n    for (const activeWebView of activeWebViews) {\n        setTimeout(async () => {\n            const payload: IEventPayload_R2_EVENT_TTS_SKIP_ENABLE = {\n                doEnable,\n            };\n\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_SKIP_ENABLE, payload);\n            }\n        }, 0);\n    }\n}\n\nexport function ttsSentenceDetectionEnable(doEnable: boolean) {\n\n    if (win.READIUM2) {\n        win.READIUM2.ttsSentenceDetectionEnabled = doEnable;\n    }\n\n    const activeWebViews = win.READIUM2.getActiveWebViews();\n    for (const activeWebView of activeWebViews) {\n        setTimeout(async () => {\n            const payload: IEventPayload_R2_EVENT_TTS_SENTENCE_DETECT_ENABLE = {\n                doEnable,\n            };\n\n            if (activeWebView.READIUM2?.DOMisReady) {\n                await activeWebView.send(R2_EVENT_TTS_SENTENCE_DETECT_ENABLE, payload);\n            }\n        }, 0);\n    }\n}\n"]}