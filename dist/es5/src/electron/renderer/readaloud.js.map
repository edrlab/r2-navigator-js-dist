{"version":3,"file":"readaloud.js","sourceRoot":"","sources":["../../../../../src/electron/renderer/readaloud.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport {\n    IEventPayload_R2_EVENT_TTS_CLICK_ENABLE, IEventPayload_R2_EVENT_TTS_DO_PLAY,\n    R2_EVENT_TTS_CLICK_ENABLE, R2_EVENT_TTS_DO_NEXT, R2_EVENT_TTS_DO_PAUSE, R2_EVENT_TTS_DO_PLAY,\n    R2_EVENT_TTS_DO_PREVIOUS, R2_EVENT_TTS_DO_RESUME, R2_EVENT_TTS_DO_STOP, R2_EVENT_TTS_IS_PAUSED,\n    R2_EVENT_TTS_IS_PLAYING, R2_EVENT_TTS_IS_STOPPED,\n} from \"../common/events\";\nimport { getCurrentReadingLocation } from \"./location\";\nimport { IReadiumElectronBrowserWindow, IReadiumElectronWebview } from \"./webview/state\";\n\n// import * as debug_ from \"debug\";\n// const debug = debug_(\"r2:navigator#electron/renderer/index\");\n// const IS_DEV = (process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"dev\");\n\nexport function ttsHandleIpcMessage(\n    eventChannel: string,\n    _eventArgs: any[],\n    _eventCurrentTarget: IReadiumElectronWebview): boolean {\n\n    if (eventChannel === R2_EVENT_TTS_IS_PAUSED) {\n        if (_ttsListener) {\n            _ttsListener(TTSStateEnum.PAUSED);\n        }\n    } else if (eventChannel === R2_EVENT_TTS_IS_STOPPED) {\n        if (_ttsListener) {\n            _ttsListener(TTSStateEnum.STOPPED);\n        }\n    } else if (eventChannel === R2_EVENT_TTS_IS_PLAYING) {\n        if (_ttsListener) {\n            _ttsListener(TTSStateEnum.PLAYING);\n        }\n    } else {\n        return false;\n    }\n    return true;\n}\n\nexport enum TTSStateEnum {\n    PAUSED = \"PAUSED\",\n    PLAYING = \"PLAYING\",\n    STOPPED = \"STOPPED\",\n}\nlet _ttsListener: ((ttsState: TTSStateEnum) => void) | undefined;\nexport function ttsListen(ttsListener: (ttsState: TTSStateEnum) => void) {\n    _ttsListener = ttsListener;\n}\n\nexport function ttsPlay() {\n    const activeWebView = (window as IReadiumElectronBrowserWindow).READIUM2.getActiveWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    let startElementCSSSelector: string | undefined;\n    const loc = getCurrentReadingLocation();\n    if (loc && activeWebView.READIUM2 && activeWebView.READIUM2.link) {\n        if (loc.locator.href === activeWebView.READIUM2.link.Href) {\n            startElementCSSSelector = loc.locator.locations.cssSelector;\n        }\n    }\n\n    const payload: IEventPayload_R2_EVENT_TTS_DO_PLAY = {\n        rootElement: \"html > body\", // window.document.body\n        startElement: startElementCSSSelector,\n    };\n\n    setTimeout(async () => {\n        await activeWebView.send(R2_EVENT_TTS_DO_PLAY, payload);\n    }, 0);\n}\n\nexport function ttsPause() {\n    const activeWebView = (window as IReadiumElectronBrowserWindow).READIUM2.getActiveWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    setTimeout(async () => {\n        await activeWebView.send(R2_EVENT_TTS_DO_PAUSE);\n    }, 0);\n}\nexport function ttsStop() {\n    const activeWebView = (window as IReadiumElectronBrowserWindow).READIUM2.getActiveWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    setTimeout(async () => {\n        await activeWebView.send(R2_EVENT_TTS_DO_STOP);\n    }, 0);\n}\nexport function ttsResume() {\n    const activeWebView = (window as IReadiumElectronBrowserWindow).READIUM2.getActiveWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    setTimeout(async () => {\n        await activeWebView.send(R2_EVENT_TTS_DO_RESUME);\n    }, 0);\n}\nexport function ttsPrevious() {\n    const activeWebView = (window as IReadiumElectronBrowserWindow).READIUM2.getActiveWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    setTimeout(async () => {\n        await activeWebView.send(R2_EVENT_TTS_DO_PREVIOUS);\n    }, 0);\n}\nexport function ttsNext() {\n    const activeWebView = (window as IReadiumElectronBrowserWindow).READIUM2.getActiveWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    setTimeout(async () => {\n        await activeWebView.send(R2_EVENT_TTS_DO_NEXT);\n    }, 0);\n}\n\nexport function ttsClickEnable(doEnable: boolean) {\n\n    if ((window as IReadiumElectronBrowserWindow).READIUM2) {\n        (window as IReadiumElectronBrowserWindow).READIUM2.ttsClickEnabled = doEnable;\n    }\n\n    const activeWebView = (window as IReadiumElectronBrowserWindow).READIUM2.getActiveWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    const payload: IEventPayload_R2_EVENT_TTS_CLICK_ENABLE = {\n        doEnable,\n    };\n\n    setTimeout(async () => {\n        await activeWebView.send(R2_EVENT_TTS_CLICK_ENABLE, payload);\n    }, 0);\n}\n"]}