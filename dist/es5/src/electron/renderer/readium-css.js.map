{"version":3,"file":"readium-css.js","sourceRoot":"","sources":["../../../../../src/electron/renderer/readium-css.ts"],"names":[],"mappings":";;;AAYA,IAAM,GAAG,GAAG,MAAuC,CAAC;AAEpD,IAAM,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC;AAE1F,SAAgB,KAAK;IAUjB,IAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC;IAE7C,IAAI,WAAW;QACX,WAAW,CAAC,QAAQ;QACpB,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE;QAChC,OAAO,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC;KACjE;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAlBD,sBAkBC;AAED,SAAgB,aAAa,CAAC,IAAsB;IAChD,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;QACzB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,OAAO,EAAE;YACpC,OAAO,IAAI,CAAC;SACf;QACD,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,WAAW,EAAE;YAC/C,OAAO,KAAK,CAAC;SAChB;KACJ;IAED,IAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC;IAE7C,IAAI,WAAW;QACX,WAAW,CAAC,QAAQ;QACpB,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE;QAChC,OAAO,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,KAAK,OAAO,CAAC;KAC5D;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAlBD,sCAkBC;AAED,IAAM,kBAAkB,GAAsC,EAAE,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC;AAE1G,SAAgB,gBAAgB,CAAC,IAAwC;IACrE,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC,6BAA6B,CAAC,CAAC,CAAC,6BAA6B,EAAE,CAAC,CAAC;YAC9D,kBAAkB,CAAC,CAAC;IAC5B,IAAI,MAAM,EAAE;QACR,OAAO,CAAC,GAAG,CAAC,yBAAsB,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAE,CAAC,CAAC;QAChH,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAClB;IACD,OAAO,CAAC,CAAC;AACb,CAAC;AATD,4CASC;AAED,SAAgB,yCAAyC,CACrD,OAA4C,EAC5C,IAAuC;IAGvC,IAAI,CAAC,OAAO,EAAE;QACV,OAAO,IAAI,CAAC;KACf;IAED,IAAI,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;QACtC,OAAO;YACH,wBAAwB,EAAE,OAAO,CAAC,YAAY;YAC9C,uBAAuB,EAAE,OAAO,CAAC,WAAW;YAC5C,aAAa,EAAE,IAAI;YACnB,MAAM,EAAE,SAAS;SACpB,CAAC;KACL;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;AAnBD,8FAmBC;AAED,IAAI,6BAAoF,CAAC;AAIzF,SAAgB,uBAAuB,CAAC,IAA6C;IACjF,6BAA6B,GAAG,IAAI,CAAC;AACzC,CAAC;AAFD,0DAEC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { Link } from \"@r2-shared-js/models/publication-link\";\n\nimport { IEventPayload_R2_EVENT_READIUMCSS } from \"../common/events\";\nimport { IReadiumElectronBrowserWindow, IReadiumElectronWebview } from \"./webview/state\";\n\nconst win = window as IReadiumElectronBrowserWindow;\n\nconst IS_DEV = (process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"dev\");\n\nexport function isRTL(/* link: Link | undefined */): boolean {\n    // if (link && link.Properties) {\n    //     if (link.Properties.Direction === \"rtl\") {\n    //         return true;\n    //     }\n    //     if (typeof link.Properties.Direction !== \"undefined\") {\n    //         return false;\n    //     }\n    // }\n\n    const publication = win.READIUM2.publication;\n\n    if (publication &&\n        publication.Metadata &&\n        publication.Metadata.Direction) {\n        return publication.Metadata.Direction.toLowerCase() === \"rtl\"; //  any other value is LTR\n    }\n    return false;\n}\n\nexport function isFixedLayout(link: Link | undefined): boolean {\n    if (link && link.Properties) {\n        if (link.Properties.Layout === \"fixed\") {\n            return true;\n        }\n        if (typeof link.Properties.Layout !== \"undefined\") {\n            return false;\n        }\n    }\n\n    const publication = win.READIUM2.publication;\n\n    if (publication &&\n        publication.Metadata &&\n        publication.Metadata.Rendition) {\n        return publication.Metadata.Rendition.Layout === \"fixed\";\n    }\n    return false;\n}\n\nconst _defaultReadiumCss: IEventPayload_R2_EVENT_READIUMCSS = { setCSS: undefined, isFixedLayout: false };\n\nexport function obtainReadiumCss(rcss?: IEventPayload_R2_EVENT_READIUMCSS) {\n    const r = rcss ? rcss :\n        (_computeReadiumCssJsonMessage ? _computeReadiumCssJsonMessage() :\n            _defaultReadiumCss);\n    if (IS_DEV) {\n        console.log(`ReadiumCSS obtain: ${rcss ? \"provided\" : (_computeReadiumCssJsonMessage ? \"pulled\" : \"default\")}`);\n        console.log(r);\n    }\n    return r;\n}\n\nexport function adjustReadiumCssJsonMessageForFixedLayout(\n    webview: IReadiumElectronWebview | undefined,\n    rcss: IEventPayload_R2_EVENT_READIUMCSS,\n): IEventPayload_R2_EVENT_READIUMCSS {\n\n    if (!webview) {\n        return rcss;\n    }\n\n    if (isFixedLayout(webview.READIUM2.link)) {\n        return {\n            fixedLayoutWebViewHeight: webview.clientHeight,\n            fixedLayoutWebViewWidth: webview.clientWidth,\n            isFixedLayout: true,\n            setCSS: undefined,\n        };\n    }\n\n    return rcss;\n}\n\nlet _computeReadiumCssJsonMessage: (() => IEventPayload_R2_EVENT_READIUMCSS) | undefined;\n// = () => {\n//     return _defaultReadiumCss;\n// };\nexport function setReadiumCssJsonGetter(func: () => IEventPayload_R2_EVENT_READIUMCSS) {\n    _computeReadiumCssJsonMessage = func;\n}\n"]}