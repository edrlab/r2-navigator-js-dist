{"version":3,"file":"index_.js","sourceRoot":"","sources":["../../../../../../../src/electron/renderer/riots/linklist/index_.ts"],"names":[],"mappings":";;AAEA,qCAAyC;AAmB5B,QAAA,iBAAiB,GAAG,UAAC,QAAgB,EAAE,IAAuB;IACvE,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAEvC,MAAM,CAAC,GAAG,CAAC;AACf,CAAC,CAAC;AAGD,MAAc,CAAC,aAAa,GAAG,UAAU,KAAwB;IAE9D,IAAM,IAAI,GAAG,IAAwB,CAAC;IAGtC,IAAI,CAAC,QAAQ,GAAG,UAAU,KAAc;QACpC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC,CAAC;IAEF,IAAI,CAAC,OAAO,GAAG,UAAC,EAAa;QACzB,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;QACxB,EAAE,CAAC,cAAc,EAAE,CAAC;QAEpB,IAAM,IAAI,GAAI,EAAE,CAAC,aAA6B,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACP,kBAAU,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC;IACL,CAAC,CAAC;AACN,CAAC,CAAC","sourcesContent":["// http://riotjs.com/guide/\r\n// http://riotjs.com/api/\r\nimport { handleLink } from \"../../index\";\r\n\r\nexport interface IRiotOptsLinkListItem {\r\n    href: string;\r\n    title: string;\r\n}\r\nexport interface IRiotOptsLinkList {\r\n    basic: boolean;\r\n    fixBasic?: boolean;\r\n    links: IRiotOptsLinkListItem[];\r\n    url: string;\r\n}\r\n\r\nexport interface IRiotTagLinkList extends\r\n    // IRiotOptsLinkList,\r\n    RiotTag { // RiotMixinWithRecursivePropertySetter\r\n    setBasic: (basic: boolean) => void;\r\n}\r\n\r\nexport const riotMountLinkList = (selector: string, opts: IRiotOptsLinkList): RiotTag[] => {\r\n    const tag = riot.mount(selector, opts);\r\n    // console.log(tag); // RiotTag[]\r\n    return tag;\r\n};\r\n\r\n// tslint:disable-next-line:space-before-function-paren\r\n(window as any).riot_linklist = function (_opts: IRiotOptsLinkList) {\r\n\r\n    const that = this as IRiotTagLinkList;\r\n\r\n    // tslint:disable-next-line:space-before-function-paren\r\n    that.setBasic = function (basic: boolean) {\r\n        this.opts.basic = basic;\r\n        this.update();\r\n    };\r\n\r\n    this.onclick = (ev: RiotEvent) => {\r\n        ev.preventUpdate = true;\r\n        ev.preventDefault();\r\n\r\n        const href = (ev.currentTarget as HTMLElement).getAttribute(\"href\");\r\n        if (href) {\r\n            handleLink(href, undefined, false);\r\n        }\r\n    };\r\n};\r\n"]}