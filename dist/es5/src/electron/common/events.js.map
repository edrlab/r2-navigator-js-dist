{"version":3,"file":"events.js","sourceRoot":"","sources":["../../../../../src/electron/common/events.ts"],"names":[],"mappings":";;AAoBa,QAAA,wBAAwB,GAAG,0BAA0B,CAAC;AAStD,QAAA,mBAAmB,GAAG,qBAAqB,CAAC;AAY5C,QAAA,sBAAsB,GAAG,wBAAwB,CAAC;AAYlD,QAAA,iBAAiB,GAAG,mBAAmB,CAAC;AAUxC,QAAA,kBAAkB,GAAG,oBAAoB,CAAC;AAI1C,QAAA,sBAAsB,GAAG,wBAAwB,CAAC;AASlD,QAAA,yBAAyB,GAAG,2BAA2B,CAAC;AAoBxD,QAAA,aAAa,GAAG,eAAe,CAAC;AAQhC,QAAA,qBAAqB,GAAG,uBAAuB,CAAC;AAShD,QAAA,yBAAyB,GAAG,2BAA2B,CAAC;AAQxD,QAAA,sBAAsB,GAAG,wBAAwB,CAAC;AAIlD,QAAA,uBAAuB,GAAG,yBAAyB,CAAC;AAIpD,QAAA,oBAAoB,GAAG,sBAAsB,CAAC;AAS9C,QAAA,qBAAqB,GAAG,uBAAuB,CAAC;AAIhD,QAAA,sBAAsB,GAAG,wBAAwB,CAAC;AAIlD,QAAA,oBAAoB,GAAG,sBAAsB,CAAC;AAI9C,QAAA,uBAAuB,GAAG,yBAAyB,CAAC;AAIpD,QAAA,sBAAsB,GAAG,wBAAwB,CAAC;AAIlD,QAAA,uBAAuB,GAAG,yBAAyB,CAAC;AAIpD,QAAA,oBAAoB,GAAG,sBAAsB,CAAC;AAI9C,QAAA,wBAAwB,GAAG,0BAA0B,CAAC;AAItD,QAAA,yBAAyB,GAAG,2BAA2B,CAAC;AAgBxD,QAAA,yBAAyB,GAAG,2BAA2B,CAAC;AAQxD,QAAA,6BAA6B,GAAG,+BAA+B,CAAC;AAIhE,QAAA,wBAAwB,GAAG,0BAA0B,CAAC;AAQtD,QAAA,wBAAwB,GAAG,0BAA0B,CAAC;AACtD,QAAA,sBAAsB,GAAG,wBAAwB,CAAC;AAmBlD,QAAA,uBAAuB,GAAG,yBAAyB,CAAC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { Locator, LocatorLocations } from \"@r2-shared-js/models/locator\";\n\nimport { IAudioPlaybackInfo } from \"./audiobook\";\nimport { IDocInfo } from \"./document\";\nimport { IHighlight, IHighlightDefinition } from \"./highlight\";\nimport { IPaginationInfo } from \"./pagination\";\nimport { IReadiumCSS } from \"./readium-css-settings\";\nimport { ISelectionInfo } from \"./selection\";\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_LOCATOR_VISIBLE = \"R2_EVENT_LOCATOR_VISIBLE\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_LOCATOR_VISIBLE {\n    visible: boolean;\n    location: LocatorLocations;\n}\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_READIUMCSS = \"R2_EVENT_READIUMCSS\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_READIUMCSS {\n    setCSS: IReadiumCSS | undefined;\n    isFixedLayout?: boolean;\n    fixedLayoutWebViewWidth?: number;\n    fixedLayoutWebViewHeight?: number;\n    urlRoot?: string;\n}\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_DEBUG_VISUALS = \"R2_EVENT_DEBUG_VISUALS\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_DEBUG_VISUALS {\n    debugVisuals: boolean;\n\n    cssSelector?: string;\n    cssClass?: string;\n    cssStyles?: string;\n}\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_SCROLLTO = \"R2_EVENT_SCROLLTO\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_SCROLLTO {\n    goto: string | undefined;\n    hash: string | undefined;\n    previous: boolean;\n}\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_PAGE_TURN = \"R2_EVENT_PAGE_TURN\";\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_PAGE_TURN_RES = \"R2_EVENT_PAGE_TURN_RES\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_PAGE_TURN {\n    direction: string;\n    go: string;\n}\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_READING_LOCATION = \"R2_EVENT_READING_LOCATION\";\n\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_READING_LOCATION extends Locator {\n    audioPlaybackInfo: IAudioPlaybackInfo | undefined;\n    paginationInfo: IPaginationInfo | undefined;\n    selectionInfo: ISelectionInfo | undefined;\n    docInfo: IDocInfo | undefined;\n    selectionIsNew: boolean | undefined;\n\n    // not NavDoc epub:type=\"page-list\",\n    // but target HTML document's epub:type=\"pagebreak\"\n    // (nearest preceding ancestor/sibling)\n    epubPage: string | undefined;\n}\n\n// in MAIN: browserWindow.webContents.send()\n// in RENDERER: ipcRenderer.on()\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_LINK = \"R2_EVENT_LINK\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_LINK {\n    url: string;\n}\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_SHIFT_VIEW_X = \"R2_EVENT_SHIFT_VIEW_X\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_SHIFT_VIEW_X {\n    offset: number;\n    backgroundColor: string | undefined;\n}\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_TTS_CLICK_ENABLE = \"R2_EVENT_TTS_CLICK_ENABLE\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_TTS_CLICK_ENABLE {\n    doEnable: boolean;\n}\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_AUDIO_DO_PLAY = \"R2_EVENT_AUDIO_DO_PLAY\";\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_AUDIO_DO_PAUSE = \"R2_EVENT_AUDIO_DO_PAUSE\";\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_TTS_DO_PLAY = \"R2_EVENT_TTS_DO_PLAY\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_TTS_DO_PLAY {\n    rootElement: string; // CSS selector\n    startElement: string | undefined; // CSS selector\n}\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_TTS_DO_PAUSE = \"R2_EVENT_TTS_DO_PAUSE\";\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_TTS_DO_RESUME = \"R2_EVENT_TTS_DO_RESUME\";\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_TTS_DO_STOP = \"R2_EVENT_TTS_DO_STOP\";\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_TTS_IS_STOPPED = \"R2_EVENT_TTS_IS_STOPPED\";\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_TTS_IS_PAUSED = \"R2_EVENT_TTS_IS_PAUSED\";\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_TTS_IS_PLAYING = \"R2_EVENT_TTS_IS_PLAYING\";\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_TTS_DO_NEXT = \"R2_EVENT_TTS_DO_NEXT\";\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_TTS_DO_PREVIOUS = \"R2_EVENT_TTS_DO_PREVIOUS\";\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_HIGHLIGHT_CREATE = \"R2_EVENT_HIGHLIGHT_CREATE\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_HIGHLIGHT_CREATE {\n    highlightDefinitions: IHighlightDefinition[] | undefined;\n    highlights: Array<IHighlight | null> | undefined; // return value, see below (R2_EVENT_HIGHLIGHT_CREATE_RES)\n}\n// // in WEBVIEW: ipcRenderer.sendToHost()\n// // in RENDERER: webview.addEventListener(\"ipc-message\")\n// export const R2_EVENT_HIGHLIGHT_CREATE_RES = \"R2_EVENT_HIGHLIGHT_CREATE_RES\";\n// // tslint:disable-next-line:class-name\n// export interface IEventPayload_R2_EVENT_HIGHLIGHT_CREATE_RES {\n//     highlightID: string;\n// }\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_HIGHLIGHT_REMOVE = \"R2_EVENT_HIGHLIGHT_REMOVE\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_HIGHLIGHT_REMOVE {\n    highlightIDs: string[];\n}\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_HIGHLIGHT_REMOVE_ALL = \"R2_EVENT_HIGHLIGHT_REMOVE_ALL\";\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_HIGHLIGHT_CLICK = \"R2_EVENT_HIGHLIGHT_CLICK\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_HIGHLIGHT_CLICK {\n    highlight: IHighlight;\n}\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_WEBVIEW_KEYDOWN = \"R2_EVENT_WEBVIEW_KEYDOWN\";\nexport const R2_EVENT_WEBVIEW_KEYUP = \"R2_EVENT_WEBVIEW_KEYUP\";\nexport interface IKeyboardEvent {\n    altKey: boolean;\n    ctrlKey: boolean;\n    metaKey: boolean;\n    shiftKey: boolean;\n\n    code: string;\n    key?: string;\n}\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_WEBVIEW_KEYDOWN extends IKeyboardEvent {\n    elementName: string;\n    elementAttributes: {[name: string]: string};\n}\nexport type IEventPayload_R2_EVENT_WEBVIEW_KEYUP = IEventPayload_R2_EVENT_WEBVIEW_KEYDOWN;\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_CLIPBOARD_COPY = \"R2_EVENT_CLIPBOARD_COPY\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_CLIPBOARD_COPY { // CliboardEvent\n    txt: string;\n    locator: IEventPayload_R2_EVENT_READING_LOCATION | undefined;\n}\n"]}