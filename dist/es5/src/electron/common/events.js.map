{"version":3,"file":"events.js","sourceRoot":"","sources":["../../../../../src/electron/common/events.ts"],"names":[],"mappings":";;AAaa,QAAA,mBAAmB,GAAG,qBAAqB,CAAC;AAU5C,QAAA,sBAAsB,GAAG,wBAAwB,CAAC;AAIlD,QAAA,iBAAiB,GAAG,mBAAmB,CAAC;AAUxC,QAAA,kBAAkB,GAAG,oBAAoB,CAAC;AAI1C,QAAA,sBAAsB,GAAG,wBAAwB,CAAC;AASlD,QAAA,yBAAyB,GAAG,2BAA2B,CAAC;AA6BxD,QAAA,aAAa,GAAG,eAAe,CAAC;AAQhC,QAAA,sBAAsB,GAAG,wBAAwB,CAAC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { LocatorLocations } from \"@r2-shared-js/models/locator\";\n\nimport { IReadiumCSS } from \"./readium-css-settings\";\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_READIUMCSS = \"R2_EVENT_READIUMCSS\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_READIUMCSS {\n    setCSS: IReadiumCSS | undefined;\n    isFixedLayout?: boolean;\n    urlRoot?: string;\n}\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_DEBUG_VISUALS = \"R2_EVENT_DEBUG_VISUALS\";\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_SCROLLTO = \"R2_EVENT_SCROLLTO\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_SCROLLTO {\n    goto: string | undefined;\n    hash: string | undefined;\n    previous: boolean;\n}\n\n// in RENDERER: webview.send()\n// in WEBVIEW: ipcRenderer.on()\nexport const R2_EVENT_PAGE_TURN = \"R2_EVENT_PAGE_TURN\";\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_PAGE_TURN_RES = \"R2_EVENT_PAGE_TURN_RES\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_PAGE_TURN {\n    direction: string;\n    go: string;\n}\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_READING_LOCATION = \"R2_EVENT_READING_LOCATION\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_READING_LOCATION_PAGINATION_INFO {\n    totalColumns: number | undefined;\n    currentColumn: number | undefined;\n    isTwoPageSpread: boolean | undefined;\n    spreadIndex: number | undefined;\n}\n\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_READING_LOCATION extends LocatorLocations {\n    // interface LocatorLocations {\n    //     cfi?: string;\n    //     cssSelector?: string;\n    //     position?: number;\n    //     progression?: number;\n    // }\n    // cfi: string | undefined;\n    // cssSelector: string | undefined;\n    // progression: number | undefined;\n    // position: number | undefined;\n\n    paginationInfo: IEventPayload_R2_EVENT_READING_LOCATION_PAGINATION_INFO | undefined;\n}\n\n// in MAIN: browserWindow.webContents.send(()\n// in RENDERER: ipcRenderer.on()\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_LINK = \"R2_EVENT_LINK\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_LINK {\n    url: string;\n}\n\n// in WEBVIEW: ipcRenderer.sendToHost()\n// in RENDERER: webview.addEventListener(\"ipc-message\")\nexport const R2_EVENT_WEBVIEW_READY = \"R2_EVENT_WEBVIEW_READY\";\n// tslint:disable-next-line:class-name\nexport interface IEventPayload_R2_EVENT_WEBVIEW_READY {\n    href: string;\n}\n"]}