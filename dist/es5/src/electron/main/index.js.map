{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/electron/main/index.ts"],"names":[],"mappings":"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","sourcesContent":["// https://github.com/electron/electron/blob/master/docs/api/sandbox-option.md\r\n// https://github.com/electron/electron/blob/master/docs/api/process.md\r\n// https://github.com/electron/electron/blob/master/docs/api/browser-window.md\r\n// https://github.com/electron/electron/blob/master/docs/api/protocol.md\r\n// https://github.com/electron/electron/blob/master/docs/api/web-frame.md\r\n// https://github.com/electron/electron/blob/master/docs/api/web-contents.md\r\n// https://github.com/electron/electron/blob/master/docs/api/web-request.md\r\n// https://github.com/electron/electron/blob/master/docs/api/session.md\r\n// https://github.com/electron/electron/blob/master/docs/api/webview-tag.md\r\n// https://github.com/electron/electron/blob/master/docs/api/browser-view.md\r\n// https://github.com/electron/electron/blob/master/docs/api/client-request.md\r\n// https://github.com/electron/electron/blob/master/docs/api/sandbox-option.md\r\n// https://github.com/electron/electron/blob/master/docs/api/dialog.md\r\n// https://github.com/electron/electron/blob/master/docs/api/ipc-renderer.md\r\n\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\n\r\nimport { encodeURIComponent_RFC3986 } from \"@r2-streamer-js/_utils/http/UrlUtils\";\r\nimport { Server } from \"@r2-streamer-js/http/server\";\r\nimport { initGlobals } from \"@r2-streamer-js/init-globals\";\r\nimport { Publication } from \"@r2-streamer-js/models/publication\";\r\nimport { setLcpNativePluginPath } from \"@r2-streamer-js/parser/epub/lcp\";\r\nimport * as debug_ from \"debug\";\r\nimport { BrowserWindow, Menu, app, dialog, ipcMain, webContents } from \"electron\";\r\nimport * as filehound from \"filehound\";\r\nimport * as portfinder from \"portfinder\";\r\n\r\nimport { R2_EVENT_DEVTOOLS } from \"../common/events\";\r\nimport { trackBrowserWindow } from \"./browser-window-tracker\";\r\nimport { downloadFromLCPL, installLcpHandler } from \"./lcp\";\r\nimport { launchStatusDocumentProcessing } from \"./lsd\";\r\nimport { deviceIDManager } from \"./lsd-deviceid-manager\";\r\nimport { setupReadiumCSS } from \"./readium-css\";\r\nimport { initSessions } from \"./sessions\";\r\n\r\n// import * as mime from \"mime-types\";\r\n\r\ninitGlobals();\r\nconst lcpPluginPath = path.join(process.cwd(), \"LCP\", \"lcp.node\");\r\nsetLcpNativePluginPath(lcpPluginPath);\r\n\r\nconst debug = debug_(\"r2:electron:main\");\r\n\r\nlet _publicationsServer: Server;\r\nlet _publicationsServerPort: number;\r\nlet _publicationsRootUrl: string;\r\nlet _publicationsFilePaths: string[];\r\nlet _publicationsUrls: string[];\r\n\r\nconst DEFAULT_BOOK_PATH = fs.realpathSync(path.resolve(\"./misc/epubs/\"));\r\nlet _lastBookPath: string | undefined;\r\n\r\n// protocol.registerStandardSchemes([\"epub\", \"file\"], { secure: true });\r\n\r\nfunction openAllDevTools() {\r\n    for (const wc of webContents.getAllWebContents()) {\r\n        // if (wc.hostWebContents &&\r\n        //     wc.hostWebContents.id === electronBrowserWindow.webContents.id) {\r\n        // }\r\n        wc.openDevTools();\r\n    }\r\n}\r\n\r\n// function openTopLevelDevTools() {\r\n//     const bw = BrowserWindow.getFocusedWindow();\r\n//     if (bw) {\r\n//         bw.webContents.openDevTools();\r\n//     } else {\r\n//         const arr = BrowserWindow.getAllWindows();\r\n//         arr.forEach((bww) => {\r\n//             bww.webContents.openDevTools();\r\n//         });\r\n//     }\r\n// }\r\n\r\nipcMain.on(R2_EVENT_DEVTOOLS, (_event: any, _arg: any) => {\r\n    openAllDevTools();\r\n});\r\n\r\nasync function createElectronBrowserWindow(publicationFilePath: string, publicationUrl: string) {\r\n\r\n    debug(\"createElectronBrowserWindow() \" + publicationFilePath + \" : \" + publicationUrl);\r\n\r\n    // const fileName = path.basename(publicationFilePath);\r\n    // const ext = path.extname(fileName).toLowerCase();\r\n\r\n    let publication: Publication;\r\n    try {\r\n        publication = await _publicationsServer.loadOrGetCachedPublication(publicationFilePath);\r\n    } catch (err) {\r\n        debug(err);\r\n        return;\r\n    }\r\n\r\n    let lcpHint: string | undefined;\r\n    if (publication && publication.LCP) {\r\n\r\n        try {\r\n            await launchStatusDocumentProcessing(publication, publicationFilePath, deviceIDManager, () => {\r\n                debug(\"launchStatusDocumentProcessing DONE.\");\r\n            });\r\n        } catch (err) {\r\n            debug(err);\r\n        }\r\n\r\n        if (publication.LCP.Encryption &&\r\n            publication.LCP.Encryption.UserKey &&\r\n            publication.LCP.Encryption.UserKey.TextHint) {\r\n            lcpHint = publication.LCP.Encryption.UserKey.TextHint;\r\n        }\r\n        if (!lcpHint) {\r\n            lcpHint = \"LCP passphrase\";\r\n        }\r\n    }\r\n\r\n    const electronBrowserWindow = new BrowserWindow({\r\n        height: 600,\r\n        webPreferences: {\r\n            allowRunningInsecureContent: false,\r\n            contextIsolation: false,\r\n            devTools: true,\r\n            nodeIntegration: true,\r\n            nodeIntegrationInWorker: false,\r\n            sandbox: false,\r\n            webSecurity: true,\r\n            webviewTag: true,\r\n            // preload: __dirname + \"/\" + \"preload.js\",\r\n        },\r\n        width: 800,\r\n    });\r\n    trackBrowserWindow(electronBrowserWindow);\r\n\r\n    // electronBrowserWindow.on(\"resize\", () => {\r\n    //     const [width, height] = electronBrowserWindow.getContentSize();\r\n\r\n    //     for (const wc of webContents.getAllWebContents()) {\r\n    //         if (wc.hostWebContents &&\r\n    //             wc.hostWebContents.id === electronBrowserWindow.webContents.id) {\r\n    //             wc.setSize({\r\n    //                 normal: {\r\n    //                     height: 400,\r\n    //                     width,\r\n    //                 },\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    electronBrowserWindow.webContents.on(\"dom-ready\", () => {\r\n        debug(\"electronBrowserWindow dom-ready \" + publicationFilePath + \" : \" + publicationUrl);\r\n        // electronBrowserWindow.webContents.openDevTools();\r\n    });\r\n\r\n    const urlEncoded = encodeURIComponent_RFC3986(publicationUrl);\r\n    let fullUrl = `file://${__dirname}/../renderer/index.html?pub=${urlEncoded}`;\r\n    if (lcpHint) {\r\n        fullUrl = fullUrl + \"&lcpHint=\" + encodeURIComponent_RFC3986(lcpHint);\r\n    }\r\n    // fullUrl = fullUrl + \"&lcpPlugin=\" + encodeURIComponent_RFC3986(Buffer.from(lcpPluginPath).toString(\"base64\"));\r\n\r\n    // `file://${process.cwd()}/src/electron/renderer/index.html`;\r\n    // `file://${__dirname}/../../../../src/electron/renderer/index.html`\r\n    debug(fullUrl);\r\n    electronBrowserWindow.webContents.loadURL(fullUrl, { extraHeaders: \"pragma: no-cache\\n\" });\r\n}\r\n\r\ninitSessions();\r\n\r\napp.on(\"ready\", () => {\r\n    debug(\"app ready\");\r\n\r\n    // protocol.registerServiceWorkerSchemes([\"epub\"]);\r\n\r\n    // registerFileProtocol\r\n    // protocol.registerBufferProtocol(\"epub\",\r\n    //     (request, callback) => {\r\n    //         debug(request.url);\r\n    //         const data = fs.readFileSync(request.url);\r\n    //         const mimeType = mime.lookup(request.url);\r\n    //         callback({ data, mimeType });\r\n    //     }, (error) => {\r\n    //         debug(error);\r\n    //     });\r\n\r\n    // tslint:disable-next-line:no-floating-promises\r\n    (async () => {\r\n        try {\r\n            _publicationsFilePaths = await filehound.create()\r\n                .paths(DEFAULT_BOOK_PATH)\r\n                .ext([\".epub\", \".epub3\", \".cbz\", \".lcpl\"])\r\n                .find();\r\n        } catch (err) {\r\n            debug(err);\r\n        }\r\n        debug(_publicationsFilePaths);\r\n\r\n        _publicationsServer = new Server({\r\n            disableDecryption: false,\r\n            disableReaders: false,\r\n        });\r\n\r\n        installLcpHandler(_publicationsServer, deviceIDManager);\r\n\r\n        setupReadiumCSS(_publicationsServer, path.join(process.cwd(), \"dist/ReadiumCSS\"));\r\n\r\n        // _publicationsServer.expressGet([\"/resize-sensor.js\"],\r\n        //     (req: express.Request, res: express.Response) => {\r\n\r\n        //         const swPth = \"./renderer/ResizeSensor.js\";\r\n        //         const swFullPath = path.resolve(path.join(__dirname, swPth));\r\n        //         if (!fs.existsSync(swFullPath)) {\r\n\r\n        //             const err = \"Missing ResizeSensor JS! \";\r\n        //             debug(err + swFullPath);\r\n        //             res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n        //                 + err + \"</p></body></html>\");\r\n        //             return;\r\n        //         }\r\n\r\n        //         const swJS = fs.readFileSync(swFullPath, { encoding: \"utf8\" });\r\n        //         // debug(swJS);\r\n\r\n        //         // this.setResponseCORS(res);\r\n        //         res.set(\"Content-Type\", \"text/javascript; charset=utf-8\");\r\n\r\n        //         const checkSum = crypto.createHash(\"sha256\");\r\n        //         checkSum.update(swJS);\r\n        //         const hash = checkSum.digest(\"hex\");\r\n\r\n        //         const match = req.header(\"If-None-Match\");\r\n        //         if (match === hash) {\r\n        //             debug(\"ResizeSensor.js cache\");\r\n        //             res.status(304); // StatusNotModified\r\n        //             res.end();\r\n        //             return;\r\n        //         }\r\n\r\n        //         res.setHeader(\"ETag\", hash);\r\n        //         // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\r\n\r\n        //         res.status(200).send(swJS);\r\n        //     });\r\n\r\n        // _publicationsServer.expressGet([\"/sw.js\"],\r\n        //     (req: express.Request, res: express.Response) => {\r\n\r\n        //         const swPth = \"./renderer/sw/service-worker.js\";\r\n        //         const swFullPath = path.resolve(path.join(__dirname, swPth));\r\n        //         if (!fs.existsSync(swFullPath)) {\r\n\r\n        //             const err = \"Missing Service Worker JS! \";\r\n        //             debug(err + swFullPath);\r\n        //             res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n        //                 + err + \"</p></body></html>\");\r\n        //             return;\r\n        //         }\r\n\r\n        //         const swJS = fs.readFileSync(swFullPath, { encoding: \"utf8\" });\r\n        //         // debug(swJS);\r\n\r\n        //         // this.setResponseCORS(res);\r\n        //         res.set(\"Content-Type\", \"text/javascript; charset=utf-8\");\r\n\r\n        //         const checkSum = crypto.createHash(\"sha256\");\r\n        //         checkSum.update(swJS);\r\n        //         const hash = checkSum.digest(\"hex\");\r\n\r\n        //         const match = req.header(\"If-None-Match\");\r\n        //         if (match === hash) {\r\n        //             debug(\"service-worker.js cache\");\r\n        //             res.status(304); // StatusNotModified\r\n        //             res.end();\r\n        //             return;\r\n        //         }\r\n\r\n        //         res.setHeader(\"ETag\", hash);\r\n        //         // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\r\n\r\n        //         res.status(200).send(swJS);\r\n        //     });\r\n\r\n        const pubPaths = _publicationsServer.addPublications(_publicationsFilePaths);\r\n\r\n        try {\r\n            _publicationsServerPort = await portfinder.getPortPromise();\r\n        } catch (err) {\r\n            debug(err);\r\n        }\r\n        _publicationsRootUrl = _publicationsServer.start(_publicationsServerPort);\r\n\r\n        _publicationsUrls = pubPaths.map((pubPath) => {\r\n            return `${_publicationsRootUrl}${pubPath}`;\r\n        });\r\n        debug(_publicationsUrls);\r\n\r\n        resetMenu();\r\n\r\n        process.nextTick(async () => {\r\n\r\n            const args = process.argv.slice(2);\r\n            console.log(\"args:\");\r\n            console.log(args);\r\n            let filePathToLoadOnLaunch: string | undefined;\r\n            if (args && args.length && args[0]) {\r\n                const argPath = args[0].trim();\r\n                let filePath = argPath;\r\n                console.log(filePath);\r\n                if (!fs.existsSync(filePath)) {\r\n                    filePath = path.join(__dirname, argPath);\r\n                    console.log(filePath);\r\n                    if (!fs.existsSync(filePath)) {\r\n                        filePath = path.join(process.cwd(), argPath);\r\n                        console.log(filePath);\r\n                        if (!fs.existsSync(filePath)) {\r\n                            console.log(\"FILEPATH DOES NOT EXIST: \" + filePath);\r\n                        } else {\r\n                            filePathToLoadOnLaunch = filePath;\r\n                        }\r\n                    } else {\r\n                        filePathToLoadOnLaunch = filePath;\r\n                    }\r\n                } else {\r\n                    filePath = fs.realpathSync(filePath);\r\n                    console.log(filePath);\r\n                    filePathToLoadOnLaunch = filePath;\r\n                }\r\n            }\r\n\r\n            if (filePathToLoadOnLaunch) {\r\n                await openFileDownload(filePathToLoadOnLaunch);\r\n                return;\r\n            }\r\n\r\n            const detail = \"Note that this is only a developer application (\" +\r\n                \"test framework) for the Readium2 NodeJS 'streamer' and Electron-based 'navigator'.\";\r\n            const message = \"Use the 'Electron' menu to load publications.\";\r\n\r\n            if (process.platform === \"darwin\") {\r\n                const choice = dialog.showMessageBox({\r\n                    buttons: [\"&OK\"],\r\n                    cancelId: 0,\r\n                    defaultId: 0,\r\n                    detail,\r\n                    message,\r\n                    noLink: true,\r\n                    normalizeAccessKeys: true,\r\n                    title: \"Readium2 Electron streamer / navigator\",\r\n                    type: \"info\",\r\n                });\r\n                if (choice === 0) {\r\n                    debug(\"ok\");\r\n                }\r\n            } else {\r\n                const html = `<html><h2>${message}<hr>${detail}</h2></html>`;\r\n                const electronBrowserWindow = new BrowserWindow({\r\n                    height: 300,\r\n                    webPreferences: {\r\n                        allowRunningInsecureContent: false,\r\n                        contextIsolation: false,\r\n                        devTools: false,\r\n                        nodeIntegration: false,\r\n                        nodeIntegrationInWorker: false,\r\n                        sandbox: false,\r\n                        webSecurity: true,\r\n                        webviewTag: false,\r\n                        // preload: __dirname + \"/\" + \"preload.js\",\r\n                    },\r\n                    width: 400,\r\n                });\r\n\r\n                electronBrowserWindow.webContents.loadURL(\"data:text/html,\" + html);\r\n            }\r\n        });\r\n    })();\r\n});\r\n\r\nfunction resetMenu() {\r\n\r\n    const menuTemplate = [\r\n        {\r\n            label: \"Readium2 Electron\",\r\n            submenu: [\r\n                {\r\n                    accelerator: \"Command+Q\",\r\n                    click: () => { app.quit(); },\r\n                    label: \"Quit\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            label: \"Open\",\r\n            submenu: [\r\n            ],\r\n        },\r\n        {\r\n            label: \"Tools\",\r\n            submenu: [\r\n                {\r\n                    accelerator: \"Command+B\",\r\n                    click: () => {\r\n                        // openTopLevelDevTools();\r\n                        openAllDevTools();\r\n                    },\r\n                    label: \"Open Dev Tools\",\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n\r\n    menuTemplate[1].submenu.push({\r\n        click: async () => {\r\n            const choice = dialog.showOpenDialog({\r\n                defaultPath: _lastBookPath || DEFAULT_BOOK_PATH,\r\n                filters: [\r\n                    { name: \"EPUB publication\", extensions: [\"epub\", \"epub3\"] },\r\n                    { name: \"LCP license\", extensions: [\"lcpl\"] },\r\n                    { name: \"Comic book\", extensions: [\"cbz\"] },\r\n                    // {name: \"Zip archive\", extensions: [\"zip\"]},\r\n                    // {name: \"Any file\", extensions: [\"*\"]},\r\n                ],\r\n                message: \"Choose a file\",\r\n                properties: [\"openFile\"],\r\n                title: \"Load a publication\",\r\n            });\r\n            if (!choice || !choice.length) {\r\n                return;\r\n            }\r\n            const filePath = choice[0];\r\n            debug(filePath);\r\n            await openFileDownload(filePath);\r\n        },\r\n        label: \"Load file...\",\r\n    } as any);\r\n\r\n    _publicationsUrls.forEach((pubManifestUrl, n) => {\r\n        const filePath = _publicationsFilePaths[n];\r\n        debug(\"MENU ITEM: \" + filePath + \" : \" + pubManifestUrl);\r\n\r\n        menuTemplate[1].submenu.push({\r\n            click: async () => {\r\n                debug(filePath);\r\n                await openFileDownload(filePath);\r\n            },\r\n            label: filePath, // + \" : \" + pubManifestUrl,\r\n        } as any);\r\n    });\r\n    const menu = Menu.buildFromTemplate(menuTemplate);\r\n    Menu.setApplicationMenu(menu);\r\n}\r\n\r\nasync function openFileDownload(filePath: string) {\r\n    const dir = path.dirname(filePath);\r\n    _lastBookPath = dir;\r\n    debug(_lastBookPath);\r\n\r\n    const ext = path.extname(filePath);\r\n    const filename = path.basename(filePath);\r\n    const destFileName = filename + \".epub\";\r\n    if (ext === \".lcpl\") {\r\n        let epubFilePath: string[];\r\n        try {\r\n            epubFilePath = await downloadFromLCPL(filePath, dir, destFileName);\r\n        } catch (err) {\r\n            process.nextTick(() => {\r\n                const detail = (typeof err === \"string\") ?\r\n                    err :\r\n                    (err.toString ? err.toString() : \"ERROR!?\");\r\n                const message = \"LCP EPUB download fail!]\";\r\n                const res = dialog.showMessageBox({\r\n                    buttons: [\"&OK\"],\r\n                    cancelId: 0,\r\n                    defaultId: 0,\r\n                    detail,\r\n                    message,\r\n                    noLink: true,\r\n                    normalizeAccessKeys: true,\r\n                    title: \"Readium2 Electron streamer / navigator\",\r\n                    type: \"info\",\r\n                });\r\n                if (res === 0) {\r\n                    debug(\"ok\");\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const result = epubFilePath as string[];\r\n        process.nextTick(async () => {\r\n            const detail = result[0] + \" ---- [\" + result[1] + \"]\";\r\n            const message = \"LCP EPUB file download success [\" + destFileName + \"]\";\r\n            const res = dialog.showMessageBox({\r\n                buttons: [\"&OK\"],\r\n                cancelId: 0,\r\n                defaultId: 0,\r\n                detail,\r\n                message,\r\n                noLink: true,\r\n                normalizeAccessKeys: true,\r\n                title: \"Readium2 Electron streamer / navigator\",\r\n                type: \"info\",\r\n            });\r\n            if (res === 0) {\r\n                debug(\"ok\");\r\n            }\r\n\r\n            await openFile(result[0]);\r\n        });\r\n    } else {\r\n        await openFile(filePath);\r\n    }\r\n}\r\n\r\nasync function openFile(filePath: string) {\r\n    let n = _publicationsFilePaths.indexOf(filePath);\r\n    if (n < 0) {\r\n        const publicationPaths = _publicationsServer.addPublications([filePath]);\r\n        debug(publicationPaths);\r\n\r\n        _publicationsFilePaths.push(filePath);\r\n        debug(_publicationsFilePaths);\r\n\r\n        _publicationsUrls.push(`${_publicationsRootUrl}${publicationPaths[0]}`);\r\n        debug(_publicationsUrls);\r\n\r\n        n = _publicationsFilePaths.length - 1; // === _publicationsUrls.length - 1\r\n\r\n        process.nextTick(() => {\r\n            resetMenu();\r\n        });\r\n    }\r\n\r\n    const file = _publicationsFilePaths[n];\r\n    const pubManifestUrl = _publicationsUrls[n];\r\n\r\n    await createElectronBrowserWindow(file, pubManifestUrl);\r\n}\r\n\r\napp.on(\"activate\", () => {\r\n    debug(\"app activate\");\r\n});\r\n\r\napp.on(\"before-quit\", () => {\r\n    debug(\"app before quit\");\r\n});\r\n\r\napp.on(\"window-all-closed\", () => {\r\n    debug(\"app window-all-closed\");\r\n    if (process.platform !== \"darwin\") {\r\n        app.quit();\r\n    }\r\n});\r\n\r\napp.on(\"quit\", () => {\r\n    debug(\"app quit\");\r\n\r\n    _publicationsServer.stop();\r\n});\r\n"]}