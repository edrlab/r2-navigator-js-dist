{"version":3,"file":"browser-window-tracker.js","sourceRoot":"","sources":["../../../../../src/electron/main/browser-window-tracker.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as debug_ from \"debug\";\nimport { BrowserWindow, Menu, app, ipcMain, webContents } from \"electron\";\n\nimport { CONTEXT_MENU_SETUP } from \"../common/context-menu\";\nimport { IEventPayload_R2_EVENT_LINK, R2_EVENT_LINK } from \"../common/events\";\nimport { READIUM2_ELECTRON_HTTP_PROTOCOL } from \"../common/sessions\";\n\nconst debug = debug_(\"r2:navigator#electron/main/browser-window-tracker\");\n\nlet _electronBrowserWindows: Electron.BrowserWindow[];\n\n// let _serverURL: string | undefined;\n\nexport function trackBrowserWindow(win: Electron.BrowserWindow, _serverURL?: string) {\n\n    // _serverURL = serverURL;\n\n    if (!_electronBrowserWindows) {\n        _electronBrowserWindows = [];\n    }\n    _electronBrowserWindows.push(win);\n\n    win.on(\"closed\", () => {\n        const i = _electronBrowserWindows.indexOf(win);\n        if (i < 0) {\n            return;\n        }\n        _electronBrowserWindows.splice(i, 1);\n    });\n}\n\napp.on(\"accessibility-support-changed\", (_ev, accessibilitySupportEnabled: boolean) => {\n\n    debug(\"accessibility-support-changed ... \", accessibilitySupportEnabled);\n    if (app.accessibilitySupportEnabled !== accessibilitySupportEnabled) {\n        debug(\"!!?? app.accessibilitySupportEnabled !== accessibilitySupportEnabled\");\n    }\n\n    if (!_electronBrowserWindows || !_electronBrowserWindows.length) {\n        return;\n    }\n    _electronBrowserWindows.forEach((win) => {\n        if (win.webContents) {\n            debug(\"accessibility-support-changed event to WebViewContents \", accessibilitySupportEnabled);\n            win.webContents.send(\"accessibility-support-changed\", accessibilitySupportEnabled);\n        }\n\n        // const allWebContents = webContents.getAllWebContents();\n        // if (allWebContents && allWebContents.length) {\n        //     for (const wc of allWebContents) {\n        //         if (!wc.hostWebContents) {\n        //             continue;\n        //         }\n        //         if (wc.hostWebContents.id === win.webContents.id) {\n        //             // NOPE\n        //         }\n        //     }\n        // }\n    });\n});\nipcMain.on(\"accessibility-support-changed\", (ev) => {\n    const accessibilitySupportEnabled = app.accessibilitySupportEnabled;\n    debug(\"accessibility-support-changed REQUEST, sending to WebViewContents \", accessibilitySupportEnabled);\n    ev.sender.send(\"accessibility-support-changed\", accessibilitySupportEnabled);\n});\n\nexport const contextMenuSetup = (webContent: Electron.WebContents, webContentID: number) => {\n\n    debug(`MAIN CONTEXT_MENU_SETUP ${webContentID}`);\n\n    // const wc = remote.webContents.fromId(wv.getWebContentsId());\n    // const wc = wv.getWebContents();\n    const wc = webContents.fromId(webContentID);\n\n    // This is always the case: webContentID is the inner WebView\n    // inside the main reader BrowserWindow (webContent === event.sender)\n    // if (wc !== webContent) {\n    //     debug(`!!!!?? CONTEXT_MENU_SETUP __ wc ${wc.id} !== webContent ${webContentID}`);\n    // }\n    wc.on(\"context-menu\", (_ev, params) => {\n        const { x, y } = params;\n        debug(\"MAIN context-menu EVENT on WebView\");\n\n        const win = BrowserWindow.fromWebContents(webContent) || undefined;\n\n        const openDevToolsAndInspect = () => {\n            const devToolsOpened = () => {\n                wc.off(\"devtools-opened\", devToolsOpened);\n                wc.inspectElement(x, y);\n\n                setTimeout(() => {\n                    if (wc.devToolsWebContents && wc.isDevToolsOpened()) {\n                        wc.devToolsWebContents.focus();\n                    }\n                }, 500);\n            };\n            wc.on(\"devtools-opened\", devToolsOpened);\n            wc.openDevTools({ activate: true, mode: \"detach\" });\n        };\n        Menu.buildFromTemplate([{\n            click: () => {\n                const wasOpened = wc.isDevToolsOpened();\n                if (!wasOpened) {\n                    openDevToolsAndInspect();\n                } else {\n                    if (!wc.isDevToolsFocused()) {\n                        // wc.toggleDevTools();\n                        wc.closeDevTools();\n\n                        setImmediate(() => {\n                            openDevToolsAndInspect();\n                        });\n                    } else {\n                        // right-click context menu normally occurs when focus\n                        // is in BrowserWindow / WebView's WebContents,\n                        // but some platforms (e.g. MacOS) allow mouse interaction\n                        // when the window is in the background.\n                        wc.inspectElement(x, y);\n                    }\n                }\n            },\n            label: \"Inspect element\",\n        }]).popup({window: win});\n    });\n};\nipcMain.on(CONTEXT_MENU_SETUP, (event, webContentID: number) => {\n    contextMenuSetup(event.sender, webContentID);\n});\n\n// https://github.com/electron/electron/blob/master/docs/tutorial/security.md#how-9\napp.on(\"web-contents-created\", (_evt, wc) => {\n    wc.on(\"will-attach-webview\", (_event, webPreferences, params) => {\n        debug(\"WEBVIEW will-attach-webview\");\n        if (params.src && !params.src.startsWith(\"data:\")) {\n            debug(params.src);\n        }\n\n        // delete webPreferences.preload;\n        // delete webPreferences.preloadURL;\n\n        webPreferences.contextIsolation = false;\n        webPreferences.javascript = true;\n        webPreferences.webSecurity = true;\n        webPreferences.nodeIntegration = false;\n        webPreferences.nodeIntegrationInWorker = false;\n        webPreferences.allowRunningInsecureContent = false;\n\n        // works in Electron v3 because webPreferences is any instead of WebPreferences\n        // webPreferences.enableRemoteModule = false;\n\n        // TODO: prevent loading remote publications?\n        // const fail = !params.src.startsWith(READIUM2_ELECTRON_HTTP_PROTOCOL) &&\n        //     (_serverURL ? !params.src.startsWith(_serverURL) :\n        //         !(/^https?:\\/\\/127\\.0\\.0\\.1/.test(params.src))\n        //         // (!params.src.startsWith(\"https://127.0.0.1\") && !params.src.startsWith(\"http://127.0.0.1\"))\n        //         );\n\n        // if (fail) {\n        //     debug(\"WEBVIEW will-attach-webview FAIL: \" + params.src);\n        //     event.preventDefault();\n        // }\n    });\n\n    if (!wc.hostWebContents) {\n        return;\n    }\n\n    if (!_electronBrowserWindows || !_electronBrowserWindows.length) {\n        return;\n    }\n    _electronBrowserWindows.forEach((win) => {\n        if (wc.hostWebContents.id === win.webContents.id) {\n            debug(\"WEBVIEW web-contents-created\");\n\n            wc.on(\"will-navigate\", (event, url) => {\n                debug(\"webview.getWebContents().on('will-navigate'\");\n                debug(url);\n                event.preventDefault();\n\n                // Note that event.stopPropagation() and event.url\n                // only exists on WebView `will-navigate` event,\n                // but not WebContents! However the WebView event.preventDefault() does NOT prevent link loading!\n                // https://www.electronjs.org/docs/api/webview-tag#event-will-navigate\n                // vs.:\n                // https://www.electronjs.org/docs/api/web-contents#event-will-navigate\n                // TODO: see if we can intercept `will-navigate` in the renderer process\n                // directly where WebView elements are created. Perhaps the infinite loop problem\n                // (see below) does not occur in this alternative context.\n\n                // unfortunately 'will-navigate' enters an infinite loop with HTML <base href=\"HTTP_URL\" /> ! :(\n                // so we check for the no-HTTP streamer scheme/custom protocol\n                // (which doesn't transform the HTML base URL)\n                if (!url ||\n                    (!url.startsWith(\"thoriumhttps\") &&\n                    !url.startsWith(READIUM2_ELECTRON_HTTP_PROTOCOL))) {\n\n                    debug(\"'will-navigate' SKIPPED.\");\n                    return;\n                }\n\n                const payload: IEventPayload_R2_EVENT_LINK = {\n                    url,\n                };\n                // ipcMain.emit\n                win.webContents.send(R2_EVENT_LINK, payload);\n            });\n        }\n    });\n});\n"]}