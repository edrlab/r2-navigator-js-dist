{"version":3,"file":"sessions.js","sourceRoot":"","sources":["../../../../../src/electron/main/sessions.ts"],"names":[],"mappings":"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","sourcesContent":["import * as debug_ from \"debug\";\r\nimport { app, session } from \"electron\";\r\n\r\nimport { R2_SESSION_WEBVIEW } from \"../common/sessions\";\r\n\r\nconst debug = debug_(\"r2:electron:main\");\r\n\r\nexport function initSessions() {\r\n\r\n    app.on(\"ready\", () => {\r\n        debug(\"app ready\");\r\n\r\n        clearSessions(undefined, undefined);\r\n        const webViewSession = getWebViewSession();\r\n        if (webViewSession) {\r\n            webViewSession.setPermissionRequestHandler((wc, permission, callback) => {\r\n                debug(\"setPermissionRequestHandler\");\r\n                debug(wc.getURL());\r\n                debug(permission);\r\n                callback(true);\r\n            });\r\n        }\r\n    });\r\n\r\n    function willQuitCallback(evt: Electron.Event) {\r\n        debug(\"app will quit\");\r\n\r\n        app.removeListener(\"will-quit\", willQuitCallback);\r\n\r\n        let done = false;\r\n\r\n        setTimeout(() => {\r\n            if (done) {\r\n                return;\r\n            }\r\n            done = true;\r\n            debug(\"Cache and StorageData clearance waited enough => force quitting...\");\r\n            app.quit();\r\n        }, 6000);\r\n\r\n        let sessionCleared = 0;\r\n        const callback = () => {\r\n            sessionCleared++;\r\n            if (sessionCleared >= 2) {\r\n                if (done) {\r\n                    return;\r\n                }\r\n                done = true;\r\n                debug(\"Cache and StorageData cleared, now quitting...\");\r\n                app.quit();\r\n            }\r\n        };\r\n        clearSessions(callback, callback);\r\n\r\n        evt.preventDefault();\r\n    }\r\n\r\n    app.on(\"will-quit\", willQuitCallback);\r\n}\r\n\r\nexport function clearSession(\r\n    sess: Electron.Session,\r\n    str: string,\r\n    callbackCache: (() => void) | undefined,\r\n    callbackStorageData: (() => void) | undefined) {\r\n\r\n    sess.clearCache(() => {\r\n        debug(\"SESSION CACHE CLEARED - \" + str);\r\n        if (callbackCache) {\r\n            callbackCache();\r\n        }\r\n    });\r\n    sess.clearStorageData({\r\n        origin: \"*\",\r\n        quotas: [\r\n            \"temporary\",\r\n            \"persistent\",\r\n            \"syncable\"],\r\n        storages: [\r\n            \"appcache\",\r\n            \"cookies\",\r\n            \"filesystem\",\r\n            \"indexdb\",\r\n            \"localstorage\",\r\n            \"shadercache\",\r\n            \"websql\",\r\n            \"serviceworkers\"],\r\n    }, () => {\r\n        debug(\"SESSION STORAGE DATA CLEARED - \" + str);\r\n        if (callbackStorageData) {\r\n            callbackStorageData();\r\n        }\r\n    });\r\n}\r\n\r\nexport function getWebViewSession() {\r\n    return session.fromPartition(R2_SESSION_WEBVIEW, { cache: true });\r\n}\r\n\r\nexport function clearWebviewSession(\r\n    callbackCache: (() => void) | undefined,\r\n    callbackStorageData: (() => void) | undefined) {\r\n\r\n    const sess = getWebViewSession();\r\n    if (sess) {\r\n        clearSession(sess, \"[\" + R2_SESSION_WEBVIEW + \"]\", callbackCache, callbackStorageData);\r\n    } else {\r\n        if (callbackCache) {\r\n            callbackCache();\r\n        }\r\n        if (callbackStorageData) {\r\n            callbackStorageData();\r\n        }\r\n    }\r\n}\r\n\r\nexport function clearDefaultSession(\r\n    callbackCache: (() => void) | undefined,\r\n    callbackStorageData: (() => void) | undefined) {\r\n\r\n    if (session.defaultSession) {\r\n        // const proto = session.defaultSession.protocol;\r\n        clearSession(session.defaultSession, \"[default]\", callbackCache, callbackStorageData);\r\n    } else {\r\n        if (callbackCache) {\r\n            callbackCache();\r\n        }\r\n        if (callbackStorageData) {\r\n            callbackStorageData();\r\n        }\r\n    }\r\n}\r\n\r\nexport function clearSessions(\r\n    callbackCache: (() => void) | undefined,\r\n    callbackStorageData: (() => void) | undefined) {\r\n\r\n    let done = false;\r\n\r\n    setTimeout(() => {\r\n        if (done) {\r\n            return;\r\n        }\r\n        done = true;\r\n        debug(\"Cache and StorageData clearance waited enough (default session) => force webview session...\");\r\n        clearWebviewSession(callbackCache, callbackStorageData);\r\n    }, 6000);\r\n\r\n    let sessionCleared = 0;\r\n    const callback = () => {\r\n        sessionCleared++;\r\n        if (sessionCleared >= 2) {\r\n            if (done) {\r\n                return;\r\n            }\r\n            done = true;\r\n            debug(\"Cache and StorageData cleared (default session), now webview session...\");\r\n            clearWebviewSession(callbackCache, callbackStorageData);\r\n        }\r\n    };\r\n    clearDefaultSession(callback, callback);\r\n}\r\n"]}