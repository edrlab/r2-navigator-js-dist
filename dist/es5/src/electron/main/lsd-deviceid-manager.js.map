{"version":3,"file":"lsd-deviceid-manager.js","sourceRoot":"","sources":["../../../../../src/electron/main/lsd-deviceid-manager.ts"],"names":[],"mappings":";;AAAA,8BAAgC;AAChC,2BAA6B;AAG7B,2DAAyD;AAE5C,QAAA,gBAAgB,GAAW,IAAI,8BAAa,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;AAExF,IAAM,KAAK,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAE7C,IAAM,+BAA+B,GAAG,WAAW,CAAC;AAYvC,QAAA,eAAe,GAAqB;IAE7C,aAAa,EAAb,UAAc,GAAW;QAErB,IAAM,KAAK,GAAG,+BAA+B,GAAG,GAAG,CAAC;QAEpD,IAAM,QAAQ,GAAG,wBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,WAAW,EAAX;QAEI,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAEnB,IAAM,QAAQ,GAAG,wBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACZ,wBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE;gBACxB,QAAQ,EAAE,EAAE;aACf,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACpB,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAC3B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACvB,wBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YAC1C,CAAC;QACL,CAAC;QAED,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IAED,aAAa,EAAb;QACI,MAAM,CAAC,+BAA+B,CAAC;IAC3C,CAAC;IAED,cAAc,YAAC,GAAW;QAEtB,IAAM,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAE9B,IAAM,QAAQ,GAAG,wBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEZ,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC7B,MAAM,CAAC;QACX,CAAC;QAED,IAAM,KAAK,GAAG,+BAA+B,GAAG,GAAG,CAAC;QACpD,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QACrB,wBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC1C,CAAC;CACJ,CAAC","sourcesContent":["import * as debug_ from \"debug\";\r\nimport * as uuid from \"uuid\";\r\n\r\nimport { IStore } from \"../common/store\";\r\nimport { StoreElectron } from \"../common/store-electron\";\r\n\r\nexport const electronStoreLSD: IStore = new StoreElectron(\"readium2-navigator-lsd\", {});\r\n\r\nconst debug = debug_(\"r2:electron:main:lsd\");\r\n\r\nconst LSD_STORE_DEVICEID_ENTRY_PREFIX = \"deviceID_\";\r\n\r\nexport interface IDeviceIDManager {\r\n    getDeviceNAME(): string;\r\n\r\n    getDeviceID(): string;\r\n\r\n    checkDeviceID(key: string): string | undefined;\r\n\r\n    recordDeviceID(key: string): void;\r\n}\r\n\r\nexport const deviceIDManager: IDeviceIDManager = {\r\n\r\n    checkDeviceID(key: string): string | undefined {\r\n\r\n        const entry = LSD_STORE_DEVICEID_ENTRY_PREFIX + key;\r\n\r\n        const lsdStore = electronStoreLSD.get(\"lsd\");\r\n        if (!lsdStore || !lsdStore[entry]) {\r\n            return undefined;\r\n        }\r\n\r\n        return lsdStore[entry];\r\n    },\r\n\r\n    getDeviceID(): string {\r\n\r\n        let id = uuid.v4();\r\n\r\n        const lsdStore = electronStoreLSD.get(\"lsd\");\r\n        if (!lsdStore) {\r\n            electronStoreLSD.set(\"lsd\", {\r\n                deviceID: id,\r\n            });\r\n        } else {\r\n            if (lsdStore.deviceID) {\r\n                id = lsdStore.deviceID;\r\n            } else {\r\n                lsdStore.deviceID = id;\r\n                electronStoreLSD.set(\"lsd\", lsdStore);\r\n            }\r\n        }\r\n\r\n        return id;\r\n    },\r\n\r\n    getDeviceNAME(): string {\r\n        return \"Readium2 Electron desktop app\";\r\n    },\r\n\r\n    recordDeviceID(key: string) {\r\n\r\n        const id = this.getDeviceID();\r\n\r\n        const lsdStore = electronStoreLSD.get(\"lsd\");\r\n        if (!lsdStore) {\r\n            // Should be init'ed at this.getDeviceID()\r\n            debug(\"LSD store problem?!\");\r\n            return;\r\n        }\r\n\r\n        const entry = LSD_STORE_DEVICEID_ENTRY_PREFIX + key;\r\n        lsdStore[entry] = id;\r\n        electronStoreLSD.set(\"lsd\", lsdStore);\r\n    },\r\n};\r\n"]}