{"version":3,"file":"lsd-injectlcpl.js","sourceRoot":"","sources":["../../../../../src/electron/main/lsd-injectlcpl.ts"],"names":[],"mappings":";;;AAOA,gCAAgC;AAChC,yBAAyB;AAEzB,oDAAiD;AACjD,0DAA4D;AAE5D,qEAAwE;AAExE,MAAM,KAAK,GAAG,MAAM,CAAC,2CAA2C,CAAC,CAAC;AAE3D,KAAK,UAAU,kBAAkB,CACpC,OAAe,EACf,WAAwB,EACxB,eAAuB;IAEvB,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC5C,KAAK,CAAC,QAAQ,CAAC,CAAC;IAEhB,MAAM,OAAO,GACT,WAAW,CAAC,QAAQ;QACpB,WAAW,CAAC,QAAQ,CAAC,OAAO;QAC5B,sCAAsC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAE9E,MAAM,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,uBAAuB,CAAC;IAExE,IAAI,IAAS,CAAC;IACd,IAAI;QACA,IAAI,GAAG,gCAAiB,CAAM,QAAQ,EAAE,SAAG,CAAC,CAAC;KAChD;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAChC;IACD,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;IAC5B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;IAC1B,IAAI,CAAC,IAAI,EAAE,CAAC;IACZ,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC;IASvB,OAAO,IAAI,OAAO,CAAM,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;QAC9C,MAAM,kBAAkB,GAAG,eAAe,GAAG,MAAM,CAAC;QACpD,+BAAiB,CAAC,eAAe,EAAE,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,YAAY,EAC7F,CAAC,GAAG,EAAE,EAAE;YACJ,MAAM,CAAC,GAAG,CAAC,CAAC;QAChB,CAAC,EACD,GAAG,EAAE;YACD,KAAK,CAAC,6BAA6B,CAAC,CAAC;YAErC,UAAU,CAAC,GAAG,EAAE;gBACZ,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;gBAC/B,UAAU,CAAC,GAAG,EAAE;oBACZ,EAAE,CAAC,UAAU,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;oBACnD,OAAO,CAAC,eAAe,CAAC,CAAC;gBAC7B,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC;AAnDD,gDAmDC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as debug_ from \"debug\";\nimport * as fs from \"fs\";\n\nimport { LCP } from \"@r2-lcp-js/parser/epub/lcp\";\nimport { TaJsonDeserialize } from \"@r2-lcp-js/serializable\";\nimport { Publication } from \"@r2-shared-js/models/publication\";\nimport { injectBufferInZip } from \"@r2-utils-js/_utils/zip/zipInjector\";\n\nconst debug = debug_(\"r2:navigator#electron/main/lsd-injectlcpl\");\n\nexport async function lsdLcpUpdateInject(\n    lcplStr: string,\n    publication: Publication,\n    publicationPath: string): Promise<string> {\n\n    const lcplJson = global.JSON.parse(lcplStr);\n    debug(lcplJson);\n\n    const isAudio =\n        publication.Metadata &&\n        publication.Metadata.RDFType &&\n        /http[s]?:\\/\\/schema\\.org\\/Audiobook$/.test(publication.Metadata.RDFType);\n\n    const zipEntryPath = isAudio ? \"license.lcpl\" : \"META-INF/license.lcpl\";\n\n    let lcpl: LCP;\n    try {\n        lcpl = TaJsonDeserialize<LCP>(lcplJson, LCP);\n    } catch (erorz) {\n        return Promise.reject(erorz);\n    }\n    lcpl.ZipPath = zipEntryPath;\n    lcpl.JsonSource = lcplStr;\n    lcpl.init();\n    publication.LCP = lcpl;\n\n    // https://github.com/readium/readium-lcp-specs/issues/15#issuecomment-358247286\n    // application/vnd.readium.lcp.license-1.0+json (LEGACY)\n    // application/vnd.readium.lcp.license.v1.0+json (NEW)\n    // application/vnd.readium.license.status.v1.0+json (LSD)\n    // const mime = \"application/vnd.readium.lcp.license.v1.0+json\";\n    // publication.AddLink(mime, [\"license\"], lcpl.ZipPath, false);\n\n    return new Promise<any>(async (resolve, reject) => {\n        const newPublicationPath = publicationPath + \".new\";\n        injectBufferInZip(publicationPath, newPublicationPath, Buffer.from(lcplStr, \"utf8\"), zipEntryPath,\n            (err) => {\n                reject(err);\n            },\n            () => {\n                debug(\"EPUB license.lcpl injected.\");\n\n                setTimeout(() => {\n                    fs.unlinkSync(publicationPath);\n                    setTimeout(() => {\n                        fs.renameSync(newPublicationPath, publicationPath);\n                        resolve(publicationPath);\n                    }, 500);\n                }, 500);\n            });\n    });\n}\n"]}