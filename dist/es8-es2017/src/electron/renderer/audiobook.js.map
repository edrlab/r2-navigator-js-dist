{"version":3,"file":"audiobook.js","sourceRoot":"","sources":["../../../../../src/electron/renderer/audiobook.ts"],"names":[],"mappings":";;;AAOA,6CAG0B;AAG1B,MAAM,GAAG,GAAG,MAAM,CAAC,MAAsC,CAAC;AAE1D,SAAgB,SAAS;IACrB,MAAM,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,uBAAuB,EAAE,CAAC;IAC7D,IAAI,CAAC,aAAa,EAAE;QAChB,OAAO;KACV;IAED,UAAU,CAAC,KAAK,IAAI,EAAE;;QAClB,IAAI,MAAA,aAAa,CAAC,QAAQ,0CAAE,UAAU,EAAE;YACpC,MAAM,aAAa,CAAC,IAAI,CAAC,+BAAsB,CAAC,CAAC;SACpD;IACL,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC;AAXD,8BAWC;AAED,SAAgB,UAAU;IACtB,MAAM,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,uBAAuB,EAAE,CAAC;IAC7D,IAAI,CAAC,aAAa,EAAE;QAChB,OAAO;KACV;IAED,UAAU,CAAC,KAAK,IAAI,EAAE;;QAClB,IAAI,MAAA,aAAa,CAAC,QAAQ,0CAAE,UAAU,EAAE;YACpC,MAAM,aAAa,CAAC,IAAI,CAAC,gCAAuB,CAAC,CAAC;SACrD;IACL,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC;AAXD,gCAWC;AAED,SAAgB,oBAAoB;IAChC,MAAM,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,uBAAuB,EAAE,CAAC;IAC7D,IAAI,CAAC,aAAa,EAAE;QAChB,OAAO;KACV;IAED,UAAU,CAAC,KAAK,IAAI,EAAE;;QAClB,IAAI,MAAA,aAAa,CAAC,QAAQ,0CAAE,UAAU,EAAE;YACpC,MAAM,aAAa,CAAC,IAAI,CAAC,yCAAgC,CAAC,CAAC;SAC9D;IACL,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC;AAXD,oDAWC;AAED,SAAgB,WAAW;IACvB,MAAM,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,uBAAuB,EAAE,CAAC;IAC7D,IAAI,CAAC,aAAa,EAAE;QAChB,OAAO;KACV;IAED,UAAU,CAAC,KAAK,IAAI,EAAE;;QAClB,IAAI,MAAA,aAAa,CAAC,QAAQ,0CAAE,UAAU,EAAE;YACpC,MAAM,aAAa,CAAC,IAAI,CAAC,8BAAqB,CAAC,CAAC;SACnD;IACL,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC;AAXD,kCAWC;AAED,SAAgB,YAAY;IACxB,MAAM,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,uBAAuB,EAAE,CAAC;IAC7D,IAAI,CAAC,aAAa,EAAE;QAChB,OAAO;KACV;IAED,UAAU,CAAC,KAAK,IAAI,EAAE;;QAClB,IAAI,MAAA,aAAa,CAAC,QAAQ,0CAAE,UAAU,EAAE;YACpC,MAAM,aAAa,CAAC,IAAI,CAAC,+BAAsB,CAAC,CAAC;SACpD;IACL,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC;AAXD,oCAWC;AAiBD,IAAI,aAAa,GAAG,CAAC,CAAC;AACtB,SAAgB,2BAA2B,CAAC,KAAa;IACrD,aAAa,GAAG,KAAK,CAAC;AAC1B,CAAC;AAFD,kEAEC;AACD,SAAgB,2BAA2B;IACvC,OAAO,aAAa,CAAC;AACzB,CAAC;AAFD,kEAEC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport {\n    R2_EVENT_AUDIO_DO_PAUSE, R2_EVENT_AUDIO_DO_PLAY, R2_EVENT_AUDIO_FORWARD, R2_EVENT_AUDIO_REWIND,\n    R2_EVENT_AUDIO_TOGGLE_PLAY_PAUSE,\n} from \"../common/events\";\nimport { ReadiumElectronBrowserWindow } from \"./webview/state\";\n\nconst win = global.window as ReadiumElectronBrowserWindow;\n\nexport function audioPlay() {\n    const activeWebView = win.READIUM2.getFirstOrSecondWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    setTimeout(async () => {\n        if (activeWebView.READIUM2?.DOMisReady) {\n            await activeWebView.send(R2_EVENT_AUDIO_DO_PLAY);\n        }\n    }, 0);\n}\n\nexport function audioPause() {\n    const activeWebView = win.READIUM2.getFirstOrSecondWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    setTimeout(async () => {\n        if (activeWebView.READIUM2?.DOMisReady) {\n            await activeWebView.send(R2_EVENT_AUDIO_DO_PAUSE);\n        }\n    }, 0);\n}\n\nexport function audioTogglePlayPause() {\n    const activeWebView = win.READIUM2.getFirstOrSecondWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    setTimeout(async () => {\n        if (activeWebView.READIUM2?.DOMisReady) {\n            await activeWebView.send(R2_EVENT_AUDIO_TOGGLE_PLAY_PAUSE);\n        }\n    }, 0);\n}\n\nexport function audioRewind() {\n    const activeWebView = win.READIUM2.getFirstOrSecondWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    setTimeout(async () => {\n        if (activeWebView.READIUM2?.DOMisReady) {\n            await activeWebView.send(R2_EVENT_AUDIO_REWIND);\n        }\n    }, 0);\n}\n\nexport function audioForward() {\n    const activeWebView = win.READIUM2.getFirstOrSecondWebView();\n    if (!activeWebView) {\n        return;\n    }\n\n    setTimeout(async () => {\n        if (activeWebView.READIUM2?.DOMisReady) {\n            await activeWebView.send(R2_EVENT_AUDIO_FORWARD);\n        }\n    }, 0);\n}\n\n// export function audioPlaybackRate(speed: number) {\n//     const activeWebView = win.READIUM2.getFirstOrSecondWebView();\n//     if (!activeWebView) {\n//         return;\n//     }\n\n//     setTimeout(async () => {\n//    if (activeWebView.READIUM2?.DOMisReady) {}\n//         const payload: IEventPayload_R2_EVENT_AUDIO_PLAYBACK_RATE = {\n//             speed,\n//         };\n//         await activeWebView.send(R2_EVENT_AUDIO_PLAYBACK_RATE, payload);\n//     }, 0);\n// }\n\nlet _playbackRate = 1;\nexport function setCurrentAudioPlaybackRate(speed: number) {\n    _playbackRate = speed;\n}\nexport function getCurrentAudioPlaybackRate() {\n    return _playbackRate;\n}\n"]}