{"version":3,"file":"highlight.js","sourceRoot":"","sources":["../../../../../../src/electron/renderer/webview/highlight.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as crypto from \"crypto\";\nimport { debounce } from \"debounce\";\nimport { ipcRenderer } from \"electron\";\n\nimport {\n    IEventPayload_R2_EVENT_HIGHLIGHT_CLICK, R2_EVENT_HIGHLIGHT_CLICK,\n} from \"../../common/events\";\nimport {\n    HighlightDrawTypeStrikethrough, HighlightDrawTypeUnderline, IColor, IHighlight,\n    IHighlightDefinition,\n} from \"../../common/highlight\";\nimport { isPaginated } from \"../../common/readium-css-inject\";\nimport { ISelectionInfo } from \"../../common/selection\";\nimport { IRectSimple, getClientRectsNoOverlap_ } from \"../common/rect-utils\";\nimport { getScrollingElement } from \"./readium-css\";\nimport { convertRangeInfo } from \"./selection\";\nimport { IReadiumElectronWebviewWindow } from \"./state\";\n\n// import { isRTL } from './readium-css';\n\nexport const ID_HIGHLIGHTS_CONTAINER = \"R2_ID_HIGHLIGHTS_CONTAINER\";\nexport const CLASS_HIGHLIGHT_CONTAINER = \"R2_CLASS_HIGHLIGHT_CONTAINER\";\nexport const CLASS_HIGHLIGHT_AREA = \"R2_CLASS_HIGHLIGHT_AREA\";\nexport const CLASS_HIGHLIGHT_BOUNDING_AREA = \"R2_CLASS_HIGHLIGHT_BOUNDING_AREA\";\n\nconst IS_DEV = (process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"dev\");\n\nconst USE_SVG = false;\nconst USE_BLEND_MODE = true;\n\nconst DEFAULT_BACKGROUND_COLOR_OPACITY = USE_BLEND_MODE ? 0.6 : 0.3;\nconst ALT_BACKGROUND_COLOR_OPACITY = USE_BLEND_MODE ? 0.9 : 0.45;\nconst ALT_OTHER_BACKGROUND_COLOR_OPACITY = 0.35;\nconst DEFAULT_BACKGROUND_COLOR: IColor = {\n    blue: 100,\n    green: 50,\n    red: 230,\n};\n\nconst CSS_COMMON_RESET =\n    \" background-color: transparent !important; \" +\n    \"position: absolute !important; \" +\n    \"top: 0 !important; \" +\n    \"left: 0 !important; \" +\n    \"overflow: visible !important; \" +\n    \"margin: 0 !important; \" +\n    \"padding: 0 !important; \" +\n    \"border: 0 !important; \" +\n    \"box-sizing: border-box !important; \";\n\nconst _highlights: IHighlight[] = [];\n\ninterface IAreaWithActiveFlag extends Element {\n    active: boolean | undefined;\n}\n\ninterface IWithRect {\n    rect: IRectSimple;\n    scale: number;\n    // xOffset: number;\n    // yOffset: number;\n}\ninterface IHTMLDivElementWithRect extends HTMLDivElement, IWithRect {\n}\n\nconst SVG_XML_NAMESPACE = \"http://www.w3.org/2000/svg\";\ninterface ISVGRectElementWithRect extends SVGRectElement, IWithRect {\n}\ninterface ISVGLineElementWithRect extends SVGLineElement, IWithRect {\n}\n\n// interface IDocumentBody extends HTMLElement {\n//     _CachedBoundingClientRect: DOMRect | undefined;\n//     _CachedMargins: IRect | undefined;\n// }\nexport function getBoundingClientRectOfDocumentBody(win: IReadiumElectronWebviewWindow): DOMRect {\n    // TODO: does this need to be cached? (performance, notably during mouse hover)\n    return win.document.body.getBoundingClientRect();\n\n    // if (!(win.document.body as IDocumentBody)._CachedBoundingClientRect) {\n    //     (win.document.body as IDocumentBody)._CachedBoundingClientRect = win.document.body.getBoundingClientRect();\n    // }\n    // console.log(\"_CachedBoundingClientRect\",\n    //     JSON.stringify((win.document.body as IDocumentBody)._CachedBoundingClientRect));\n    // return (win.document.body as IDocumentBody)._CachedBoundingClientRect as DOMRect;\n}\n// export function invalidateBoundingClientRectOfDocumentBody(win: IReadiumElectronWebviewWindow) {\n//     (win.document.body as IDocumentBody)._CachedBoundingClientRect = undefined;\n// }\n// function getBodyMargin(win: IReadiumElectronWebviewWindow): IRect {\n//     const bodyStyle = win.getComputedStyle(win.document.body);\n//     if (!(win.document.body as IDocumentBody)._CachedMargins) {\n//         (win.document.body as IDocumentBody)._CachedMargins = {\n//             bottom: parseInt(bodyStyle.marginBottom, 10),\n//             height: 0,\n//             left: parseInt(bodyStyle.marginLeft, 10),\n//             right: parseInt(bodyStyle.marginRight, 10),\n//             top: parseInt(bodyStyle.marginTop, 10),\n//             width: 0,\n//         };\n//     }\n//     console.log(\"_CachedMargins\",\n//         JSON.stringify((win.document.body as IDocumentBody)._CachedMargins));\n//     return (win.document.body as IDocumentBody)._CachedMargins as IRect;\n// }\n\nfunction resetHighlightBoundingStyle(_win: IReadiumElectronWebviewWindow, highlightBounding: HTMLElement) {\n\n    if (!(highlightBounding as unknown as IAreaWithActiveFlag).active) {\n        return;\n    }\n    (highlightBounding as unknown as IAreaWithActiveFlag).active = false;\n\n    highlightBounding.style.setProperty(\"outline\", \"none\", \"important\");\n\n    highlightBounding.style.setProperty(\n        \"background-color\",\n        \"transparent\",\n        \"important\");\n}\n\n// tslint:disable-next-line:max-line-length\nfunction setHighlightBoundingStyle(_win: IReadiumElectronWebviewWindow, highlightBounding: HTMLElement, highlight: IHighlight) {\n\n    if ((highlightBounding as unknown as IAreaWithActiveFlag).active) {\n        return;\n    }\n    (highlightBounding as unknown as IAreaWithActiveFlag).active = true;\n\n    const opacity = ALT_BACKGROUND_COLOR_OPACITY;\n\n    highlightBounding.style.setProperty(\n        \"background-color\",\n        USE_BLEND_MODE ?\n            `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue})` :\n            `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity})`,\n        \"important\");\n    // if (USE_BLEND_MODE) {\n    //     highlightBounding.style.setProperty(\"mix-blend-mode\", \"multiply\", \"important\");\n    //     highlightBounding.style.opacity = `${opacity}`;\n    // }\n\n    // tslint:disable-next-line:max-line-length\n    highlightBounding.style.setProperty(\"outline-color\", `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, 1)`, \"important\");\n    highlightBounding.style.setProperty(\"outline-style\", \"solid\", \"important\");\n    highlightBounding.style.setProperty(\"outline-width\", \"1px\", \"important\");\n    highlightBounding.style.setProperty(\"outline-offset\", \"0px\", \"important\");\n}\n\nfunction resetHighlightAreaStyle(win: IReadiumElectronWebviewWindow, highlightArea: HTMLElement | SVGElement) {\n\n    if (USE_BLEND_MODE) {\n        return;\n    }\n\n    if (!(highlightArea as unknown as IAreaWithActiveFlag).active) {\n        return;\n    }\n    (highlightArea as unknown as IAreaWithActiveFlag).active = false;\n\n    const opacity = DEFAULT_BACKGROUND_COLOR_OPACITY;\n\n    const useSVG = !win.READIUM2.DEBUG_VISUALS && USE_SVG;\n    const isSVG = useSVG && highlightArea.namespaceURI === SVG_XML_NAMESPACE;\n\n    const id = isSVG ?\n        // tslint:disable-next-line:max-line-length\n        ((highlightArea.parentNode && highlightArea.parentNode.parentNode && highlightArea.parentNode.parentNode.nodeType === Node.ELEMENT_NODE && (highlightArea.parentNode.parentNode as Element).getAttribute) ? (highlightArea.parentNode.parentNode as Element).getAttribute(\"id\") : undefined) :\n        // tslint:disable-next-line:max-line-length\n        ((highlightArea.parentNode && highlightArea.parentNode.nodeType === Node.ELEMENT_NODE && (highlightArea.parentNode as Element).getAttribute) ? (highlightArea.parentNode as Element).getAttribute(\"id\") : undefined);\n    if (id) {\n        const highlight = _highlights.find((h) => {\n            return h.id === id;\n        });\n        if (highlight) {\n            // highlightArea as ElementCSSInlineStyle (implied by HTMLElement | SVGElement)\n            if (isSVG) {\n                if (!highlight.drawType) {\n                    // tslint:disable-next-line:max-line-length\n                    highlightArea.style.setProperty(\n                        \"fill\",\n                        `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue})`,\n                        \"important\");\n                }\n                // tslint:disable-next-line:max-line-length\n                highlightArea.style.setProperty(\n                    \"stroke\",\n                    `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue})`,\n                    \"important\");\n                if (!USE_BLEND_MODE) {\n                    if (!highlight.drawType) {\n                        // tslint:disable-next-line:max-line-length\n                        highlightArea.style.setProperty(\n                            \"fill-opacity\",\n                            `${opacity}`,\n                            \"important\");\n                    }\n                    // tslint:disable-next-line:max-line-length\n                    highlightArea.style.setProperty(\n                        \"stroke-opacity\",\n                        `${opacity}`,\n                        \"important\");\n                }\n            } else {\n                // tslint:disable-next-line:max-line-length\n                highlightArea.style.setProperty(\n                    \"background-color\",\n                    highlight.drawType === HighlightDrawTypeUnderline ? \"transparent\" : // underline is border bottom\n                    (USE_BLEND_MODE ?\n                        `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue})` :\n                        `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity})`),\n                    \"important\");\n            }\n\n            // if (USE_BLEND_MODE) {\n            //     highlightArea.style.setProperty(\"mix-blend-mode\", \"multiply\");\n            //     highlightArea.style.opacity = `${opacity}`;\n            // }\n        }\n    }\n}\n\n// tslint:disable-next-line:max-line-length\nfunction setHighlightAreaStyle(win: IReadiumElectronWebviewWindow, highlightAreas: NodeList, highlight: IHighlight) {\n\n    if (USE_BLEND_MODE) {\n        return;\n    }\n\n    const opacity = ALT_BACKGROUND_COLOR_OPACITY;\n\n    const useSVG = !win.READIUM2.DEBUG_VISUALS && USE_SVG;\n    for (const highlightArea_ of highlightAreas) {\n        const highlightArea = highlightArea_ as HTMLElement;\n\n        if ((highlightArea as unknown as IAreaWithActiveFlag).active) {\n            continue;\n        }\n        (highlightArea as unknown as IAreaWithActiveFlag).active = true;\n\n        const isSVG = useSVG && highlightArea.namespaceURI === SVG_XML_NAMESPACE;\n\n        // highlightArea as ElementCSSInlineStyle (implied by HTMLElement | SVGElement)\n        if (isSVG) {\n            if (!highlight.drawType) {\n                // tslint:disable-next-line:max-line-length\n                highlightArea.style.setProperty(\n                    \"fill\",\n                    `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue})`,\n                    \"important\");\n            }\n            // tslint:disable-next-line:max-line-length\n            highlightArea.style.setProperty(\n                \"stroke\",\n                `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue})`,\n                \"important\");\n\n            if (!USE_BLEND_MODE) {\n                if (!highlight.drawType) {\n                    // tslint:disable-next-line:max-line-length\n                    highlightArea.style.setProperty(\n                        \"fill-opacity\",\n                        `${opacity}`,\n                        \"important\");\n                }\n                // tslint:disable-next-line:max-line-length\n                highlightArea.style.setProperty(\n                    \"stroke-opacity\",\n                    `${opacity}`,\n                    \"important\");\n            }\n        } else {\n            // tslint:disable-next-line:max-line-length\n            highlightArea.style.setProperty(\n                \"background-color\",\n                highlight.drawType === HighlightDrawTypeUnderline ? \"transparent\" : // underline is border bottom\n                (USE_BLEND_MODE ?\n                    `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue})` :\n                    `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity})`),\n                \"important\");\n        }\n\n        // if (USE_BLEND_MODE) {\n        //     highlightArea.style.setProperty(\"mix-blend-mode\", \"multiply\", \"important\");\n        //     highlightArea.style.opacity = `${opacity}`;\n        // }\n        // if (!win.READIUM2.DEBUG_VISUALS) {\n        // tslint:disable-next-line:max-line-length\n        //     (highlightArea as HTMLElement).style.outlineColor = `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, 1)`;\n        //     (highlightArea as HTMLElement).style.outlineStyle = \"solid\";\n        //     (highlightArea as HTMLElement).style.outlineWidth = \"1px\";\n        //     (highlightArea as HTMLElement).style.outlineOffset = \"0px\";\n        // }\n    }\n}\n\nfunction processMouseEvent(win: IReadiumElectronWebviewWindow, ev: MouseEvent) {\n\n    // const highlightsContainer = documant.getElementById(`${ID_HIGHLIGHTS_CONTAINER}`);\n    if (!_highlightsContainer) {\n        return;\n    }\n\n    const isMouseMove = ev.type === \"mousemove\";\n    if (isMouseMove) {\n        // no hit testing during user selection drag\n        if (ev.buttons > 0) {\n            return;\n        }\n\n        if (!_highlights.length) {\n            return;\n        }\n    }\n\n    const documant = win.document;\n    const scrollElement = getScrollingElement(documant);\n\n    // relative to fixed window top-left corner\n    // (unlike pageX/Y which is relative to top-left rendered content area, subject to scrolling)\n    const x = ev.clientX;\n    const y = ev.clientY;\n\n    const paginated = isPaginated(documant);\n\n    // COSTLY! TODO: cache DOMRect\n    const bodyRect = getBoundingClientRectOfDocumentBody(win);\n\n    const xOffset = paginated ? (-scrollElement.scrollLeft) : bodyRect.left;\n    const yOffset = paginated ? (-scrollElement.scrollTop) : bodyRect.top;\n\n    const testHit = (highlightFragment: Element) => {\n        const withRect = (highlightFragment as unknown) as IWithRect;\n        // tslint:disable-next-line:max-line-length\n        // console.log(`RECT: ${withRect.rect.left} | ${withRect.rect.top} // ${withRect.rect.width} | ${withRect.rect.height}`);\n\n        const left = withRect.rect.left + xOffset; // (paginated ? withRect.xOffset : xOffset);\n        const top = withRect.rect.top + yOffset; // (paginated ? withRect.yOffset : yOffset);\n        if (x >= left &&\n            x < (left + withRect.rect.width) &&\n            y >= top &&\n            y < (top + withRect.rect.height)\n            ) {\n\n            return true;\n        }\n        return false;\n    };\n\n    const useSVG = !win.READIUM2.DEBUG_VISUALS && USE_SVG;\n\n    let foundHighlight: IHighlight | undefined;\n    let foundElement: IHTMLDivElementWithRect | undefined;\n    // for (const highlight of _highlights) {\n    for (let i = _highlights.length - 1; i >= 0; i--) {\n        const highlight = _highlights[i];\n\n        let highlightParent = documant.getElementById(`${highlight.id}`);\n        if (!highlightParent) { // ??!!\n            highlightParent = _highlightsContainer.querySelector(`#${highlight.id}`); // .${CLASS_HIGHLIGHT_CONTAINER}\n        }\n        if (!highlightParent) { // what?\n            continue;\n        }\n\n        let hit = false;\n        let highlightFragment = highlightParent.firstElementChild;\n        while (highlightFragment) {\n            if (useSVG && highlightFragment.namespaceURI === SVG_XML_NAMESPACE) {\n                let svgRect = highlightFragment.firstElementChild;\n                while (svgRect) {\n                    if (testHit(svgRect)) {\n                        hit = true;\n                        break;\n                    }\n                    svgRect = svgRect.nextElementSibling;\n                }\n                if (hit) {\n                    break;\n                }\n            } else if (highlightFragment.classList.contains(CLASS_HIGHLIGHT_AREA)) {\n\n                if (testHit(highlightFragment)) {\n                    hit = true;\n                    break;\n                }\n            }\n            highlightFragment = highlightFragment.nextElementSibling;\n        }\n        // const highlightFragments = highlightParent.querySelectorAll(`.${CLASS_HIGHLIGHT_AREA}`);\n        // for (const highlightFragment of highlightFragments) {\n        // }\n        if (hit) {\n            foundHighlight = highlight;\n            foundElement = highlightParent as IHTMLDivElementWithRect;\n            break;\n        }\n\n        // hit = false;\n        // const highlightBounding = highlightParent.querySelector(`.${CLASS_HIGHLIGHT_BOUNDING_AREA}`);\n        // if (highlightBounding) {\n        //     const highlightBoundingWithRect = highlightBounding as IHTMLDivElementWithRect;\n\n        //     const left = highlightBoundingWithRect.rect.left + highlightBoundingWithRect.xOffset;\n        //     const top = highlightBoundingWithRect.rect.top + highlightBoundingWithRect.yOffset;\n        //     if (x >= left &&\n        //         x < (left + highlightBoundingWithRect.rect.width) &&\n        //         y >= top &&\n        //         y < (top + highlightBoundingWithRect.rect.height)\n        //         ) {\n\n        //         hit = true;\n        //     }\n        // }\n        // if (hit) {\n        //     foundHighlight = highlight;\n        //     foundElement = highlightParent as IHTMLDivElementWithRect;\n        //     break;\n        // }\n    }\n    const opacity = DEFAULT_BACKGROUND_COLOR_OPACITY;\n    if (!foundHighlight || !foundElement) {\n\n        let highlightContainer = _highlightsContainer.firstElementChild;\n        while (highlightContainer) {\n            // if (highlightContainer.classList.contains(CLASS_HIGHLIGHT_CONTAINER)) {\n            // }\n            if (USE_BLEND_MODE) {\n                (highlightContainer as HTMLElement).style.setProperty(\"opacity\", `${opacity}`, \"important\");\n            }\n\n            if (win.READIUM2.DEBUG_VISUALS) {\n                let highlightContainerChild = highlightContainer.firstElementChild;\n                while (highlightContainerChild) {\n                    if (highlightContainerChild.classList.contains(CLASS_HIGHLIGHT_BOUNDING_AREA)) {\n                        resetHighlightBoundingStyle(win, highlightContainerChild as HTMLElement);\n                    } else if (!USE_BLEND_MODE && highlightContainerChild.classList.contains(CLASS_HIGHLIGHT_AREA)) {\n                        resetHighlightAreaStyle(win, highlightContainerChild as HTMLElement);\n                    } else if (!USE_BLEND_MODE &&\n                        useSVG && highlightContainerChild.namespaceURI === SVG_XML_NAMESPACE) {\n                        let svgRect = highlightContainerChild.firstElementChild;\n                        while (svgRect) {\n                            resetHighlightAreaStyle(win, highlightContainerChild as HTMLElement);\n                            svgRect = svgRect.nextElementSibling;\n                        }\n                    }\n                    highlightContainerChild = highlightContainerChild.nextElementSibling;\n                }\n            }\n\n            highlightContainer = highlightContainer.nextElementSibling;\n        }\n        // const highlightBoundings = _highlightsContainer.querySelectorAll(`.${CLASS_HIGHLIGHT_BOUNDING_AREA}`);\n        // for (const highlightBounding of highlightBoundings) {\n        // }\n        // const allHighlightAreas = _highlightsContainer.querySelectorAll(`.${CLASS_HIGHLIGHT_AREA}`);\n        // for (const highlightArea of allHighlightAreas) {\n        // }\n        // if (USE_BLEND_MODE) {\n        //     const allHighlightContainers =\n        //         _highlightsContainer.querySelectorAll(`.${CLASS_HIGHLIGHT_CONTAINER}`);\n        //     for (const highlightContainer of allHighlightContainers) {\n        //     }\n        // }\n        return;\n    }\n    if (foundElement.getAttribute(\"data-click\")) {\n        if (isMouseMove) {\n\n            // tslint:disable-next-line:max-line-length\n            const foundElementHighlightAreas = foundElement.querySelectorAll(`.${CLASS_HIGHLIGHT_AREA}`);\n            const foundElementHighlightBounding = foundElement.querySelector(`.${CLASS_HIGHLIGHT_BOUNDING_AREA}`);\n\n            let highlightContainer = _highlightsContainer.firstElementChild;\n            while (highlightContainer) {\n                // if (highlightContainer.classList.contains(CLASS_HIGHLIGHT_CONTAINER)) {\n                // }\n\n                if (USE_BLEND_MODE) {\n                    if (highlightContainer !== foundElement) {\n                        (highlightContainer as HTMLElement).style.setProperty(\"opacity\", `${ALT_OTHER_BACKGROUND_COLOR_OPACITY}`, \"important\");\n                    }\n                }\n\n                if (win.READIUM2.DEBUG_VISUALS) {\n                    let highlightContainerChild: Element | null = highlightContainer.firstElementChild;\n                    while (highlightContainerChild) {\n                        if (highlightContainerChild.classList.contains(CLASS_HIGHLIGHT_BOUNDING_AREA)) {\n                            if (!foundElementHighlightBounding ||\n                                highlightContainerChild !== foundElementHighlightBounding) {\n                                resetHighlightBoundingStyle(win, highlightContainerChild as HTMLElement);\n                            }\n                        } else if (!USE_BLEND_MODE &&\n                            highlightContainerChild.classList.contains(CLASS_HIGHLIGHT_AREA)) {\n                            // if (foundElementHighlightAreas.indexOf(highlightContainerChild) < 0) {\n                            if (highlightContainerChild.parentNode !== foundElement) {\n                                // can also be SVGElement\n                                resetHighlightAreaStyle(win, highlightContainerChild as HTMLElement);\n                            }\n                        }\n                        highlightContainerChild = highlightContainerChild.nextElementSibling;\n                    }\n                }\n\n                highlightContainer = highlightContainer.nextElementSibling;\n            }\n            if (USE_BLEND_MODE) {\n                foundElement.style.setProperty(\"opacity\", `${ALT_BACKGROUND_COLOR_OPACITY}`, \"important\");\n            } else {\n                // tslint:disable-next-line:max-line-length\n                setHighlightAreaStyle(win, foundElementHighlightAreas, foundHighlight); // can also be SVGElement[]\n            }\n\n            if (foundElementHighlightBounding && win.READIUM2.DEBUG_VISUALS) {\n                setHighlightBoundingStyle(win, foundElementHighlightBounding as HTMLElement, foundHighlight);\n            }\n\n            // const allHighlightAreas = _highlightsContainer.querySelectorAll(`.${CLASS_HIGHLIGHT_AREA}`);\n            // for (const highlightArea of allHighlightAreas) {\n            // }\n            // if (USE_BLEND_MODE) {\n            //     const allHighlightContainers =\n            //         _highlightsContainer.querySelectorAll(`.${CLASS_HIGHLIGHT_CONTAINER}`);\n            //     for (const highlightContainer of allHighlightContainers) {\n            //     }\n            // }\n\n            // const allHighlightBoundings = _highlightsContainer.querySelectorAll(`.${CLASS_HIGHLIGHT_BOUNDING_AREA}`);\n            // for (const highlightBounding of allHighlightBoundings) {\n            // }\n        } else if (ev.type === \"mouseup\" || ev.type === \"click\") {\n            const payload: IEventPayload_R2_EVENT_HIGHLIGHT_CLICK = {\n                highlight: foundHighlight,\n            };\n            ipcRenderer.sendToHost(R2_EVENT_HIGHLIGHT_CLICK, payload);\n        }\n    }\n}\n\nlet lastMouseDownX = -1;\nlet lastMouseDownY = -1;\nlet bodyEventListenersSet = false;\nlet _highlightsContainer: HTMLElement | null;\nfunction ensureHighlightsContainer(win: IReadiumElectronWebviewWindow): HTMLElement {\n    const documant = win.document;\n\n    if (!_highlightsContainer) {\n\n        // Note that legacy ResizeSensor sets body position to \"relative\" (default static).\n        // Also note that ReadiumCSS default to (via stylesheet :root):\n        // documant.documentElement.style.position = \"relative\";\n        // see styles.js (static CSS injection):\n        // documant.documentElement.style.setProperty(\"height\", \"100vh\", \"important\");\n        // documant.body.style.position = \"relative\";\n        // documant.body.style.setProperty(\"position\", \"relative\", \"important\");\n        // documant.body.style.height = \"inherit\";\n        // https://github.com/edrlab/thorium-reader/issues/1658\n\n        if (!bodyEventListenersSet) {\n            bodyEventListenersSet = true;\n\n            // reminder: mouseenter/mouseleave do not bubble, so no event delegation\n            // documant.body.addEventListener(\"click\", (ev: MouseEvent) => {\n            //     processMouseEvent(win, ev);\n            // }, false);\n            documant.body.addEventListener(\"mousedown\", (ev: MouseEvent) => {\n                lastMouseDownX = ev.clientX;\n                lastMouseDownY = ev.clientY;\n            }, false);\n            documant.body.addEventListener(\"mouseup\", (ev: MouseEvent) => {\n                if ((Math.abs(lastMouseDownX - ev.clientX) < 3) &&\n                    (Math.abs(lastMouseDownY - ev.clientY) < 3)) {\n                    processMouseEvent(win, ev);\n                }\n            }, false);\n            documant.body.addEventListener(\"mousemove\", (ev: MouseEvent) => {\n                processMouseEvent(win, ev);\n            }, false);\n        }\n\n        _highlightsContainer = documant.createElement(\"div\");\n        _highlightsContainer.setAttribute(\"id\", ID_HIGHLIGHTS_CONTAINER);\n        _highlightsContainer.setAttribute(\"style\",\n            \"width: auto !important; \" +\n            \"height: auto !important; \" +\n            CSS_COMMON_RESET);\n        _highlightsContainer.style.setProperty(\n            \"pointer-events\",\n            \"none\",\n            \"important\");\n        // if (USE_BLEND_MODE) {\n        //     const opacity = DEFAULT_BACKGROUND_COLOR_OPACITY;\n        //     _highlightsContainer.style.setProperty(\"mix-blend-mode\", \"multiply\", \"important\");\n        //     _highlightsContainer.style.opacity = `${opacity}`;\n        // }\n        documant.body.append(_highlightsContainer);\n        // documant.documentElement.append(_highlightsContainer);\n    }\n    return _highlightsContainer;\n}\n\nexport function hideAllhighlights(_documant: Document) {\n    // for (const highlight of _highlights) {\n    //     const highlightContainer = documant.getElementById(highlight.id);\n    //     if (highlightContainer) {\n    //         highlightContainer.remove();\n    //     }\n    // }\n    if (_highlightsContainer) {\n        _highlightsContainer.remove();\n        _highlightsContainer = null;\n        // ensureHighlightsContainer(documant);\n    }\n}\n\nexport function destroyAllhighlights(documant: Document) {\n    // _highlights.forEach((highlight) => {\n    //     destroyHighlight(highlight.id);\n    // });\n    // for (const highlight of _highlights) {\n    //     destroyHighlight(highlight.id);\n    // }\n    // for (let i = _highlights.length - 1; i >= 0; i--) {\n    //     const highlight = _highlights[i];\n    //     destroyHighlight(highlight.id);\n    // }\n    hideAllhighlights(documant);\n    _highlights.splice(0, _highlights.length);\n}\n\nexport function destroyHighlight(documant: Document, id: string) {\n    let i = -1;\n    const highlight = _highlights.find((h, j) => {\n        i = j;\n        return h.id === id;\n    });\n    if (highlight && i >= 0 && i < _highlights.length) {\n        _highlights.splice(i, 1);\n    }\n\n    const highlightContainer = documant.getElementById(id);\n    if (highlightContainer) {\n        highlightContainer.remove();\n    }\n}\n\nexport function recreateAllHighlightsRaw(win: IReadiumElectronWebviewWindow) {\n    const documant = win.document;\n    hideAllhighlights(documant);\n\n    const bodyRect = getBoundingClientRectOfDocumentBody(win);\n\n    const docFrag = documant.createDocumentFragment();\n    for (const highlight of _highlights) {\n        const div = createHighlightDom(win, highlight, bodyRect);\n        if (div) {\n            docFrag.append(div);\n        }\n    }\n\n    const highlightsContainer = ensureHighlightsContainer(win);\n    highlightsContainer.append(docFrag);\n}\n\nexport const recreateAllHighlightsDebounced = debounce((win: IReadiumElectronWebviewWindow) => {\n    recreateAllHighlightsRaw(win);\n}, 500);\n\nexport function recreateAllHighlights(win: IReadiumElectronWebviewWindow) {\n    hideAllhighlights(win.document);\n    recreateAllHighlightsDebounced(win);\n}\n\nexport function createHighlights(\n    win: IReadiumElectronWebviewWindow,\n    highDefs: IHighlightDefinition[],\n    pointerInteraction: boolean): Array<IHighlight | null> {\n\n    const documant = win.document;\n    const highlights: Array<IHighlight | null> = [];\n\n    const bodyRect = getBoundingClientRectOfDocumentBody(win);\n\n    const docFrag = documant.createDocumentFragment();\n    for (const highDef of highDefs) {\n        if (!highDef.selectionInfo) {\n            highlights.push(null);\n            continue;\n        }\n        const [high, div] = createHighlight(\n            win,\n            highDef.selectionInfo,\n            highDef.color,\n            pointerInteraction,\n            highDef.drawType,\n            highDef.expand,\n            bodyRect);\n        highlights.push(high);\n\n        if (div) {\n            docFrag.append(div);\n        }\n    }\n\n    const highlightsContainer = ensureHighlightsContainer(win);\n    highlightsContainer.append(docFrag);\n\n    return highlights;\n}\nexport function createHighlight(\n    win: IReadiumElectronWebviewWindow,\n    selectionInfo: ISelectionInfo,\n    color: IColor | undefined,\n    pointerInteraction: boolean,\n    drawType: number | undefined,\n    expand: number | undefined,\n    bodyRect: DOMRect): [IHighlight, HTMLDivElement | null] {\n\n    // tslint:disable-next-line:no-string-literal\n    // console.log(\"Chromium: \" + process.versions[\"chrome\"]);\n\n    // tslint:disable-next-line:max-line-length\n    const uniqueStr = `${selectionInfo.rangeInfo.startContainerElementCssSelector}${selectionInfo.rangeInfo.startContainerChildTextNodeIndex}${selectionInfo.rangeInfo.startOffset}${selectionInfo.rangeInfo.endContainerElementCssSelector}${selectionInfo.rangeInfo.endContainerChildTextNodeIndex}${selectionInfo.rangeInfo.endOffset}`; // ${selectionInfo.rangeInfo.cfi} useless\n    // const unique = Buffer.from(JSON.stringify(selectionInfo.rangeInfo, null, \"\")).toString(\"base64\");\n    // const unique = Buffer.from(uniqueStr).toString(\"base64\");\n    // const id = \"R2_HIGHLIGHT_\" + unique.replace(/\\+/, \"_\").replace(/=/, \"-\").replace(/\\//, \".\");\n    const checkSum = crypto.createHash(\"sha1\"); // sha256 slow\n    checkSum.update(uniqueStr);\n    const shaHex = checkSum.digest(\"hex\");\n    const idBase = \"R2_HIGHLIGHT_\" + shaHex;\n    let id = idBase;\n    let idIdx = 0;\n    while (\n        _highlights.find((h) => h.id === id) ||\n        win.document.getElementById(id)) {\n\n        if (IS_DEV) {\n            console.log(\"HIGHLIGHT ID already exists, increment: \" + id);\n        }\n        id = `${idBase}_${idIdx++}`;\n    }\n    // destroyHighlight(win.document, id);\n\n    const highlight: IHighlight = {\n        color: color ? color : DEFAULT_BACKGROUND_COLOR,\n        drawType,\n        expand,\n        id,\n        pointerInteraction,\n        selectionInfo,\n    };\n    _highlights.push(highlight);\n\n    const div = createHighlightDom(win, highlight, bodyRect);\n    return [highlight, div];\n}\n\nfunction createHighlightDom(\n    win: IReadiumElectronWebviewWindow,\n    highlight: IHighlight,\n    bodyRect: DOMRect): HTMLDivElement | null {\n\n    const documant = win.document;\n    const scrollElement = getScrollingElement(documant);\n\n    const range = convertRangeInfo(documant, highlight.selectionInfo.rangeInfo);\n    if (!range) {\n        return null;\n    }\n\n    const opacity = DEFAULT_BACKGROUND_COLOR_OPACITY;\n\n    const paginated = isPaginated(documant);\n    // const rtl = isRTL();\n\n    // checkRangeFix(documant);\n\n    // const highlightsContainer = ensureHighlightsContainer(win);\n\n    const highlightParent = documant.createElement(\"div\") as IHTMLDivElementWithRect;\n    highlightParent.setAttribute(\"id\", highlight.id);\n    highlightParent.setAttribute(\"class\", CLASS_HIGHLIGHT_CONTAINER);\n    highlightParent.setAttribute(\"style\",\n        \"width: 1px !important; \" +\n        \"height: 1px !important; \" +\n        CSS_COMMON_RESET);\n    highlightParent.style.setProperty(\n        \"pointer-events\",\n        \"none\",\n        \"important\");\n    if (highlight.pointerInteraction) {\n        highlightParent.setAttribute(\"data-click\", \"1\");\n    }\n    if (USE_BLEND_MODE) {\n        highlightParent.style.setProperty(\n            \"mix-blend-mode\",\n            \"multiply\",\n            \"important\");\n        highlightParent.style.setProperty(\"opacity\", `${opacity}`, \"important\");\n    }\n\n    // const docStyle = (documant.defaultView as Window).getComputedStyle(documant.documentElement);\n    // const bodyStyle = (documant.defaultView as Window).getComputedStyle(documant.body);\n    // const marginLeft = bodyStyle.getPropertyValue(\"margin-left\");\n    // console.log(\"marginLeft: \" + marginLeft);\n    // const marginTop = bodyStyle.getPropertyValue(\"margin-top\");\n    // console.log(\"marginTop: \" + marginTop);\n\n    // console.log(\"==== bodyRect:\");\n    // console.log(\"width: \" + bodyRect.width);\n    // console.log(\"height: \" + bodyRect.height);\n    // console.log(\"top: \" + bodyRect.top);\n    // console.log(\"bottom: \" + bodyRect.bottom);\n    // console.log(\"left: \" + bodyRect.left);\n    // console.log(\"right: \" + bodyRect.right);\n\n    // const xOffset = paginated ? (bodyRect.left - parseInt(marginLeft, 10)) : bodyRect.left;\n    // const yOffset = paginated ? (bodyRect.top - parseInt(marginTop, 10)) : bodyRect.top;\n\n    const xOffset = paginated ? (-scrollElement.scrollLeft) : bodyRect.left;\n    const yOffset = paginated ? (-scrollElement.scrollTop) : bodyRect.top;\n\n    const scale = 1 / ((win.READIUM2 && win.READIUM2.isFixedLayout) ? win.READIUM2.fxlViewportScale : 1);\n    // const scale = 1;\n\n    // console.log(\"scrollElement.scrollLeft: \" + scrollElement.scrollLeft);\n    // console.log(\"scrollElement.scrollTop: \" + scrollElement.scrollTop);\n\n    const useSVG = !win.READIUM2.DEBUG_VISUALS && USE_SVG;\n    const drawUnderline = highlight.drawType === HighlightDrawTypeUnderline && !win.READIUM2.DEBUG_VISUALS;\n    const drawStrikeThrough = highlight.drawType === HighlightDrawTypeStrikethrough && !win.READIUM2.DEBUG_VISUALS;\n\n    const doNotMergeHorizontallyAlignedRects = drawUnderline || drawStrikeThrough;\n\n    const ex = highlight.expand ? highlight.expand : 0;\n\n    const rangeClientRects = range.getClientRects();\n    // tslint:disable-next-line:max-line-length\n    const clientRects =\n        // win.READIUM2.DEBUG_VISUALS ?\n        // rangeClientRects :\n        getClientRectsNoOverlap_(rangeClientRects, doNotMergeHorizontallyAlignedRects, ex);\n\n    let highlightAreaSVGDocFrag: DocumentFragment | undefined;\n\n    const roundedCorner = 3;\n    const underlineThickness = 3;\n    const strikeThroughLineThickness = 3;\n\n    const rangeBoundingClientRect = range.getBoundingClientRect();\n    const highlightBounding = documant.createElement(\"div\") as IHTMLDivElementWithRect;\n    highlightBounding.setAttribute(\"class\", CLASS_HIGHLIGHT_BOUNDING_AREA);\n    if (win.READIUM2.DEBUG_VISUALS) {\n        // tslint:disable-next-line:max-line-length\n        highlightBounding.setAttribute(\"style\",\n            \"outline-color: magenta !important; \" +\n            \"outline-style: solid !important; \" +\n            \"outline-width: 1px !important; \" +\n            \"outline-offset: -1px !important;\" +\n            CSS_COMMON_RESET);\n    } else {\n        highlightBounding.setAttribute(\"style\", CSS_COMMON_RESET);\n    }\n    highlightBounding.style.setProperty(\n        \"pointer-events\",\n        \"none\",\n        \"important\");\n    highlightBounding.style.setProperty(\"position\", paginated ? \"fixed\" : \"absolute\", \"important\");\n    highlightBounding.scale = scale;\n    // highlightBounding.xOffset = xOffset;\n    // highlightBounding.yOffset = yOffset;\n    highlightBounding.rect = {\n        height: rangeBoundingClientRect.height,\n        left: rangeBoundingClientRect.left - xOffset,\n        top: rangeBoundingClientRect.top - yOffset,\n        width: rangeBoundingClientRect.width,\n    };\n    highlightBounding.style.setProperty(\"width\", `${highlightBounding.rect.width * scale}px`, \"important\");\n    highlightBounding.style.setProperty(\"height\", `${highlightBounding.rect.height * scale}px`, \"important\");\n    highlightBounding.style.setProperty(\"min-width\", highlightBounding.style.width, \"important\");\n    highlightBounding.style.setProperty(\"min-height\", highlightBounding.style.height, \"important\");\n    highlightBounding.style.setProperty(\"left\", `${highlightBounding.rect.left * scale}px`, \"important\");\n    highlightBounding.style.setProperty(\"top\", `${highlightBounding.rect.top * scale}px`, \"important\");\n    highlightParent.append(highlightBounding);\n\n    for (const clientRect of clientRects) {\n\n        if (useSVG) {\n            const borderThickness = 0;\n\n            if (!highlightAreaSVGDocFrag) {\n                highlightAreaSVGDocFrag = documant.createDocumentFragment();\n            }\n\n            if (drawUnderline) {\n                // tslint:disable-next-line:max-line-length\n                const highlightAreaSVGLine = documant.createElementNS(SVG_XML_NAMESPACE, \"line\") as ISVGLineElementWithRect;\n                highlightAreaSVGLine.setAttribute(\"class\", CLASS_HIGHLIGHT_AREA);\n\n                highlightAreaSVGLine.setAttribute(\"style\",\n                    \"stroke-linecap: round !important; \" +\n                    `stroke-width: ${underlineThickness * scale} !important; ` +\n                    // tslint:disable-next-line:max-line-length\n                    `stroke: rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}) !important;` +\n                    (USE_BLEND_MODE ? \"\" : ` stroke-opacity: ${opacity} !important`));\n                highlightAreaSVGLine.scale = scale;\n                // highlightAreaSVGLine.xOffset = xOffset;\n                // highlightAreaSVGLine.yOffset = yOffset;\n                highlightAreaSVGLine.rect = {\n                    height: clientRect.height,\n                    left: clientRect.left - xOffset,\n                    top: clientRect.top - yOffset,\n                    width: clientRect.width,\n                };\n                const lineOffset = (highlightAreaSVGLine.rect.width > roundedCorner) ? roundedCorner : 0;\n                highlightAreaSVGLine.setAttribute(\"x1\", `${(highlightAreaSVGLine.rect.left + lineOffset) * scale}`);\n                // tslint:disable-next-line:max-line-length\n                highlightAreaSVGLine.setAttribute(\"x2\", `${(highlightAreaSVGLine.rect.left + highlightAreaSVGLine.rect.width - lineOffset) * scale}`);\n                // tslint:disable-next-line:max-line-length\n                const y = (highlightAreaSVGLine.rect.top + highlightAreaSVGLine.rect.height - (underlineThickness / 2)) * scale;\n                highlightAreaSVGLine.setAttribute(\"y1\", `${y}`);\n                highlightAreaSVGLine.setAttribute(\"y2\", `${y}`);\n\n                highlightAreaSVGLine.setAttribute(\"height\", `${highlightAreaSVGLine.rect.height * scale}`);\n                highlightAreaSVGLine.setAttribute(\"width\", `${highlightAreaSVGLine.rect.width * scale}`);\n\n                // if (USE_BLEND_MODE) {\n                //     highlightAreaSVGLine.style.setProperty(\"mix-blend-mode\", \"multiply\", \"important\");\n                //     highlightAreaSVGLine.style.opacity = `${opacity}`;\n                // }\n\n                highlightAreaSVGDocFrag.appendChild(highlightAreaSVGLine);\n            } else if (drawStrikeThrough) {\n                // tslint:disable-next-line:max-line-length\n                const highlightAreaSVGLine = documant.createElementNS(SVG_XML_NAMESPACE, \"line\") as ISVGLineElementWithRect;\n                highlightAreaSVGLine.setAttribute(\"class\", CLASS_HIGHLIGHT_AREA);\n\n                highlightAreaSVGLine.setAttribute(\"style\",\n                    \"stroke-linecap: butt !important; \" +\n                    `stroke-width: ${strikeThroughLineThickness * scale} !important; ` +\n                    // tslint:disable-next-line:max-line-length\n                    `stroke: rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}) !important;` +\n                    (USE_BLEND_MODE ? \"\" : ` stroke-opacity: ${opacity} !important`));\n                    // stroke-dasharray: ${lineThickness * 2},${lineThickness * 2};\n\n                highlightAreaSVGLine.scale = scale;\n                // highlightAreaSVGLine.xOffset = xOffset;\n                // highlightAreaSVGLine.yOffset = yOffset;\n                highlightAreaSVGLine.rect = {\n                    height: clientRect.height,\n                    left: clientRect.left - xOffset,\n                    top: clientRect.top - yOffset,\n                    width: clientRect.width,\n                };\n                highlightAreaSVGLine.setAttribute(\"x1\", `${highlightAreaSVGLine.rect.left * scale}`);\n                // tslint:disable-next-line:max-line-length\n                highlightAreaSVGLine.setAttribute(\"x2\", `${(highlightAreaSVGLine.rect.left + highlightAreaSVGLine.rect.width) * scale}`);\n\n                const lineOffset = highlightAreaSVGLine.rect.height / 2;\n                const y = (highlightAreaSVGLine.rect.top + lineOffset) * scale;\n                highlightAreaSVGLine.setAttribute(\"y1\", `${y}`);\n                highlightAreaSVGLine.setAttribute(\"y2\", `${y}`);\n\n                highlightAreaSVGLine.setAttribute(\"height\", `${highlightAreaSVGLine.rect.height * scale}`);\n                highlightAreaSVGLine.setAttribute(\"width\", `${highlightAreaSVGLine.rect.width * scale}`);\n\n                // if (USE_BLEND_MODE) {\n                //     highlightAreaSVGLine.style.setProperty(\"mix-blend-mode\", \"multiply\", \"important\");\n                //     highlightAreaSVGLine.style.opacity = `${opacity}`;\n                // }\n\n                highlightAreaSVGDocFrag.appendChild(highlightAreaSVGLine);\n            } else {\n\n                const highlightAreaSVGRect =\n                    documant.createElementNS(SVG_XML_NAMESPACE, \"rect\") as ISVGRectElementWithRect;\n                highlightAreaSVGRect.setAttribute(\"class\", CLASS_HIGHLIGHT_AREA);\n\n                highlightAreaSVGRect.setAttribute(\"style\",\n                    // tslint:disable-next-line:max-line-length\n                    `fill: rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}) !important; ` +\n                    \"stroke-width: 0;\" +\n                    (USE_BLEND_MODE ? \"\" : ` fill-opacity: ${opacity} !important;`));\n\n                // tslint:disable-next-line:max-line-length\n                // stroke-width: ${borderThickness}; stroke: rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}) !important; stroke-opacity: ${opacity} !important\n\n                highlightAreaSVGRect.scale = scale;\n                // highlightAreaSVGRect.xOffset = xOffset;\n                // highlightAreaSVGRect.yOffset = yOffset;\n                highlightAreaSVGRect.rect = {\n                    height: clientRect.height,\n                    left: clientRect.left - xOffset,\n                    top: clientRect.top - yOffset,\n                    width: clientRect.width,\n                };\n                highlightAreaSVGRect.setAttribute(\"rx\", `${roundedCorner * scale}`);\n                highlightAreaSVGRect.setAttribute(\"ry\", `${roundedCorner * scale}`);\n                highlightAreaSVGRect.setAttribute(\"x\", `${(highlightAreaSVGRect.rect.left - borderThickness) * scale}`);\n                highlightAreaSVGRect.setAttribute(\"y\", `${(highlightAreaSVGRect.rect.top - borderThickness) * scale}`);\n                // tslint:disable-next-line:max-line-length\n                highlightAreaSVGRect.setAttribute(\"height\", `${(highlightAreaSVGRect.rect.height + (borderThickness * 2)) * scale}`);\n                // tslint:disable-next-line:max-line-length\n                highlightAreaSVGRect.setAttribute(\"width\", `${(highlightAreaSVGRect.rect.width + (borderThickness * 2)) * scale}`);\n\n                // if (USE_BLEND_MODE) {\n                //     highlightAreaSVGRect.style.setProperty(\"mix-blend-mode\", \"multiply\", \"important\");\n                //     highlightAreaSVGRect.style.opacity = `${opacity}`;\n                // }\n\n                highlightAreaSVGDocFrag.appendChild(highlightAreaSVGRect);\n            }\n        } else {\n            if (drawStrikeThrough) {\n\n                const highlightAreaLine = documant.createElement(\"div\") as IHTMLDivElementWithRect;\n                highlightAreaLine.setAttribute(\"class\", CLASS_HIGHLIGHT_AREA);\n\n                // tslint:disable-next-line:max-line-length\n                highlightAreaLine.setAttribute(\"style\",\n                    CSS_COMMON_RESET +\n                    (USE_BLEND_MODE ?\n                        `background-color: rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}) !important;` :\n                        `background-color: rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity}) !important;`),\n                );\n                // tslint:disable-next-line:max-line-length\n                // highlightArea.setAttribute(\"style\", `outline-color: magenta; outline-style: solid; outline-width: 1px; outline-offset: -1px;`);\n                highlightAreaLine.style.setProperty(\n                    \"pointer-events\",\n                    \"none\",\n                    \"important\");\n                highlightAreaLine.style.setProperty(\"transform\", \"translate3d(0px, 0px, 0px)\", \"important\");\n                highlightAreaLine.style.setProperty(\"position\", paginated ? \"fixed\" : \"absolute\", \"important\");\n                highlightAreaLine.scale = scale;\n                // highlightAreaLine.xOffset = xOffset;\n                // highlightAreaLine.yOffset = yOffset;\n                highlightAreaLine.rect = {\n                    height: clientRect.height,\n                    left: clientRect.left - xOffset,\n                    top: clientRect.top - yOffset,\n                    width: clientRect.width,\n                };\n                highlightAreaLine.style.setProperty(\"width\", `${highlightAreaLine.rect.width * scale}px`, \"important\");\n                highlightAreaLine.style.setProperty(\"height\", `${strikeThroughLineThickness * scale}px`, \"important\");\n                highlightAreaLine.style.setProperty(\"min-width\", highlightAreaLine.style.width, \"important\");\n                highlightAreaLine.style.setProperty(\"min-height\", highlightAreaLine.style.height, \"important\");\n                highlightAreaLine.style.setProperty(\"left\", `${highlightAreaLine.rect.left * scale}px`, \"important\");\n                // tslint:disable-next-line:max-line-length\n                highlightAreaLine.style.setProperty(\"top\", `${(highlightAreaLine.rect.top + (highlightAreaLine.rect.height / 2) - (strikeThroughLineThickness / 2)) * scale}px`, \"important\");\n\n                // if (USE_BLEND_MODE) {\n                //     highlightAreaLine.style.setProperty(\"mix-blend-mode\", \"multiply\", \"important\");\n                //     highlightAreaLine.style.opacity = `${opacity}`;\n                // }\n\n                highlightParent.append(highlightAreaLine);\n            } else {\n\n                const highlightArea = documant.createElement(\"div\") as IHTMLDivElementWithRect;\n                highlightArea.setAttribute(\"class\", CLASS_HIGHLIGHT_AREA);\n\n                let extra = \"\";\n                if (win.READIUM2.DEBUG_VISUALS) {\n                    const rgb = Math.round(0xffffff * Math.random());\n                    // tslint:disable-next-line:no-bitwise\n                    const r = rgb >> 16;\n                    // tslint:disable-next-line:no-bitwise\n                    const g = rgb >> 8 & 255;\n                    // tslint:disable-next-line:no-bitwise\n                    const b = rgb & 255;\n                    // tslint:disable-next-line:max-line-length\n                    extra = `outline-color: rgb(${r}, ${g}, ${b}); outline-style: solid; outline-width: 1px; outline-offset: -1px;`;\n                    // box-shadow: inset 0 0 0 1px #600;\n                } else if (drawUnderline) {\n                    // tslint:disable-next-line:max-line-length\n                    extra = `border-bottom: ${underlineThickness * scale}px solid ` +\n                        (USE_BLEND_MODE ?\n                        // tslint:disable-next-line: max-line-length\n                        `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}) !important` :\n                        `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity}) !important`);\n                }\n                // tslint:disable-next-line:max-line-length\n                highlightArea.setAttribute(\"style\",\n                    CSS_COMMON_RESET +\n                    (drawUnderline ?\n                    \"\" : // background-color: transparent !important\n                    (`border-radius: ${roundedCorner}px !important; ` +\n                    \"background-color: \" +\n                        (USE_BLEND_MODE ?\n                            // tslint:disable-next-line: max-line-length\n                            `rgb(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}) !important;` :\n                            `rgba(${highlight.color.red}, ${highlight.color.green}, ${highlight.color.blue}, ${opacity}) !important;`\n                        )\n                    )\n                    ) + ` ${extra}`);\n                // tslint:disable-next-line:max-line-length\n                // highlightArea.setAttribute(\"style\", `outline-color: magenta; outline-style: solid; outline-width: 1px; outline-offset: -1px;`);\n                highlightArea.style.setProperty(\n                    \"pointer-events\",\n                    \"none\",\n                    \"important\");\n                highlightArea.style.setProperty(\"transform\", \"translate3d(0px, 0px, 0px)\", \"important\");\n                highlightArea.style.setProperty(\"position\", paginated ? \"fixed\" : \"absolute\", \"important\");\n                highlightArea.scale = scale;\n                // highlightArea.xOffset = xOffset;\n                // highlightArea.yOffset = yOffset;\n                highlightArea.rect = {\n                    height: clientRect.height,\n                    left: clientRect.left - xOffset,\n                    top: clientRect.top - yOffset,\n                    width: clientRect.width,\n                };\n                highlightArea.style.setProperty(\"width\", `${highlightArea.rect.width * scale}px`, \"important\");\n                highlightArea.style.setProperty(\"height\", `${highlightArea.rect.height * scale}px`, \"important\");\n                highlightArea.style.setProperty(\"min-width\", highlightArea.style.width, \"important\");\n                highlightArea.style.setProperty(\"min-height\", highlightArea.style.height, \"important\");\n                highlightArea.style.setProperty(\"left\", `${highlightArea.rect.left * scale}px`, \"important\");\n                highlightArea.style.setProperty(\"top\", `${highlightArea.rect.top * scale}px`, \"important\");\n\n                // if (highlight.pointerInteraction) {\n                //     highlightArea.style.setProperty(\"pointer-events\", \"auto\", \"important\");\n                // }\n\n                // if (USE_BLEND_MODE) {\n                //     highlightArea.style.setProperty(\"mix-blend-mode\", \"multiply\", \"important\");\n                //     highlightArea.style.opacity = `${opacity}`;\n                // }\n\n                highlightParent.append(highlightArea);\n            }\n        }\n    }\n\n    if (useSVG && highlightAreaSVGDocFrag) {\n        // const highlightAreaSVGG = documant.createElementNS(SVG_XML_NAMESPACE, \"g\");\n        // highlightAreaSVGG.appendChild(highlightAreaSVGDocFrag);\n        const highlightAreaSVG = documant.createElementNS(SVG_XML_NAMESPACE, \"svg\");\n        highlightAreaSVG.setAttribute(\"style\", CSS_COMMON_RESET);\n        highlightAreaSVG.setAttribute(\"pointer-events\", \"none\");\n        highlightAreaSVG.style.setProperty(\"position\", paginated ? \"fixed\" : \"absolute\", \"important\");\n        highlightAreaSVG.append(highlightAreaSVGDocFrag);\n        highlightParent.append(highlightAreaSVG);\n    }\n\n    // highlightsContainer.append(highlightParent);\n    return highlightParent;\n}\n"]}