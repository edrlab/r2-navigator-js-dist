{"version":3,"file":"protocol.js","sourceRoot":"","sources":["../../../../../../src/electron/renderer/common/protocol.ts"],"names":[],"mappings":";;AAOA,uCAAoC;AAEpC,oDAAwE;AAI3D,QAAA,gBAAgB,GAAG,GAAG,EAAE;IAKjC,mBAAQ,CAAC,6BAA6B,CAAC,0CAA+B,EAAE;QACpE,mBAAmB,EAAE,KAAK;QAC1B,SAAS,EAAE,KAAK;QAChB,WAAW,EAAE,IAAI;QACjB,MAAM,EAAE,IAAI;QACZ,eAAe,EAAE,IAAI;KACxB,CAAC,CAAC;AACP,CAAC,CAAC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { webFrame } from \"electron\";\n\nimport { READIUM2_ELECTRON_HTTP_PROTOCOL } from \"../../common/sessions\";\n\n// not needed in renderer process if fetch() is not used for READIUM2_ELECTRON_HTTP_PROTOCOL\n// (instead, use https://127.0.0.1:PORT via convertCustomSchemeToHttpUrl())\nexport const registerProtocol = () => {\n    // https://github.com/electron/electron/blob/v3.0.0/docs/api/breaking-changes.md#webframe\n    // protocol.registerStandardSchemes([READIUM2_ELECTRON_HTTP_PROTOCOL], { secure: true });\n    // webFrame.registerURLSchemeAsSecure(READIUM2_ELECTRON_HTTP_PROTOCOL);\n    // // webFrame.registerURLSchemeAsBypassingCSP(READIUM2_ELECTRON_HTTP_PROTOCOL);\n    webFrame.registerURLSchemeAsPrivileged(READIUM2_ELECTRON_HTTP_PROTOCOL, {\n        allowServiceWorkers: false,\n        bypassCSP: false,\n        corsEnabled: true,\n        secure: true,\n        supportFetchAPI: true,\n    });\n};\n"]}