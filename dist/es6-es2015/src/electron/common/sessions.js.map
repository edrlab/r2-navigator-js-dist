{"version":3,"file":"sessions.js","sourceRoot":"","sources":["../../../../../src/electron/common/sessions.ts"],"names":[],"mappings":";;;AAOa,QAAA,kBAAkB,GAAG,4BAA4B,CAAC;AAE/D,gEAA+E;AAElE,QAAA,+BAA+B,GAAG,SAAS,CAAC;AAElD,MAAM,4BAA4B,GAAG,CAAC,GAAW,EAAU,EAAE;IAChE,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,qFAAqF,CAAC,CAAC;IACjH,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QAC/B,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,KAAK,GAAI,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACzF,MAAM,IAAI,GAAG,uCAA+B,GAAG,KAAK;YAChD,IAAI,GAAG,KAAK;YACZ,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;YACjB,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC;YAClB,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;YACjB,OAAO,CAAC,CAAC,CAAC,CAAC;QAEf,OAAO,IAAI,CAAC;KACf;IACD,OAAO,GAAG,CAAC;AACf,CAAC,CAAC;AAhBW,QAAA,4BAA4B,gCAgBvC;AAEK,MAAM,4BAA4B,GAAG,CAAC,GAAW,EAAU,EAAE;IAChE,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,uCAA+B,GAAG,KAAK,EAAE,EAAE,CAAC,CAAC;IAGpE,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,gFAAgF,CAAC,CAAC;IAC7G,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QAC/B,MAAM,KAAK,GAAG,qCAA0B,CACpC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE;YAErF,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAE1C,OAAO,GAAG,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK;YACzB,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC;YAC7B,OAAO,GAAG,KAAK;YACf,OAAO,CAAC,CAAC,CAAC,CAAC;QAEX,OAAO,IAAI,CAAC;KACf;IACD,OAAO,GAAG,CAAC;AACf,CAAC,CAAC;AArBW,QAAA,4BAA4B,gCAqBvC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nexport const R2_SESSION_WEBVIEW = \"persist:readium2pubwebview\";\n\nimport { encodeURIComponent_RFC3986 } from \"@r2-utils-js/_utils/http/UrlUtils\";\n\nexport const READIUM2_ELECTRON_HTTP_PROTOCOL = \"httpsr2\";\n\nexport const convertHttpUrlToCustomScheme = (url: string): string => {\n    const matches = url.match(/(http[s]?):\\/\\/([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(?::([0-9]+))?\\/pub\\/([^\\/]+)(\\/.*)?/);\n    if (matches && matches.length > 1) {\n        const idMatch = matches[4];\n        const decoded = decodeURIComponent(idMatch);\n        const pubID =  decoded.replace(/([A-Z])/g, \"_$1\").replace(/=/g, \"-\").replace(/\\//g, \".\");\n        const url_ = READIUM2_ELECTRON_HTTP_PROTOCOL + \"://\" +\n            \"id\" + pubID +\n            \"/x\" + matches[1] +\n            \"/ip\" + matches[2] +\n            \"/p\" + matches[3] +\n            matches[5];\n        // console.log(\"convertHttpUrlToCustomScheme: \", url, \" ===> \", url_);\n        return url_;\n    }\n    return url;\n};\n\nexport const convertCustomSchemeToHttpUrl = (url: string): string => {\n    let url_ = url.replace(READIUM2_ELECTRON_HTTP_PROTOCOL + \"://\", \"\");\n    // const matches = url_.match(/(http[s]?)\\.ip([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)\\.p([0-9]+)?\\.id([^\\/]+)(\\/.*)?/);\n    // tslint:disable-next-line:max-line-length\n    const matches = url_.match(/id([^\\/]+)\\/x(http[s]?)\\/ip([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)\\/p([0-9]+)?(\\/.*)?/);\n    if (matches && matches.length > 1) {\n        const pubID = encodeURIComponent_RFC3986(\n            matches[1].replace(/-/g, \"=\").replace(/\\./g, \"\\/\").replace(/(_[a-zA-Z])/g, (match) => {\n            // console.log(match);\n            const ret = match.substr(1).toUpperCase();\n            // console.log(ret);\n            return ret;\n        }));\n        url_ = matches[2] + \"://\" +\n        matches[3] + \":\" + matches[4] +\n        \"/pub/\" + pubID +\n        matches[5];\n        // console.log(\"convertCustomSchemeToHttpUrl: \", url, \" ===> \", url_);\n        return url_;\n    }\n    return url;\n};\n"]}