{"version":3,"file":"cssselector.js","sourceRoot":"","sources":["../../../../../../src/electron/renderer/common/cssselector.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable-next-line:max-line-length\r\n// https://github.com/fczbkk/css-selector-generator-benchmark/blob/master/README.md#chromiums-dompresentationutils\r\n\r\n// tslint:disable-next-line:max-line-length\r\n// https://chromium.googlesource.com/chromium/blink/+/master/Source/devtools/front_end/components/DOMPresentationUtils.js#259\r\nexport const fullQualifiedSelector = (node: Node, justSelector: boolean): string => {\r\n    if (node.nodeType !== Node.ELEMENT_NODE) {\r\n        const lowerCaseName = (node.localName && node.localName.toLowerCase()) || node.nodeName.toLowerCase();\r\n        return lowerCaseName;\r\n    }\r\n    return cssPath(node, justSelector);\r\n};\r\n\r\ninterface IDOMNodePathStep {\r\n    optimized: boolean;\r\n    value: string;\r\n}\r\n\r\n// tslint:disable-next-line:max-line-length\r\n// https://chromium.googlesource.com/chromium/blink/+/master/Source/devtools/front_end/components/DOMPresentationUtils.js#289\r\nconst cssPath = (node: Node, optimized: boolean): string => {\r\n    if (node.nodeType !== Node.ELEMENT_NODE) {\r\n        return \"\";\r\n    }\r\n\r\n    const steps = [];\r\n    let contextNode = node;\r\n    while (contextNode) {\r\n        const step = _cssPathStep(contextNode, !!optimized, contextNode === node);\r\n        if (!step) {\r\n            break; // Error - bail out early.\r\n        }\r\n        steps.push(step.value);\r\n        if (step.optimized) {\r\n            break;\r\n        }\r\n        contextNode = contextNode.parentNode as Node;\r\n    }\r\n    steps.reverse();\r\n    return steps.join(\" > \");\r\n};\r\n\r\n// tslint:disable-next-line:max-line-length\r\n// https://chromium.googlesource.com/chromium/blink/+/master/Source/devtools/front_end/components/DOMPresentationUtils.js#316\r\nconst _cssPathStep = (node: Node, optimized: boolean, isTargetNode: boolean): IDOMNodePathStep | undefined => {\r\n\r\n    const prefixedElementClassNames = (nd: Element): string[] => {\r\n        const classAttribute = nd.getAttribute(\"class\");\r\n        if (!classAttribute) {\r\n            return [];\r\n        }\r\n\r\n        return classAttribute.split(/\\s+/g).filter(Boolean).map((nm) => {\r\n            // The prefix is required to store \"__proto__\" in a object-based map.\r\n            return \"$\" + nm;\r\n        });\r\n    };\r\n\r\n    const idSelector = (idd: string): string => {\r\n        return \"#\" + escapeIdentifierIfNeeded(idd);\r\n    };\r\n\r\n    const escapeIdentifierIfNeeded = (ident: string): string => {\r\n        if (isCSSIdentifier(ident)) {\r\n            return ident;\r\n        }\r\n\r\n        const shouldEscapeFirst = /^(?:[0-9]|-[0-9-]?)/.test(ident);\r\n        const lastIndex = ident.length - 1;\r\n        return ident.replace(/./g, (c: string, ii: number) => {\r\n            return ((shouldEscapeFirst && ii === 0) || !isCSSIdentChar(c)) ? escapeAsciiChar(c, ii === lastIndex) : c;\r\n        });\r\n    };\r\n\r\n    const escapeAsciiChar = (c: string, isLast: boolean) => {\r\n        return \"\\\\\" + toHexByte(c) + (isLast ? \"\" : \" \");\r\n    };\r\n\r\n    const toHexByte = (c: string): string => {\r\n        let hexByte = c.charCodeAt(0).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = \"0\" + hexByte;\r\n        }\r\n        return hexByte;\r\n    };\r\n\r\n    const isCSSIdentChar = (c: string): boolean => {\r\n        if (/[a-zA-Z0-9_-]/.test(c)) {\r\n            return true;\r\n        }\r\n        return c.charCodeAt(0) >= 0xA0;\r\n    };\r\n\r\n    const isCSSIdentifier = (value: string): boolean => {\r\n        return /^-?[a-zA-Z_][a-zA-Z0-9_-]*$/.test(value);\r\n    };\r\n\r\n    if (node.nodeType !== Node.ELEMENT_NODE) {\r\n        return undefined;\r\n    }\r\n    const lowerCaseName = (node.localName && node.localName.toLowerCase()) || node.nodeName.toLowerCase();\r\n\r\n    const element = node as Element;\r\n\r\n    const id = element.getAttribute(\"id\");\r\n\r\n    if (optimized) {\r\n        if (id) {\r\n            return {\r\n                optimized: true,\r\n                value: idSelector(id),\r\n            };\r\n        }\r\n        if (lowerCaseName === \"body\" || lowerCaseName === \"head\" || lowerCaseName === \"html\") {\r\n            return {\r\n                optimized: true,\r\n                value: lowerCaseName, // node.nodeNameInCorrectCase(),\r\n            };\r\n        }\r\n    }\r\n\r\n    const nodeName = lowerCaseName; // node.nodeNameInCorrectCase();\r\n    if (id) {\r\n        return {\r\n            optimized: true,\r\n            value: nodeName + idSelector(id),\r\n        };\r\n    }\r\n\r\n    const parent = node.parentNode;\r\n\r\n    if (!parent || parent.nodeType === Node.DOCUMENT_NODE) {\r\n        return {\r\n            optimized: true,\r\n            value: nodeName,\r\n        };\r\n    }\r\n\r\n    const prefixedOwnClassNamesArray_ = prefixedElementClassNames(element);\r\n    const prefixedOwnClassNamesArray: string[] = []; // .keySet()\r\n    prefixedOwnClassNamesArray_.forEach((arrItem) => {\r\n        if (prefixedOwnClassNamesArray.indexOf(arrItem) < 0) {\r\n            prefixedOwnClassNamesArray.push(arrItem);\r\n        }\r\n    });\r\n\r\n    let needsClassNames = false;\r\n    let needsNthChild = false;\r\n    let ownIndex = -1;\r\n    let elementIndex = -1;\r\n    const siblings = (parent as Element).children;\r\n\r\n    for (let i = 0; (ownIndex === -1 || !needsNthChild) && i < siblings.length; ++i) {\r\n        const sibling = siblings[i];\r\n        if (sibling.nodeType !== Node.ELEMENT_NODE) {\r\n            continue;\r\n        }\r\n        elementIndex += 1;\r\n        if (sibling === node) {\r\n            ownIndex = elementIndex;\r\n            continue;\r\n        }\r\n        if (needsNthChild) {\r\n            continue;\r\n        }\r\n\r\n        // sibling.nodeNameInCorrectCase()\r\n        const siblingName = (sibling.localName && sibling.localName.toLowerCase()) || sibling.nodeName.toLowerCase();\r\n        if (siblingName !== nodeName) {\r\n            continue;\r\n        }\r\n        needsClassNames = true;\r\n\r\n        const ownClassNames: string[] = [];\r\n        prefixedOwnClassNamesArray.forEach((arrItem) => {\r\n            ownClassNames.push(arrItem);\r\n        });\r\n        let ownClassNameCount = ownClassNames.length;\r\n\r\n        if (ownClassNameCount === 0) {\r\n            needsNthChild = true;\r\n            continue;\r\n        }\r\n        const siblingClassNamesArray_ = prefixedElementClassNames(sibling);\r\n        const siblingClassNamesArray: string[] = []; // .keySet()\r\n        siblingClassNamesArray_.forEach((arrItem) => {\r\n            if (siblingClassNamesArray.indexOf(arrItem) < 0) {\r\n                siblingClassNamesArray.push(arrItem);\r\n            }\r\n        });\r\n\r\n        for (const siblingClass of siblingClassNamesArray) {\r\n            const ind = ownClassNames.indexOf(siblingClass);\r\n            if (ind < 0) {\r\n                continue;\r\n            }\r\n\r\n            ownClassNames.splice(ind, 1); // delete ownClassNames[siblingClass];\r\n\r\n            if (!--ownClassNameCount) {\r\n                needsNthChild = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    let result = nodeName;\r\n    if (isTargetNode &&\r\n        nodeName === \"input\" &&\r\n        element.getAttribute(\"type\") &&\r\n        !element.getAttribute(\"id\") &&\r\n        !element.getAttribute(\"class\")) {\r\n        result += \"[type=\\\"\" + element.getAttribute(\"type\") + \"\\\"]\";\r\n    }\r\n    if (needsNthChild) {\r\n        result += \":nth-child(\" + (ownIndex + 1) + \")\";\r\n    } else if (needsClassNames) {\r\n        for (const prefixedName of prefixedOwnClassNamesArray) {\r\n            result += \".\" + escapeIdentifierIfNeeded(prefixedName.substr(1));\r\n        }\r\n    }\r\n\r\n    return {\r\n        optimized: false,\r\n        value: result,\r\n    };\r\n};\r\n\r\n// tslint:disable-next-line:max-line-length\r\n// https://chromium.googlesource.com/chromium/blink/+/master/Source/devtools/front_end/components/DOMPresentationUtils.js#270\r\n// const simpleSelector = (node: Node): string => {\r\n//     const lowerCaseName = (node.localName && node.localName.toLowerCase()) || node.nodeName.toLowerCase();\r\n//     if (node.nodeType !== Node.ELEMENT_NODE) {\r\n//         return lowerCaseName;\r\n//     }\r\n\r\n//     const element = node as Element;\r\n\r\n//     const id = element.getAttribute(\"id\");\r\n//     if (id) {\r\n//         return lowerCaseName + \"#\" + id;\r\n//     }\r\n\r\n//     const clazz = element.getAttribute(\"class\");\r\n//     if (clazz) {\r\n//         return (lowerCaseName === \"div\" ? \"\" : lowerCaseName) + \".\" + clazz.trim().replace(/\\s+/g, \".\");\r\n//     }\r\n\r\n//     const typez = element.getAttribute(\"type\");\r\n//     if (typez && lowerCaseName === \"input\") {\r\n//         return lowerCaseName + \"[type=\\\"\" + typez + \"\\\"]\";\r\n//     }\r\n\r\n//     return lowerCaseName;\r\n// };\r\n"]}