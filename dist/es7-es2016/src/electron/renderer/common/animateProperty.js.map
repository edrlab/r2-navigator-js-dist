{"version":3,"file":"animateProperty.js","sourceRoot":"","sources":["../../../../../../src/electron/renderer/common/animateProperty.ts"],"names":[],"mappings":";;AAca,QAAA,eAAe,GAAG,CAC3B,GAAyB,EACzB,QAAoD,EACpD,QAAgB,EAChB,QAAgB,EAChB,MAAW,EACX,OAAe,EACf,GAAiC,EACjC,UAAkE,EACpE,EAAE;IAEA,MAAM,KAAK,GAA4B;QACnC,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC;QACpC,OAAO;QACP,QAAQ;QACR,EAAE,EAAE,CAAC;QACL,OAAO,EAAE,CAAC;QACV,OAAO,EAAE,CAAC;QACV,MAAM;QACN,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC;QAC3B,QAAQ;QACR,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;KACxB,CAAC;IAEF,MAAM,OAAO,GAAG,GAAG,EAAE;QACjB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;QACvB,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CACrB,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QAElG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YACnE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;YACtC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;YACxB,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;YAClB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACX,QAAQ,CAAC,IAAI,CAAC,CAAC;YACnB,CAAC;YACD,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YACd,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrD,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;YACxB,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;YAC7C,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;YAClB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACX,QAAQ,CAAC,KAAK,CAAC,CAAC;YACpB,CAAC;YACD,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YACd,MAAM,CAAC;QACX,CAAC;QAED,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEF,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;IAExB,MAAM,CAAC,KAAK,CAAC;AACjB,CAAC,CAAC","sourcesContent":["export interface IPropertyAnimationState {\r\n    animating: boolean;\r\n    duration: number;\r\n    destVal: number;\r\n    originVal: number;\r\n    object: any;\r\n    property: string;\r\n    deltaVal: number;\r\n    startTime: number;\r\n    id: number;\r\n    lastVal: number;\r\n    nowTime: number;\r\n}\r\n\r\nexport const animateProperty = (\r\n    cAF: (id: number) => void, // typically: window.cancelAnimationFrame\r\n    callback: ((cancelled: boolean) => void) | undefined,\r\n    property: string, // numerical, e.g. \"scrollTop\" or \"scrollLeft\"\r\n    duration: number, // e.g. 200\r\n    object: any, // typically, window.document.body (Element)\r\n    destVal: number, // e.g. 0\r\n    rAF: (func: () => void) => number, // typically: window.requestAnimationFrame\r\n    transition: (t: number, b: number, c: number, d: number) => number, // e.g. easings.easeInQuad\r\n) => {\r\n\r\n    const state: IPropertyAnimationState = {\r\n        animating: false, // changes\r\n        deltaVal: destVal - object[property], // fixed\r\n        destVal, // fixed\r\n        duration, // fixed\r\n        id: 0, // changes\r\n        lastVal: 0, // changes\r\n        nowTime: 0, // changes\r\n        object, // fixed\r\n        originVal: object[property], // fixed\r\n        property, // fixed\r\n        startTime: Date.now(), // fixed\r\n    };\r\n\r\n    const animate = () => {\r\n        state.animating = true;\r\n        state.nowTime = Date.now(); // +new Date()\r\n        const newVal = Math.floor(\r\n            transition(state.nowTime - state.startTime, state.originVal, state.deltaVal, state.duration));\r\n\r\n        if (!state.lastVal || state.object[state.property] !== state.destVal) {\r\n            state.object[state.property] = newVal;\r\n            state.lastVal = newVal;\r\n        } else { // lastVal && object[property] === destVal\r\n            state.animating = false;\r\n            state.object = {}; // to avoid memory leaks / DOM pointer retention\r\n            if (callback) {\r\n                callback(true);\r\n            }\r\n            cAF(state.id);\r\n            return;\r\n        }\r\n\r\n        if (state.nowTime > (state.startTime + state.duration)) {\r\n            state.animating = false;\r\n            state.object[state.property] = state.destVal;\r\n            state.object = {}; // to avoid memory leaks / DOM pointer retention\r\n            if (callback) {\r\n                callback(false);\r\n            }\r\n            cAF(state.id);\r\n            return;\r\n        }\r\n\r\n        state.id = rAF(animate);\r\n    };\r\n\r\n    state.id = rAF(animate);\r\n\r\n    return state;\r\n};\r\n"]}