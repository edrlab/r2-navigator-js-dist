{"version":3,"file":"dom-text-utils.js","sourceRoot":"","sources":["../../../../../../src/electron/renderer/common/dom-text-utils.ts"],"names":[],"mappings":";;;AAOA,yDAA0C;AAE1C,gDAAmD;AACnD,6DAA6D;AAK7D,MAAM,GAAG,GAAG,MAAM,CAAC,MAAsC,CAAC;AAE1D,SAAgB,gBAAgB,CAAC,SAAiB,EAAE,aAAuB;IACvE,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;QAC/B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;YAC9B,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAKpB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;aACnF;SACJ;QACD,OAAO,GAAG,CAAC;KACd;IACD,OAAO,EAAE,CAAC;AACd,CAAC;AAfD,4CAeC;AAED,SAAgB,WAAW,CAAC,EAAW;IAEnC,IAAI,cAAc,GAAG,EAAE,CAAC;IAExB,OAAO,cAAc,IAAI,cAAc,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;QAEpE,IAAI,IAAI,GAAG,cAAc,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,GAAG,cAAc,CAAC,cAAc,CAAC,sCAAsC,EAAE,MAAM,CAAC,CAAC;SACxF;QACD,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,GAAG,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SAC9C;QACD,IAAI,IAAI,EAAE;YACN,OAAO,IAAI,CAAC;SACf;QAED,cAAc,GAAG,cAAc,CAAC,UAAqB,CAAC;KACzD;IAED,OAAO,SAAS,CAAC;AACrB,CAAC;AArBD,kCAqBC;AAED,SAAgB,YAAY,CAAC,EAAW;IAEpC,IAAI,cAAc,GAAG,EAAE,CAAC;IAExB,OAAO,cAAc,IAAI,cAAc,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;QAEpE,MAAM,GAAG,GAAG,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,GAAG,EAAE;YACL,OAAO,GAAG,CAAC;SACd;QAED,cAAc,GAAG,cAAc,CAAC,UAAqB,CAAC;KACzD;IAED,OAAO,SAAS,CAAC;AACrB,CAAC;AAfD,oCAeC;AAED,SAAgB,iBAAiB,CAAC,GAAW;IACzC,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAClF,CAAC;AAFD,8CAEC;AAED,SAAgB,aAAa,CAAC,GAAW;IAErC,OAAO,iBAAiB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AAC7E,CAAC;AAHD,sCAGC;AAqBD,SAAgB,sBAAsB,CAAC,CAAgB;IACnD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACtB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACnB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACpB,MAAM,WAAW,GAAG,IAAA,kCAAiB,EAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,aAAa,CAAC,aAAyB,CAAC,CAAC;IAClG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACzB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACrC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;IAC5B,IAAI,CAAC,CAAC,qBAAqB,EAAE;QACzB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,qBAAqB,EAAE;YACrC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAClB;QACD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;KAC1B;IACD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC1B,CAAC;AAhBD,wDAgBC;AACD,SAAgB,kBAAkB,CAAC,CAAkB;IACjD,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;QACf,sBAAsB,CAAC,CAAC,CAAC,CAAC;KAC7B;AACL,CAAC;AAJD,gDAIC;AAED,SAAgB,iBAAiB,CAAC,KAAsB;IACpD,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,KAAK,MAAM,EAAE,IAAI,KAAK,EAAE;QACpB,IAAI,EAAE,CAAC,qBAAqB,EAAE;YAC1B,CAAC,IAAI,EAAE,CAAC,qBAAqB,CAAC,MAAM,CAAC;SACxC;aAAM;YACH,CAAC,EAAE,CAAC;SACP;KACJ;IACD,OAAO,CAAC,CAAC;AACb,CAAC;AAVD,8CAUC;AAED,SAAgB,sBAAsB,CAAC,GAA2B;IAC9D,IAAI,GAAG,CAAC,SAAS,KAAK,CAAC,CAAC,EAAE;QACtB,OAAO,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;KAChC;IACD,IAAI,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE;QAChC,OAAO,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;KACxD;IACD,OAAO,EAAE,CAAC;AACd,CAAC;AARD,wDAQC;AAED,SAAgB,kBAAkB,CAAC,KAAsB,EAAE,KAAa;IACpE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACX,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACX,KAAK,MAAM,EAAE,IAAI,KAAK,EAAE;QACpB,CAAC,EAAE,CAAC;QACJ,IAAI,EAAE,CAAC,qBAAqB,EAAE;YAC1B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,KAAK,MAAM,KAAK,IAAI,EAAE,CAAC,qBAAqB,EAAE;gBAC1C,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,IAAI,KAAK,KAAK,CAAC,EAAE;oBACb,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC;iBAC5D;aACJ;SACJ;aAAM;YACH,CAAC,EAAE,CAAC;YACJ,IAAI,KAAK,KAAK,CAAC,EAAE;gBACb,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC;aAC7D;SACJ;KACJ;IACD,OAAO,SAAS,CAAC;AACrB,CAAC;AAtBD,gDAsBC;AAED,SAAgB,qBAAqB,CACjC,QAAyB,EACzB,OAAgB,EAChB,aAA+B,EAC/B,mBAA2B,EAC3B,QAAiB;;IAEjB,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,KAAK,MAAM,YAAY,IAAI,QAAQ,EAAE;QACjC,IAAI,aAAa,EAAE;YACf,IAAI,MAAA,YAAY,CAAC,SAAS,0CAAE,QAAQ,CAAC,aAAa,CAAC,EAAE;gBACjD,IAAI,YAAY,CAAC,qBAAqB;oBAClC,YAAY,CAAC,+BAA+B;oBAC5C,YAAY,CAAC,6BAA6B,EAAE;oBAC5C,IAAI,MAAM,GAAG,CAAC,CAAC;oBACf,KAAK,MAAM,OAAO,IAAI,YAAY,CAAC,SAAS,EAAE;wBAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;4BAChD,SAAS;yBACZ;wBACD,IAAI,OAAO,KAAK,aAAa,EAAE;4BAC3B,MAAM,IAAI,mBAAmB,CAAC;4BAC9B,MAAM;yBACT;wBACD,MAAM,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;qBACtC;oBACD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAEd,KAAK,MAAM,GAAG,IAAI,YAAY,CAAC,6BAA6B,EAAE;wBAE1D,CAAC,EAAE,CAAC;wBACJ,IAAI,GAAG,GAAG,MAAM,EAAE;4BACd,SAAS;yBACZ;wBACD,OAAO,CAAC,CAAC;qBACZ;oBACD,OAAO,CAAC,CAAC;iBACZ;qBAAM;oBACH,OAAO,CAAC,CAAC;iBACZ;aACJ;SACJ;aAAM,IACH,CACA,OAAO,KAAK,YAAY,CAAC,aAAa;;gBAEtC,CAAC,YAAY,CAAC,aAAa,KAAM,OAAO,CAAC,aAA0B,CAAC,IAAI;oBACpE,YAAY,CAAC,aAAa,KAAK,QAAQ;oBACvC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;;gBAEjD,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,EAC3C;YAEF,OAAO,CAAC,CAAC;SACZ;QACD,IAAI,YAAY,CAAC,qBAAqB,EAAE;YACpC,CAAC,IAAI,YAAY,CAAC,qBAAqB,CAAC,MAAM,CAAC;SAClD;aAAM;YACH,CAAC,EAAE,CAAC;SACP;KACJ;IAGD,CAAC,GAAG,CAAC,CAAC;IACN,KAAK,MAAM,YAAY,IAAI,QAAQ,EAAE;QACjC,IAAI,aAAa,KAAI,MAAA,YAAY,CAAC,SAAS,0CAAE,QAAQ,CAAC,aAAa,CAAC,CAAA,EAAE;YAClE,IAAI,YAAY,CAAC,qBAAqB;gBAClC,YAAY,CAAC,+BAA+B;gBAC5C,YAAY,CAAC,6BAA6B,EAAE;gBAC5C,IAAI,MAAM,GAAG,CAAC,CAAC;gBACf,KAAK,MAAM,OAAO,IAAI,YAAY,CAAC,SAAS,EAAE;oBAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;wBAChD,SAAS;qBACZ;oBACD,IAAI,OAAO,KAAK,aAAa,EAAE;wBAC3B,MAAM,IAAI,mBAAmB,CAAC;wBAC9B,MAAM;qBACT;oBACD,MAAM,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;iBACtC;gBACD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAEd,KAAK,MAAM,GAAG,IAAI,YAAY,CAAC,6BAA6B,EAAE;oBAE1D,CAAC,EAAE,CAAC;oBACJ,IAAI,GAAG,GAAG,MAAM,EAAE;wBACd,SAAS;qBACZ;oBACD,OAAO,CAAC,CAAC;iBACZ;gBACD,OAAO,CAAC,CAAC;aACZ;iBAAM;gBACH,OAAO,CAAC,CAAC;aACZ;SACJ;aAAM,IAAI,CAAC,CAAC,aAAa,IAAI,CAAC,CAAA,MAAA,YAAY,CAAC,SAAS,0CAAE,MAAM,CAAA,CAAC;YAC1D,CACA,OAAO,KAAK,YAAY,CAAC,aAAa;;oBAEtC,CAAC,YAAY,CAAC,aAAa,KAAM,OAAO,CAAC,aAA0B,CAAC,IAAI;wBACpE,YAAY,CAAC,aAAa,KAAK,QAAQ;wBACvC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;;oBAEjD,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,EAC3C;YAEF,OAAO,CAAC,CAAC;SACZ;QACD,IAAI,YAAY,CAAC,qBAAqB,EAAE;YACpC,CAAC,IAAI,YAAY,CAAC,qBAAqB,CAAC,MAAM,CAAC;SAClD;aAAM;YACH,CAAC,EAAE,CAAC;SACP;KACJ;IAED,OAAO,CAAC,CAAC,CAAC;AACd,CAAC;AAjHD,sDAiHC;AAGD,MAAM,0BAA0B,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAErK,MAAM,8BAA8B,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AAIrP,MAAM,WAAW,GAAG;IAChB,UAAU;IACV,SAAS;IACT,WAAW;IAEX,MAAM;IACN,UAAU;IACV,SAAS;IACT,YAAY;IACZ,YAAY;CAGf,CAAC;AAKF,MAAM,gBAAgB,GAAG,CAAC,YAAqB,EAAE,EAAE;IAE/C,IAAI,QAAQ,GAAG,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IACtD,IAAI,CAAC,QAAQ,EAAE;QACX,QAAQ,GAAG,YAAY,CAAC,cAAc,CAAC,8BAA8B,EAAE,MAAM,CAAC,CAAC;QAC/E,IAAI,CAAC,QAAQ,EAAE;YACX,QAAQ,GAAG,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,QAAQ,EAAE;gBACV,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;aAC5C;SACJ;KACJ;IACD,IAAI,QAAQ,EAAE;QACV,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;QAClD,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACvB,QAAQ,GAAG,IAAI,CAAC;SACnB;KACJ;IACD,MAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACtD,OAAO,SAAS,CAAC;AACrB,CAAC,CAAC;AAEF,SAAgB,gBAAgB,CAAC,WAAoB,EAAE,cAAuB;IAE1E,MAAM,QAAQ,GAAoB,EAAE,CAAC;IACrC,MAAM,YAAY,GAAc,EAAE,CAAC;IAEnC,SAAS,eAAe,CAAC,QAAc;QAEnC,IAAI,QAAQ,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;YACtC,OAAO;SACV;QAED,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE;YAC1D,OAAO;SACV;QACD,MAAM,aAAa,GAAG,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,aAAa,EAAE;YAChB,OAAO;SACV;QAED,IAAI,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAO5C,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACtF,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAEtF,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,KAAK,aAAa,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,IAAI,OAAO,CAAC,GAAG,KAAK,GAAG,EAAE;YAGrG,IAAI,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE;gBACrC,MAAM,SAAS,GAAG,gBAAgB,CAAC,aAAa,CAAC,CAAC;gBAClD,MAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;gBACxF,IAAI,WAAW,EAAE;oBACb,OAAO;iBACV;aACJ;YAED,OAAO,GAAG;gBACN,YAAY,EAAE,EAAE;gBAChB,qBAAqB,EAAE,SAAS;gBAChC,+BAA+B,EAAE,SAAS;gBAC1C,6BAA6B,EAAE,SAAS;gBACxC,GAAG;gBACH,IAAI;gBACJ,aAAa;gBACb,SAAS,EAAE,EAAE;aAEhB,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC1B;QAED,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,SAAS,cAAc,CAAC,OAAgB;;QACpC,IAAI,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;YACxC,KAAK,GAAG,KAAK,CAAC;YACd,OAAO;SACV;QAID,SAAS,QAAQ,CAAC,EAAW;;YAEzB,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,qBAAY,EAAE;gBACxC,OAAO,IAAI,CAAC;aACf;YACD,IAAI,CAAA,MAAA,EAAE,CAAC,OAAO,0CAAE,WAAW,EAAE,MAAK,IAAI,EAAE;gBACpC,OAAO,IAAI,CAAC;aACf;YAED,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,GAAG;gBACC,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY;oBACpC,CAAA,MAAA,KAAK,CAAC,OAAO,0CAAE,WAAW,EAAE,MAAK,SAAS;oBAM1C,CAAE,KAA4B,CAAC,IAAI,EAAE;oBACrC,OAAO,IAAI,CAAC;iBACf;aACJ,QAAQ,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY;gBACxE,CAAC,KAAK,GAAG,KAAK,CAAC,UAAqB,CAAC,EAAE;YAE3C,MAAM,OAAO,GAAG,GAAG,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;YACzC,IAAI,OAAO,EAAE;gBACT,MAAM,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBACpD,IAAI,OAAO,KAAK,MAAM,EAAE;oBACpB,OAAO,IAAI,CAAC;iBACf;qBAAM;oBACH,MAAM,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;oBACpD,IAAI,OAAO,KAAK,GAAG,EAAE;wBACjB,OAAO,IAAI,CAAC;qBACf;iBACJ;aAQJ;YAKD,IAAI,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC;gBACzB,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,MAAM,EAAE;gBAC3C,OAAO,IAAI,CAAC;aACf;YAED,OAAO,KAAK,CAAC;QACjB,CAAC;QAED,MAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,MAAM,EAAE;YACR,KAAK,GAAG,KAAK,CAAC;YACd,OAAO;SACV;QAGD,IAAI,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE;YACrC,MAAM,SAAS,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC;YAC5C,MAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YACxF,IAAI,WAAW,EAAE;gBACb,KAAK,GAAG,KAAK,CAAC;gBACd,OAAO;aACV;SACJ;QAED,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QAE/E,MAAM,iBAAiB,GAAG,KAAK;YAC3B,UAAU,IAAI,0BAA0B,CAAC,QAAQ,CAAC,UAAU,CAAC,CAG5D;QAEL,KAAK,GAAG,KAAK,CAAC;QAEd,IAAI,iBAAiB,EAAE;YACnB,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC9B;QAED,KAAK,MAAM,SAAS,IAAI,OAAO,CAAC,UAAU,EAAE;YACxC,QAAQ,SAAS,CAAC,QAAQ,EAAE;gBACxB,KAAK,IAAI,CAAC,YAAY;oBAClB,MAAM,YAAY,GAAG,SAAoB,CAAC;oBAC1C,MAAM,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;oBAE9F,MAAM,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;oBAEtC,MAAM,SAAS,GAAG,gBAAgB,CAAC,YAAY,CAAC,CAAC;oBAEjD,MAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;oBAGxF,IAAI,GAAG,CAAC,QAAQ,CAAC,sBAAsB,IAAI,WAAW,EAAE;wBACpD,SAAS;qBACZ;oBAGD,MAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBAE9E,IAAI,sBAAsB,GAAG,WAAW,IAAI,CAAC,MAAM,CAAC;oBACpD,IAAI,sBAAsB,EAAE;wBACxB,IAAI,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;wBACjD,IAAI,OAAO,EAAE;4BACT,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;4BAC3B,IAAI,GAAG,EAAE;gCACL,sBAAsB,GAAG,KAAK,CAAC;gCAC/B,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;gCACvC,MAAM,GAAG,GAAG,SAAS,CAAC;gCACtB,QAAQ,CAAC,IAAI,CAAC;oCACV,YAAY,EAAE,GAAG;oCACjB,qBAAqB,EAAE,SAAS;oCAChC,+BAA+B,EAAE,SAAS;oCAC1C,6BAA6B,EAAE,SAAS;oCACxC,GAAG;oCACH,IAAI;oCACJ,aAAa,EAAE,YAAY;oCAC3B,SAAS,EAAE,EAAE;iCAEhB,CAAC,CAAC;6BACN;yBACJ;6BAAM;4BACH,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;4BAClD,IAAI,OAAO,EAAE;gCACT,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;gCAC3B,IAAI,GAAG,EAAE;oCACL,sBAAsB,GAAG,KAAK,CAAC;oCAC/B,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;oCACvC,MAAM,GAAG,GAAG,SAAS,CAAC;oCACtB,QAAQ,CAAC,IAAI,CAAC;wCACV,YAAY,EAAE,GAAG;wCACjB,qBAAqB,EAAE,SAAS;wCAChC,+BAA+B,EAAE,SAAS;wCAC1C,6BAA6B,EAAE,SAAS;wCACxC,GAAG;wCACH,IAAI;wCACJ,aAAa,EAAE,YAAY;wCAC3B,SAAS,EAAE,EAAE;qCAEhB,CAAC,CAAC;iCACN;6BACJ;yBACJ;qBACJ;oBAED,MAAM,MAAM,GAAG,eAAe,KAAK,GAAG,IAAK,YAAgC,CAAC,IAAI,CAAC;oBACjF,IAAI,iBAAiB,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC;oBAC1C,IAAI,iBAAiB,EAAE;wBACnB,IAAI,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;wBACjD,IAAI,OAAO,EAAE;4BACT,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;4BAC3B,IAAI,GAAG,EAAE;gCACL,iBAAiB,GAAG,KAAK,CAAC;gCAC1B,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;gCACvC,MAAM,GAAG,GAAG,SAAS,CAAC;gCACtB,QAAQ,CAAC,IAAI,CAAC;oCACV,YAAY,EAAE,GAAG;oCACjB,qBAAqB,EAAE,SAAS;oCAChC,+BAA+B,EAAE,SAAS;oCAC1C,6BAA6B,EAAE,SAAS;oCACxC,GAAG;oCACH,IAAI;oCACJ,aAAa,EAAE,YAAY;oCAC3B,SAAS,EAAE,EAAE;iCAEhB,CAAC,CAAC;6BACN;yBACJ;6BAAM;4BACH,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;4BAClD,IAAI,OAAO,EAAE;gCACT,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;gCAC3B,IAAI,GAAG,EAAE;oCACL,iBAAiB,GAAG,KAAK,CAAC;oCAC1B,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;oCACvC,MAAM,GAAG,GAAG,SAAS,CAAC;oCACtB,QAAQ,CAAC,IAAI,CAAC;wCACV,YAAY,EAAE,GAAG;wCACjB,qBAAqB,EAAE,SAAS;wCAChC,+BAA+B,EAAE,SAAS;wCAC1C,6BAA6B,EAAE,SAAS;wCACxC,GAAG;wCACH,IAAI;wCACJ,aAAa,EAAE,YAAY;wCAC3B,SAAS,EAAE,EAAE;qCAEhB,CAAC,CAAC;iCACN;6BACJ;yBACJ;qBACJ;oBAED,MAAM,SAAS,GAAG,eAAe,IAAI,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oBACxE,MAAM,QAAQ,GAAG,eAAe,KAAK,MAAM,CAAC;oBAC5C,MAAM,gBAAgB,GAClB,sBAAsB;wBACtB,iBAAiB;wBACjB,CACA,CAAC,WAAW;4BACZ,CAAC,MAAM;4BACP,CAAC,SAAS;4BACV,CAAC,QAAQ;4BACT,eAAe,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,eAAe,CAAC,CAI3E,CACJ;oBAED,IAAI,gBAAgB,EAAE;wBAClB,cAAc,CAAC,YAAY,CAAC,CAAC;qBAChC;yBAAM,IAAI,CAAC,MAAM,EAAE;wBAChB,IAAI,WAAW,IAAI,MAAM,EAAE;yBAE1B;6BAAM,IAAI,QAAQ,EAAE;4BACjB,MAAM,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;4BACrD,IAAI,OAAO,EAAE;gCACT,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;gCAC3B,IAAI,GAAG,EAAE;oCACL,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;oCACvC,MAAM,GAAG,GAAG,SAAS,CAAC;oCACtB,QAAQ,CAAC,IAAI,CAAC;wCACV,YAAY,EAAE,GAAG;wCACjB,qBAAqB,EAAE,SAAS;wCAChC,+BAA+B,EAAE,SAAS;wCAC1C,6BAA6B,EAAE,SAAS;wCACxC,GAAG;wCACH,IAAI;wCACJ,aAAa,EAAE,YAAY;wCAC3B,SAAS,EAAE,EAAE;qCAEhB,CAAC,CAAC;iCACN;6BACJ;iCAAM;gCACH,MAAM,GAAG,GAAG,MAAA,YAAY,CAAC,WAAW,0CAAE,IAAI,EAAE,CAAC;gCAC7C,IAAI,GAAG,EAAE;oCACL,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;oCACvC,MAAM,GAAG,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;oCACvC,QAAQ,CAAC,IAAI,CAAC;wCACV,YAAY,EAAE,GAAG;wCACjB,qBAAqB,EAAE,SAAS;wCAChC,+BAA+B,EAAE,SAAS;wCAC1C,6BAA6B,EAAE,SAAS;wCACxC,GAAG;wCACH,IAAI;wCACJ,aAAa,EAAE,YAAY;wCAC3B,SAAS,EAAE,EAAE;qCAEhB,CAAC,CAAC;iCACN;6BACJ;yBACJ;6BAAM,IAAI,SAAS,EAAE;4BAClB,IAAI,eAAe,KAAK,eAAe,EAAE;gCAErC,IAAI,SAA8B,CAAC;gCACnC,IAAI,eAAoC,CAAC;gCACzC,MAAM,wBAAwB,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;gCACnE,KAAK,MAAM,qBAAqB,IAAI,wBAAwB,EAAE;oCAC1D,IAAI,CAAA,MAAA,qBAAqB,CAAC,OAAO,0CAAE,WAAW,EAAE,MAAK,UAAU,EAAE;wCAC7D,SAAS,GAAG,qBAAqB,CAAC;qCACrC;yCAAM,IAAI,CAAA,MAAA,qBAAqB,CAAC,OAAO,0CAAE,WAAW,EAAE,MAAK,mBAAmB,EAAE;wCAC7E,MAAM,mBAAmB,GAAG,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;wCACvE,KAAK,MAAM,gBAAgB,IAAI,mBAAmB,EAAE;4CAChD,IAAI,CAAA,MAAA,gBAAgB,CAAC,OAAO,0CAAE,WAAW,EAAE,MAAK,MAAM,EAAE;gDACpD,eAAe,GAAG,gBAAgB,CAAC;gDACnC,MAAM;6CACT;yCACJ;qCACJ;iCACJ;gCAED,MAAM,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;gCACxD,IAAI,OAAO,EAAE;oCACT,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;oCAC3B,IAAI,GAAG,EAAE;wCACL,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;wCACvC,MAAM,GAAG,GAAG,SAAS,CAAC;wCACtB,QAAQ,CAAC,IAAI,CAAC;4CACV,YAAY,EAAE,GAAG;4CACjB,qBAAqB,EAAE,SAAS;4CAChC,+BAA+B,EAAE,SAAS;4CAC1C,6BAA6B,EAAE,SAAS;4CACxC,GAAG;4CACH,IAAI;4CACJ,aAAa,EAAE,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,YAAY;4CACxC,SAAS,EAAE,EAAE;yCAEhB,CAAC,CAAC;qCACN;iCACJ;qCAAM,IAAI,eAAe,EAAE;oCACxB,MAAM,OAAO,GAAG,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;oCACxD,IAAI,OAAO,EAAE;wCACT,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;wCAC3B,IAAI,GAAG,EAAE;4CACL,MAAM,IAAI,GAAG,WAAW,CAAC,eAAe,CAAC,CAAC;4CAC1C,MAAM,GAAG,GAAG,SAAS,CAAC;4CACtB,QAAQ,CAAC,IAAI,CAAC;gDACV,YAAY,EAAE,GAAG;gDACjB,qBAAqB,EAAE,SAAS;gDAChC,+BAA+B,EAAE,SAAS;gDAC1C,6BAA6B,EAAE,SAAS;gDACxC,GAAG;gDACH,IAAI;gDACJ,aAAa,EAAE,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,YAAY;gDACxC,SAAS,EAAE,EAAE;6CAEhB,CAAC,CAAC;yCACN;qCACJ;yCAAM;wCACH,MAAM,GAAG,GAAG,MAAA,eAAe,CAAC,WAAW,0CAAE,IAAI,EAAE,CAAC;wCAChD,IAAI,GAAG,EAAE;4CACL,MAAM,IAAI,GAAG,WAAW,CAAC,eAAe,CAAC,CAAC;4CAC1C,MAAM,GAAG,GAAG,YAAY,CAAC,eAAe,CAAC,CAAC;4CAC1C,QAAQ,CAAC,IAAI,CAAC;gDACV,YAAY,EAAE,GAAG;gDACjB,qBAAqB,EAAE,SAAS;gDAChC,+BAA+B,EAAE,SAAS;gDAC1C,6BAA6B,EAAE,SAAS;gDACxC,GAAG;gDACH,IAAI;gDACJ,aAAa,EAAE,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,YAAY;gDACxC,SAAS,EAAE,EAAE;6CAEhB,CAAC,CAAC;yCACN;qCACJ;oCACD,MAAM;iCACT;6BACJ;yBACJ;6BAAM,IAAI,eAAe,KAAK,KAAK;4BAC/B,YAAiC,CAAC,GAAG,EAAE;4BACxC,IAAI,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;4BAC/C,IAAI,OAAO,EAAE;gCACT,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;gCAC3B,IAAI,GAAG,EAAE;oCACL,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;oCACvC,MAAM,GAAG,GAAG,SAAS,CAAC;oCACtB,QAAQ,CAAC,IAAI,CAAC;wCACV,YAAY,EAAE,GAAG;wCACjB,qBAAqB,EAAE,SAAS;wCAChC,+BAA+B,EAAE,SAAS;wCAC1C,6BAA6B,EAAE,SAAS;wCACxC,GAAG;wCACH,IAAI;wCACJ,aAAa,EAAE,YAAY;wCAC3B,SAAS,EAAE,EAAE;qCAEhB,CAAC,CAAC;iCACN;6BACJ;iCAAM;gCACH,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;gCAClD,IAAI,OAAO,EAAE;oCACT,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;oCAC3B,IAAI,GAAG,EAAE;wCACL,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;wCACvC,MAAM,GAAG,GAAG,SAAS,CAAC;wCACtB,QAAQ,CAAC,IAAI,CAAC;4CACV,YAAY,EAAE,GAAG;4CACjB,qBAAqB,EAAE,SAAS;4CAChC,+BAA+B,EAAE,SAAS;4CAC1C,6BAA6B,EAAE,SAAS;4CACxC,GAAG;4CACH,IAAI;4CACJ,aAAa,EAAE,YAAY;4CAC3B,SAAS,EAAE,EAAE;yCAEhB,CAAC,CAAC;qCACN;iCACJ;6BACJ;yBACJ;6BAAM,IAAI,eAAe,KAAK,KAAK,EAAE;4BAClC,MAAM,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;4BACxD,IAAI,OAAO,EAAE;gCACT,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;gCAC3B,IAAI,GAAG,EAAE;oCACL,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;oCACvC,MAAM,GAAG,GAAG,SAAS,CAAC;oCACtB,QAAQ,CAAC,IAAI,CAAC;wCACV,YAAY,EAAE,GAAG;wCACjB,qBAAqB,EAAE,SAAS;wCAChC,+BAA+B,EAAE,SAAS;wCAC1C,6BAA6B,EAAE,SAAS;wCACxC,GAAG;wCACH,IAAI;wCACJ,aAAa,EAAE,YAAY;wCAC3B,SAAS,EAAE,EAAE;qCAEhB,CAAC,CAAC;iCACN;6BACJ;iCAAM;gCACH,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;gCACtD,KAAK,MAAM,QAAQ,IAAI,WAAW,EAAE;oCAChC,IAAI,CAAA,MAAA,QAAQ,CAAC,OAAO,0CAAE,WAAW,EAAE,MAAK,OAAO,EAAE;wCAC7C,MAAM,GAAG,GAAG,MAAA,QAAQ,CAAC,WAAW,0CAAE,IAAI,EAAE,CAAC;wCACzC,IAAI,GAAG,EAAE;4CACL,MAAM,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;4CACnC,MAAM,GAAG,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;4CACnC,QAAQ,CAAC,IAAI,CAAC;gDACV,YAAY,EAAE,GAAG;gDACjB,qBAAqB,EAAE,SAAS;gDAChC,+BAA+B,EAAE,SAAS;gDAC1C,6BAA6B,EAAE,SAAS;gDACxC,GAAG;gDACH,IAAI;gDACJ,aAAa,EAAE,YAAY;gDAC3B,SAAS,EAAE,EAAE;6CAEhB,CAAC,CAAC;yCACN;wCACD,MAAM;qCACT;iCACJ;6BACJ;yBACJ;qBACJ;oBACD,MAAM;gBACV,KAAK,IAAI,CAAC,SAAS;oBACf,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC3B,eAAe,CAAC,SAAS,CAAC,CAAC;qBAC9B;oBACD,MAAM;gBACV;oBACI,MAAM;aACb;SACJ;QAED,IAAI,iBAAiB,EAAE;YACnB,YAAY,CAAC,GAAG,EAAE,CAAC;SACtB;IACL,CAAC;IAED,cAAc,CAAC,WAAW,CAAC,CAAC;IAE5B,SAAS,iBAAiB,CAAC,YAA2B;QAClD,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE;YAE3D,IAAI,CAAC,YAAY,CAAC,YAAY,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE;gBACjE,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;aAClC;YACD,YAAY,CAAC,qBAAqB,GAAG,SAAS,CAAC;YAC/C,OAAO;SACV;QAED,YAAY,CAAC,YAAY,GAAG,gBAAgB,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QAInG,IAAI,kBAAkB,GAAG,KAAK,CAAC;QAC/B,IAAI,MAAM,GAAmB,YAAY,CAAC,aAAa,CAAC;QACxD,OAAO,MAAM,EAAE;YACX,IAAI,MAAM,CAAC,OAAO,EAAE;gBAChB,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;gBACzC,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM;oBAC/B,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,OAAO;oBAClC,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,KAAK;oBAC9B,GAAG,KAAK,MAAM,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;oBAC1C,kBAAkB,GAAG,IAAI,CAAC;oBAC1B,MAAM;iBACT;aACJ;YACD,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC;SACjC;QACD,IAAI,cAAc,IAAI,CAAC,kBAAkB,EAAE;YACvC,IAAI;gBACA,MAAM,GAAG,GAAG,YAAY,CAAC,YAAY,CAAC;gBACtC,YAAY,CAAC,qBAAqB,GAAG,SAAS,CAAC;gBAC/C,MAAM,SAAS,GAAG,IAAA,yBAAK,EAAC,GAAG,CAAC,CAAC;gBAC7B,YAAY,CAAC,qBAAqB,GAAG,EAAE,CAAC;gBACxC,YAAY,CAAC,+BAA+B,GAAG,EAAE,CAAC;gBAClD,YAAY,CAAC,6BAA6B,GAAG,EAAE,CAAC;gBAChD,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;oBAC9B,IAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;wBAG9B,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;wBACtD,YAAY,CAAC,+BAA+B,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrE,YAAY,CAAC,6BAA6B,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;qBACtE;iBAIJ;gBACD,IAAI,YAAY,CAAC,qBAAqB,CAAC,MAAM,KAAK,CAAC;oBAC/C,YAAY,CAAC,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjD,YAAY,CAAC,qBAAqB,GAAG,SAAS,CAAC;iBAClD;qBAAM;iBAaN;aACJ;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,YAAY,CAAC,qBAAqB,GAAG,SAAS,CAAC;aAClD;SACJ;aAAM;YACH,YAAY,CAAC,qBAAqB,GAAG,SAAS,CAAC;SAClD;IACL,CAAC;IAED,KAAK,MAAM,YAAY,IAAI,QAAQ,EAAE;QACjC,iBAAiB,CAAC,YAAY,CAAC,CAAC;KACnC;IAED,OAAO,QAAQ,CAAC;AACpB,CAAC;AAvkBD,4CAukBC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { split } from \"sentence-splitter\";\n\nimport { SKIP_LINK_ID } from \"../../common/styles\";\nimport { uniqueCssSelector } from \"../common/cssselector2-3\";\nimport { ReadiumElectronWebviewWindow } from \"../webview/state\";\n\n// const IS_DEV = (process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"dev\");\n\nconst win = global.window as ReadiumElectronWebviewWindow;\n\nexport function combineTextNodes(textNodes: Node[], skipNormalize?: boolean): string {\n    if (textNodes && textNodes.length) {\n        let str = \"\";\n        for (const textNode of textNodes) {\n            if (textNode.nodeValue) { // excludes purely-whitespace text nodes\n                // normalizeText() preserves prefix/suffix whitespace (collapsed to single)\n                // if (str.length) {\n                //     str += \" \";\n                // }\n                str += (skipNormalize ? textNode.nodeValue : normalizeText(textNode.nodeValue));\n            }\n        }\n        return str;\n    }\n    return \"\";\n}\n\nexport function getLanguage(el: Element): string | undefined {\n\n    let currentElement = el;\n\n    while (currentElement && currentElement.nodeType === Node.ELEMENT_NODE) {\n\n        let lang = currentElement.getAttribute(\"xml:lang\");\n        if (!lang) {\n            lang = currentElement.getAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"lang\");\n        }\n        if (!lang) {\n            lang = currentElement.getAttribute(\"lang\");\n        }\n        if (lang) {\n            return lang;\n        }\n\n        currentElement = currentElement.parentNode as Element;\n    }\n\n    return undefined;\n}\n\nexport function getDirection(el: Element): string | undefined {\n\n    let currentElement = el;\n\n    while (currentElement && currentElement.nodeType === Node.ELEMENT_NODE) {\n\n        const dir = currentElement.getAttribute(\"dir\");\n        if (dir) {\n            return dir;\n        }\n\n        currentElement = currentElement.parentNode as Element;\n    }\n\n    return undefined;\n}\n\nexport function normalizeHtmlText(str: string): string {\n    return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n}\n\nexport function normalizeText(str: string): string {\n    // tslint:disable-next-line:max-line-length\n    return normalizeHtmlText(str).replace(/\\n/g, \" \").replace(/\\s\\s+/g, \" \"); // no trim(), we collapse multiple whitespaces into single, preserving prefix and suffix (if any)\n}\n\nexport interface ITtsQueueItem {\n    dir: string | undefined;\n    lang: string | undefined;\n    parentElement: Element;\n    textNodes: Node[];\n    combinedText: string; // combineText(this.textNodes)\n    combinedTextSentences: string[] | undefined;\n    combinedTextSentencesRangeBegin: number[] | undefined;\n    combinedTextSentencesRangeEnd: number[] | undefined;\n    // isSkippable: boolean | undefined;\n}\n\nexport interface ITtsQueueItemReference {\n    item: ITtsQueueItem;\n    iArray: number; // ITtsQueueItem[]\n    iSentence: number; // ITtsQueueItem.combinedTextSentences\n    iGlobal: number; // ITtsQueueItem[] and ITtsQueueItem.combinedTextSentences\n}\n\nexport function consoleLogTtsQueueItem(i: ITtsQueueItem) {\n    console.log(\"<<----\");\n    console.log(i.dir);\n    console.log(i.lang);\n    const cssSelector = uniqueCssSelector(i.parentElement, i.parentElement.ownerDocument as Document);\n    console.log(cssSelector);\n    console.log(i.parentElement.tagName);\n    console.log(i.combinedText);\n    if (i.combinedTextSentences) {\n        console.log(\".......\");\n        for (const j of i.combinedTextSentences) {\n            console.log(j);\n        }\n        console.log(\".......\");\n    }\n    console.log(\"---->>\");\n}\nexport function consoleLogTtsQueue(f: ITtsQueueItem[]) {\n    for (const i of f) {\n        consoleLogTtsQueueItem(i);\n    }\n}\n\nexport function getTtsQueueLength(items: ITtsQueueItem[]) {\n    let l = 0;\n    for (const it of items) {\n        if (it.combinedTextSentences) {\n            l += it.combinedTextSentences.length;\n        } else {\n            l++;\n        }\n    }\n    return l;\n}\n\nexport function getTtsQueueItemRefText(obj: ITtsQueueItemReference): string {\n    if (obj.iSentence === -1) {\n        return obj.item.combinedText;\n    }\n    if (obj.item.combinedTextSentences) {\n        return obj.item.combinedTextSentences[obj.iSentence];\n    }\n    return \"\";\n}\n\nexport function getTtsQueueItemRef(items: ITtsQueueItem[], index: number): ITtsQueueItemReference | undefined {\n    let i = -1;\n    let k = -1;\n    for (const it of items) {\n        k++;\n        if (it.combinedTextSentences) {\n            let j = -1;\n            for (const _sent of it.combinedTextSentences) {\n                j++;\n                i++;\n                if (index === i) {\n                    return { item: it, iArray: k, iGlobal: i, iSentence: j };\n                }\n            }\n        } else {\n            i++;\n            if (index === i) {\n                return { item: it, iArray: k, iGlobal: i, iSentence: -1 };\n            }\n        }\n    }\n    return undefined;\n}\n\nexport function findTtsQueueItemIndex(\n    ttsQueue: ITtsQueueItem[],\n    element: Element,\n    startTextNode: Node | undefined,\n    startTextNodeOffset: number,\n    rootElem: Element): number {\n\n    let i = 0;\n    for (const ttsQueueItem of ttsQueue) {\n        if (startTextNode) {\n            if (ttsQueueItem.textNodes?.includes(startTextNode)) { // NOTE SECOND PASS!\n                if (ttsQueueItem.combinedTextSentences &&\n                    ttsQueueItem.combinedTextSentencesRangeBegin &&\n                    ttsQueueItem.combinedTextSentencesRangeEnd) {\n                    let offset = 0;\n                    for (const txtNode of ttsQueueItem.textNodes) {\n                        if (!txtNode.nodeValue && txtNode.nodeValue !== \"\") {\n                            continue;\n                        }\n                        if (txtNode === startTextNode) {\n                            offset += startTextNodeOffset;\n                            break;\n                        }\n                        offset += txtNode.nodeValue.length;\n                    }\n                    let j = i - 1;\n                    // let iSent = -1;\n                    for (const end of ttsQueueItem.combinedTextSentencesRangeEnd) {\n                        // iSent++;\n                        j++;\n                        if (end < offset) {\n                            continue;\n                        }\n                        return j;\n                    }\n                    return i;\n                } else { // ttsQueueItem.combinedText\n                    return i;\n                }\n            }\n        } else if ( // (!startTextNode || !ttsQueueItem.textNodes?.length) && // NOTE SECOND PASS!\n            (\n            element === ttsQueueItem.parentElement\n            ||\n            (ttsQueueItem.parentElement !== (element.ownerDocument as Document).body &&\n                ttsQueueItem.parentElement !== rootElem &&\n                ttsQueueItem.parentElement.contains(element))\n            ||\n            element.contains(ttsQueueItem.parentElement))\n            ) {\n\n            return i;\n        }\n        if (ttsQueueItem.combinedTextSentences) {\n            i += ttsQueueItem.combinedTextSentences.length;\n        } else { // ttsQueueItem.combinedText\n            i++;\n        }\n    }\n\n    // SECOND PASS, e.g. text nodes descendants of MathML\n    i = 0;\n    for (const ttsQueueItem of ttsQueue) {\n        if (startTextNode && ttsQueueItem.textNodes?.includes(startTextNode)) { // DIFF SECOND PASS!\n            if (ttsQueueItem.combinedTextSentences &&\n                ttsQueueItem.combinedTextSentencesRangeBegin &&\n                ttsQueueItem.combinedTextSentencesRangeEnd) {\n                let offset = 0;\n                for (const txtNode of ttsQueueItem.textNodes) {\n                    if (!txtNode.nodeValue && txtNode.nodeValue !== \"\") {\n                        continue;\n                    }\n                    if (txtNode === startTextNode) {\n                        offset += startTextNodeOffset;\n                        break;\n                    }\n                    offset += txtNode.nodeValue.length;\n                }\n                let j = i - 1;\n                // let iSent = -1;\n                for (const end of ttsQueueItem.combinedTextSentencesRangeEnd) {\n                    // iSent++;\n                    j++;\n                    if (end < offset) {\n                        continue;\n                    }\n                    return j;\n                }\n                return i;\n            } else { // ttsQueueItem.combinedText\n                return i;\n            }\n        } else if ((!startTextNode || !ttsQueueItem.textNodes?.length) && // DIFF SECOND PASS!\n            (\n            element === ttsQueueItem.parentElement\n            ||\n            (ttsQueueItem.parentElement !== (element.ownerDocument as Document).body &&\n                ttsQueueItem.parentElement !== rootElem &&\n                ttsQueueItem.parentElement.contains(element))\n            ||\n            element.contains(ttsQueueItem.parentElement))\n            ) {\n\n            return i;\n        }\n        if (ttsQueueItem.combinedTextSentences) {\n            i += ttsQueueItem.combinedTextSentences.length;\n        } else { // ttsQueueItem.combinedText\n            i++;\n        }\n    }\n\n    return -1;\n}\n\n// tslint:disable-next-line:max-line-length\nconst _putInElementStackTagNames = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"p\", \"th\", \"td\", \"caption\", \"li\", \"blockquote\", \"q\", \"dt\", \"dd\", \"figcaption\", \"div\", \"pre\"];\n// tslint:disable-next-line:max-line-length\nconst _doNotProcessDeepChildTagNames = [\"svg\", \"img\", \"sup\", \"sub\", \"audio\", \"video\", \"source\", \"button\", \"canvas\", \"del\", \"dialog\", \"embed\", \"form\", \"head\", \"iframe\", \"meter\", \"noscript\", \"object\", \"s\", \"script\", \"select\", \"style\", \"textarea\"]; // \"code\", \"nav\", \"dl\", \"figure\", \"table\", \"ul\", \"ol\"\n\n// https://www.w3.org/TR/epub-33/#sec-behaviors-skip-escape\n// https://www.w3.org/TR/epub-ssv-11/\nconst _skippables = [\n    \"footnote\",\n    \"endnote\",\n    \"pagebreak\",\n    //\n    \"note\",\n    \"rearnote\",\n    \"sidebar\",\n    \"marginalia\",\n    \"annotation\",\n    // \"practice\",\n    // \"help\",\n];\n// TODO: invisible page breaks but labeled (aria-label, title, etc.) can occur mid-sentence as span/etc. elements without descendant text content or with display:none (edge case or common practice?),\n// so ideally we should ignore the fragment and merge together the adjacent text(s) to form the utterance ...\n// but this is technically challenging in this algorithm (previous/next may have different language, etc.),\n\nconst computeEpubTypes = (childElement: Element) => {\n\n    let epubType = childElement.getAttribute(\"epub:type\");\n    if (!epubType) {\n        epubType = childElement.getAttributeNS(\"http://www.idpf.org/2007/ops\", \"type\");\n        if (!epubType) { // TODO merge epub:type and role instead of fallback?\n            epubType = childElement.getAttribute(\"role\");\n            if (epubType) {\n                epubType = epubType.replace(/doc-/g, \"\");\n            }\n        }\n    }\n    if (epubType) {\n        epubType = epubType.replace(/\\s\\s+/g, \" \").trim();\n        if (epubType.length === 0) {\n            epubType = null;\n        }\n    }\n    const epubTypes = epubType ? epubType.split(\" \") : [];\n    return epubTypes;\n};\n\nexport function generateTtsQueue(rootElement: Element, splitSentences: boolean): ITtsQueueItem[] {\n\n    const ttsQueue: ITtsQueueItem[] = [];\n    const elementStack: Element[] = [];\n\n    function processTextNode(textNode: Node) {\n\n        if (textNode.nodeType !== Node.TEXT_NODE) {\n            return;\n        }\n        // test for word regexp?  || !/\\w/.test(textNode.nodeValue)\n        if (!textNode.nodeValue || !textNode.nodeValue.trim().length) {\n            return;\n        }\n        const parentElement = elementStack[elementStack.length - 1];\n        if (!parentElement) {\n            return;\n        }\n\n        let current = ttsQueue[ttsQueue.length - 1];\n\n        // note that isSkippable===true never reaches into a ttsQueueItem because we eject at compilation time instead of runtime / playback:\n        // if (win.READIUM2.ttsSkippabilityEnabled && current && current.isSkippable) {\n        //     return;\n        // }\n\n        const lang = textNode.parentElement ? getLanguage(textNode.parentElement) : undefined;\n        const dir = textNode.parentElement ? getDirection(textNode.parentElement) : undefined;\n\n        if (!current || current.parentElement !== parentElement || current.lang !== lang || current.dir !== dir) {\n\n            // note that isSkippable===true never reaches into a ttsQueueItem because we eject at compilation time instead of runtime / playback:\n            if (win.READIUM2.ttsSkippabilityEnabled) {\n                const epubTypes = computeEpubTypes(parentElement);\n                const isSkippable = epubTypes.find((et) => _skippables.includes(et)) ? true : undefined;\n                if (isSkippable) {\n                    return;\n                }\n            }\n\n            current = {\n                combinedText: \"\", // filled in later (see trySplitTexts())\n                combinedTextSentences: undefined, // filled in later, if text is further chunkable\n                combinedTextSentencesRangeBegin: undefined,\n                combinedTextSentencesRangeEnd: undefined,\n                dir,\n                lang,\n                parentElement,\n                textNodes: [],\n                // isSkippable: undefined,\n            };\n            ttsQueue.push(current);\n        }\n\n        current.textNodes.push(textNode);\n    }\n\n    let first = true;\n    function processElement(element: Element) {\n        if (element.nodeType !== Node.ELEMENT_NODE) {\n            first = false;\n            return;\n        }\n\n        // const documant = element.ownerDocument as Document;\n\n        function isHidden(el: Element): boolean {\n\n            if (el.getAttribute(\"id\") === SKIP_LINK_ID) {\n                return true;\n            }\n            if (el.tagName?.toLowerCase() === \"rt\") { // ruby child\n                return true;\n            }\n\n            let curEl = el;\n            do {\n                if (curEl.nodeType === Node.ELEMENT_NODE &&\n                    curEl.tagName?.toLowerCase() === \"details\" &&\n\n                    // curEl.getAttribute(\"open\")\n                    //  === \"open\" or  === \"true\" ... it's in fact a \"boolean attr\"\n                    // (much like 'hidden' below),\n                    // so only its non-existence means \"not open\"\n                    !(curEl as HTMLDetailsElement).open) {\n                    return true;\n                }\n            } while (curEl.parentNode && curEl.parentNode.nodeType === Node.ELEMENT_NODE &&\n                (curEl = curEl.parentNode as Element));\n\n            const elStyle = win.getComputedStyle(el);\n            if (elStyle) {\n                const display = elStyle.getPropertyValue(\"display\");\n                if (display === \"none\") {\n                    return true;\n                } else {\n                    const opacity = elStyle.getPropertyValue(\"opacity\");\n                    if (opacity === \"0\") {\n                        return true;\n                    }\n                }\n\n                // Cannot be relied upon, because web browser engine reports\n                // invisible when out of view in scrolled columns!!\n                // const visibility = elStyle.getPropertyValue(\"visibility\");\n                // if (visibility === \"hidden\") {\n                //     return true;\n                // }\n            }\n\n            //  === \"hidden\" or  === \"true\" ... it's a \"boolean attr\"\n            // (much like details.open above),\n            // so only its non-existence means \"not hidden\"\n            if (el.getAttribute(\"hidden\") ||\n                el.getAttribute(\"aria-hidden\") === \"true\") {\n                return true;\n            }\n\n            return false;\n        }\n\n        const hidden = isHidden(element);\n        if (hidden) {\n            first = false;\n            return;\n        }\n\n        // note that isSkippable===true never reaches into a ttsQueueItem because we eject at compilation time instead of runtime / playback:\n        if (win.READIUM2.ttsSkippabilityEnabled) {\n            const epubTypes = computeEpubTypes(element);\n            const isSkippable = epubTypes.find((et) => _skippables.includes(et)) ? true : undefined;\n            if (isSkippable) {\n                first = false;\n                return;\n            }\n        }\n\n        const tagNameLow = element.tagName ? element.tagName.toLowerCase() : undefined;\n\n        const putInElementStack = first ||\n            tagNameLow && _putInElementStackTagNames.includes(tagNameLow)\n            // tslint:disable-next-line:max-line-length\n            // element.matches(\"h1, h2, h3, h4, h5, h6, p, th, td, caption, li, blockquote, q, dt, dd, figcaption, div, pre\")\n            ;\n\n        first = false;\n\n        if (putInElementStack) {\n            elementStack.push(element);\n        }\n\n        for (const childNode of element.childNodes) {\n            switch (childNode.nodeType) {\n                case Node.ELEMENT_NODE:\n                    const childElement = childNode as Element;\n                    const childTagNameLow = childElement.tagName ? childElement.tagName.toLowerCase() : undefined;\n\n                    const hidden = isHidden(childElement);\n\n                    const epubTypes = computeEpubTypes(childElement);\n\n                    const isSkippable = epubTypes.find((et) => _skippables.includes(et)) ? true : undefined;\n\n                    // note that isSkippable===true never reaches into a ttsQueueItem because we eject at compilation time instead of runtime / playback:\n                    if (win.READIUM2.ttsSkippabilityEnabled && isSkippable) {\n                        continue; // next child node\n                    }\n\n                    // const isPageBreak = epubType ? epubType.indexOf(\"pagebreak\") >= 0 : false; // this includes doc-*\n                    const isPageBreak = epubTypes.find((et) => et === \"pagebreak\") ? true : false;\n\n                    let pageBreakNeedsDeepDive = isPageBreak && !hidden;\n                    if (pageBreakNeedsDeepDive) {\n                        let altAttr = childElement.getAttribute(\"title\");\n                        if (altAttr) {\n                            const txt = altAttr.trim();\n                            if (txt) {\n                                pageBreakNeedsDeepDive = false;\n                                const lang = getLanguage(childElement);\n                                const dir = undefined;\n                                ttsQueue.push({\n                                    combinedText: txt,\n                                    combinedTextSentences: undefined,\n                                    combinedTextSentencesRangeBegin: undefined,\n                                    combinedTextSentencesRangeEnd: undefined,\n                                    dir,\n                                    lang,\n                                    parentElement: childElement,\n                                    textNodes: [],\n                                    // isSkippable,\n                                });\n                            }\n                        } else {\n                            altAttr = childElement.getAttribute(\"aria-label\");\n                            if (altAttr) {\n                                const txt = altAttr.trim();\n                                if (txt) {\n                                    pageBreakNeedsDeepDive = false;\n                                    const lang = getLanguage(childElement);\n                                    const dir = undefined;\n                                    ttsQueue.push({\n                                        combinedText: txt,\n                                        combinedTextSentences: undefined,\n                                        combinedTextSentencesRangeBegin: undefined,\n                                        combinedTextSentencesRangeEnd: undefined,\n                                        dir,\n                                        lang,\n                                        parentElement: childElement,\n                                        textNodes: [],\n                                        // isSkippable,\n                                    });\n                                }\n                            }\n                        }\n                    }\n\n                    const isLink = childTagNameLow === \"a\" && (childElement as HTMLLinkElement).href; // excludes anchors\n                    let linkNeedsDeepDive = isLink && !hidden;\n                    if (linkNeedsDeepDive) {\n                        let altAttr = childElement.getAttribute(\"title\");\n                        if (altAttr) {\n                            const txt = altAttr.trim();\n                            if (txt) {\n                                linkNeedsDeepDive = false;\n                                const lang = getLanguage(childElement);\n                                const dir = undefined;\n                                ttsQueue.push({\n                                    combinedText: txt,\n                                    combinedTextSentences: undefined,\n                                    combinedTextSentencesRangeBegin: undefined,\n                                    combinedTextSentencesRangeEnd: undefined,\n                                    dir,\n                                    lang,\n                                    parentElement: childElement,\n                                    textNodes: [],\n                                    // isSkippable,\n                                });\n                            }\n                        } else {\n                            altAttr = childElement.getAttribute(\"aria-label\");\n                            if (altAttr) {\n                                const txt = altAttr.trim();\n                                if (txt) {\n                                    linkNeedsDeepDive = false;\n                                    const lang = getLanguage(childElement);\n                                    const dir = undefined;\n                                    ttsQueue.push({\n                                        combinedText: txt,\n                                        combinedTextSentences: undefined,\n                                        combinedTextSentencesRangeBegin: undefined,\n                                        combinedTextSentencesRangeEnd: undefined,\n                                        dir,\n                                        lang,\n                                        parentElement: childElement,\n                                        textNodes: [],\n                                        // isSkippable,\n                                    });\n                                }\n                            }\n                        }\n                    }\n\n                    const isMathJax = childTagNameLow && childTagNameLow.startsWith(\"mjx-\");\n                    const isMathML = childTagNameLow === \"math\";\n                    const processDeepChild =\n                        pageBreakNeedsDeepDive ||\n                        linkNeedsDeepDive ||\n                        (\n                        !isPageBreak &&\n                        !isLink &&\n                        !isMathJax &&\n                        !isMathML &&\n                        childTagNameLow && !_doNotProcessDeepChildTagNames.includes(childTagNameLow)\n                        // tslint:disable-next-line:max-line-length\n                        // !childElement.matches(\"svg, img, sup, sub, audio, video, source, button, canvas, del, dialog, embed, form, head, iframe, meter, noscript, object, s, script, select, style, textarea\")\n                        // code, nav, dl, figure, table, ul, ol\n                        )\n                    ;\n\n                    if (processDeepChild) {\n                        processElement(childElement);\n                    } else if (!hidden) {\n                        if (isPageBreak || isLink) {\n                            // do nothing, already dealt with above (either shallow or deep)\n                        } else if (isMathML) {\n                            const altAttr = childElement.getAttribute(\"alttext\");\n                            if (altAttr) {\n                                const txt = altAttr.trim();\n                                if (txt) {\n                                    const lang = getLanguage(childElement);\n                                    const dir = undefined;\n                                    ttsQueue.push({\n                                        combinedText: txt,\n                                        combinedTextSentences: undefined,\n                                        combinedTextSentencesRangeBegin: undefined,\n                                        combinedTextSentencesRangeEnd: undefined,\n                                        dir,\n                                        lang,\n                                        parentElement: childElement,\n                                        textNodes: [],\n                                        // isSkippable,\n                                    });\n                                }\n                            } else {\n                                const txt = childElement.textContent?.trim();\n                                if (txt) {\n                                    const lang = getLanguage(childElement);\n                                    const dir = getDirection(childElement);\n                                    ttsQueue.push({\n                                        combinedText: txt,\n                                        combinedTextSentences: undefined,\n                                        combinedTextSentencesRangeBegin: undefined,\n                                        combinedTextSentencesRangeEnd: undefined,\n                                        dir,\n                                        lang,\n                                        parentElement: childElement,\n                                        textNodes: [],\n                                        // isSkippable,\n                                    });\n                                }\n                            }\n                        } else if (isMathJax) {\n                            if (childTagNameLow === \"mjx-container\") {\n\n                                let mathJaxEl: Element | undefined;\n                                let mathJaxElMathML: Element | undefined;\n                                const mathJaxContainerChildren = Array.from(childElement.children);\n                                for (const mathJaxContainerChild of mathJaxContainerChildren) {\n                                    if (mathJaxContainerChild.tagName?.toLowerCase() === \"mjx-math\") {\n                                        mathJaxEl = mathJaxContainerChild;\n                                    } else if (mathJaxContainerChild.tagName?.toLowerCase() === \"mjx-assistive-mml\") {\n                                        const mathJaxAMMLChildren = Array.from(mathJaxContainerChild.children);\n                                        for (const mathJaxAMMLChild of mathJaxAMMLChildren) {\n                                            if (mathJaxAMMLChild.tagName?.toLowerCase() === \"math\") {\n                                                mathJaxElMathML = mathJaxAMMLChild;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n\n                                const altAttr = childElement.getAttribute(\"aria-label\");\n                                if (altAttr) {\n                                    const txt = altAttr.trim();\n                                    if (txt) {\n                                        const lang = getLanguage(childElement);\n                                        const dir = undefined;\n                                        ttsQueue.push({\n                                            combinedText: txt,\n                                            combinedTextSentences: undefined,\n                                            combinedTextSentencesRangeBegin: undefined,\n                                            combinedTextSentencesRangeEnd: undefined,\n                                            dir,\n                                            lang,\n                                            parentElement: mathJaxEl ?? childElement,\n                                            textNodes: [],\n                                            // isSkippable,\n                                        });\n                                    }\n                                } else if (mathJaxElMathML) {\n                                    const altAttr = mathJaxElMathML.getAttribute(\"alttext\");\n                                    if (altAttr) {\n                                        const txt = altAttr.trim();\n                                        if (txt) {\n                                            const lang = getLanguage(mathJaxElMathML);\n                                            const dir = undefined;\n                                            ttsQueue.push({\n                                                combinedText: txt,\n                                                combinedTextSentences: undefined,\n                                                combinedTextSentencesRangeBegin: undefined,\n                                                combinedTextSentencesRangeEnd: undefined,\n                                                dir,\n                                                lang,\n                                                parentElement: mathJaxEl ?? childElement,\n                                                textNodes: [],\n                                                // isSkippable,\n                                            });\n                                        }\n                                    } else {\n                                        const txt = mathJaxElMathML.textContent?.trim();\n                                        if (txt) {\n                                            const lang = getLanguage(mathJaxElMathML);\n                                            const dir = getDirection(mathJaxElMathML);\n                                            ttsQueue.push({\n                                                combinedText: txt,\n                                                combinedTextSentences: undefined,\n                                                combinedTextSentencesRangeBegin: undefined,\n                                                combinedTextSentencesRangeEnd: undefined,\n                                                dir,\n                                                lang,\n                                                parentElement: mathJaxEl ?? childElement,\n                                                textNodes: [],\n                                                // isSkippable,\n                                            });\n                                        }\n                                    }\n                                    break;\n                                }\n                            }\n                        } else if (childTagNameLow === \"img\" &&\n                            (childElement as HTMLImageElement).src) {\n                            let altAttr = childElement.getAttribute(\"alt\");\n                            if (altAttr) {\n                                const txt = altAttr.trim();\n                                if (txt) {\n                                    const lang = getLanguage(childElement);\n                                    const dir = undefined;\n                                    ttsQueue.push({\n                                        combinedText: txt,\n                                        combinedTextSentences: undefined,\n                                        combinedTextSentencesRangeBegin: undefined,\n                                        combinedTextSentencesRangeEnd: undefined,\n                                        dir,\n                                        lang,\n                                        parentElement: childElement,\n                                        textNodes: [],\n                                        // isSkippable,\n                                    });\n                                }\n                            } else {\n                                altAttr = childElement.getAttribute(\"aria-label\");\n                                if (altAttr) {\n                                    const txt = altAttr.trim();\n                                    if (txt) {\n                                        const lang = getLanguage(childElement);\n                                        const dir = undefined;\n                                        ttsQueue.push({\n                                            combinedText: txt,\n                                            combinedTextSentences: undefined,\n                                            combinedTextSentencesRangeBegin: undefined,\n                                            combinedTextSentencesRangeEnd: undefined,\n                                            dir,\n                                            lang,\n                                            parentElement: childElement,\n                                            textNodes: [],\n                                            // isSkippable,\n                                        });\n                                    }\n                                }\n                            }\n                        } else if (childTagNameLow === \"svg\") {\n                            const altAttr = childElement.getAttribute(\"aria-label\");\n                            if (altAttr) {\n                                const txt = altAttr.trim();\n                                if (txt) {\n                                    const lang = getLanguage(childElement);\n                                    const dir = undefined;\n                                    ttsQueue.push({\n                                        combinedText: txt,\n                                        combinedTextSentences: undefined,\n                                        combinedTextSentencesRangeBegin: undefined,\n                                        combinedTextSentencesRangeEnd: undefined,\n                                        dir,\n                                        lang,\n                                        parentElement: childElement,\n                                        textNodes: [],\n                                        // isSkippable,\n                                    });\n                                }\n                            } else {\n                                const svgChildren = Array.from(childElement.children);\n                                for (const svgChild of svgChildren) {\n                                    if (svgChild.tagName?.toLowerCase() === \"title\") {\n                                        const txt = svgChild.textContent?.trim();\n                                        if (txt) {\n                                            const lang = getLanguage(svgChild);\n                                            const dir = getDirection(svgChild);\n                                            ttsQueue.push({\n                                                combinedText: txt,\n                                                combinedTextSentences: undefined,\n                                                combinedTextSentencesRangeBegin: undefined,\n                                                combinedTextSentencesRangeEnd: undefined,\n                                                dir,\n                                                lang,\n                                                parentElement: childElement,\n                                                textNodes: [],\n                                                // isSkippable,\n                                            });\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case Node.TEXT_NODE:\n                    if (elementStack.length !== 0) {\n                        processTextNode(childNode);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        if (putInElementStack) {\n            elementStack.pop();\n        }\n    }\n\n    processElement(rootElement);\n\n    function finalizeTextNodes(ttsQueueItem: ITtsQueueItem) {\n        if (!ttsQueueItem.textNodes || !ttsQueueItem.textNodes.length) {\n            // img@alt can set combinedText (no text nodes)\n            if (!ttsQueueItem.combinedText || !ttsQueueItem.combinedText.length) {\n                ttsQueueItem.combinedText = \"\";\n            }\n            ttsQueueItem.combinedTextSentences = undefined;\n            return;\n        }\n\n        ttsQueueItem.combinedText = combineTextNodes(ttsQueueItem.textNodes, true).replace(/[\\r\\n]/g, \" \");\n        // ttsQueueItem.combinedText = ttsQueueItem.combinedTextSentences ?\n        //     combineTextNodes(ttsQueueItem.textNodes, false).trim() :\n        //     combineTextNodes(ttsQueueItem.textNodes, true);\n        let skipSplitSentences = false;\n        let parent: Element | null = ttsQueueItem.parentElement;\n        while (parent) {\n            if (parent.tagName) {\n                const tag = parent.tagName.toLowerCase();\n                if (tag === \"pre\" || tag === \"code\" ||\n                    tag === \"video\" || tag === \"audio\" ||\n                    tag === \"img\" || tag === \"svg\" ||\n                    tag === \"math\" || tag.startsWith(\"mjx-\")) {\n                    skipSplitSentences = true;\n                    break;\n                }\n            }\n            parent = parent.parentElement;\n        }\n        if (splitSentences && !skipSplitSentences) {\n            try {\n                const txt = ttsQueueItem.combinedText; // no further transforms?\n                ttsQueueItem.combinedTextSentences = undefined;\n                const sentences = split(txt);\n                ttsQueueItem.combinedTextSentences = [];\n                ttsQueueItem.combinedTextSentencesRangeBegin = [];\n                ttsQueueItem.combinedTextSentencesRangeEnd = [];\n                for (const sentence of sentences) {\n                    if (sentence.type === \"Sentence\") {\n                        // console.log(sentence.raw, JSON.stringify(sentence.range, null, 2));\n\n                        ttsQueueItem.combinedTextSentences.push(sentence.raw);\n                        ttsQueueItem.combinedTextSentencesRangeBegin.push(sentence.range[0]);\n                        ttsQueueItem.combinedTextSentencesRangeEnd.push(sentence.range[1]);\n                    }\n                    // else {\n                    //     console.log(sentence.type);\n                    // }\n                }\n                if (ttsQueueItem.combinedTextSentences.length === 0 ||\n                    ttsQueueItem.combinedTextSentences.length === 1) {\n                    ttsQueueItem.combinedTextSentences = undefined;\n                } else {\n                    // let total = 0;\n                    // ttsQueueItem.combinedTextSentences.forEach((sent) => {\n                    //     total += sent.length;\n                    // });\n                    // const expectedWhiteSpacesSeparators = ttsQueueItem.combinedTextSentences.length - 1;\n                    // if (total !== ttsQueueItem.combinedText.length &&\n                    //     ((ttsQueueItem.combinedText.length - total) !== expectedWhiteSpacesSeparators)) {\n                    //     console.log(\"sentences total !== item.combinedText.length\");\n                    //     console.log(total + \" !== \" + ttsQueueItem.combinedText.length);\n                    //     consoleLogTtsQueueItem(ttsQueueItem);\n                    //     console.log(JSON.stringify(sentences, null, 4));\n                    // }\n                }\n            } catch (err) {\n                console.log(err);\n                ttsQueueItem.combinedTextSentences = undefined;\n            }\n        } else {\n            ttsQueueItem.combinedTextSentences = undefined;\n        }\n    }\n\n    for (const ttsQueueItem of ttsQueue) {\n        finalizeTextNodes(ttsQueueItem);\n    }\n\n    return ttsQueue;\n}\n"]}