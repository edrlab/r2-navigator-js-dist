{"version":3,"file":"readium-css.js","sourceRoot":"","sources":["../../../../../src/electron/renderer/readium-css.ts"],"names":[],"mappings":";;AAYA,MAAM,GAAG,GAAG,MAAuC,CAAC;AAEpD,SAAgB,KAAK;IAUjB,MAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC;IAE7C,IAAI,WAAW;QACX,WAAW,CAAC,QAAQ;QACpB,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE;QAChC,OAAO,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC;KACjE;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAlBD,sBAkBC;AAED,SAAgB,aAAa,CAAC,IAAsB;IAChD,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;QACzB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,OAAO,EAAE;YACpC,OAAO,IAAI,CAAC;SACf;QACD,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,WAAW,EAAE;YAC/C,OAAO,KAAK,CAAC;SAChB;KACJ;IAED,MAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC;IAE7C,IAAI,WAAW;QACX,WAAW,CAAC,QAAQ;QACpB,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE;QAChC,OAAO,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,KAAK,OAAO,CAAC;KAC5D;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAlBD,sCAkBC;AAED,SAAgB,8BAA8B,CAAC,IAAsB;IAEjE,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;QACrB,MAAM,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QACtD,OAAO;YACH,wBAAwB,EAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS;YAChF,uBAAuB,EAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS;YAC9E,aAAa,EAAE,IAAI;YACnB,MAAM,EAAE,SAAS;SACpB,CAAC;KACL;IAED,IAAI,CAAC,6BAA6B,EAAE;QAChC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC;KACtD;IAED,MAAM,qBAAqB,GAAG,6BAA6B,EAAE,CAAC;IAC9D,OAAO,qBAAqB,CAAC;AACjC,CAAC;AAlBD,wEAkBC;AACD,IAAI,6BAA6B,GAA4C,GAAG,EAAE;IAC9E,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC;AACvD,CAAC,CAAC;AACF,SAAgB,uBAAuB,CAAC,IAA6C;IACjF,6BAA6B,GAAG,IAAI,CAAC;AACzC,CAAC;AAFD,0DAEC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { Link } from \"@r2-shared-js/models/publication-link\";\n\nimport { IEventPayload_R2_EVENT_READIUMCSS } from \"../common/events\";\nimport { IReadiumElectronBrowserWindow } from \"./webview/state\";\n\nconst win = window as IReadiumElectronBrowserWindow;\n\nexport function isRTL(/* link: Link | undefined */): boolean {\n    // if (link && link.Properties) {\n    //     if (link.Properties.Direction === \"rtl\") {\n    //         return true;\n    //     }\n    //     if (typeof link.Properties.Direction !== \"undefined\") {\n    //         return false;\n    //     }\n    // }\n\n    const publication = win.READIUM2.publication;\n\n    if (publication &&\n        publication.Metadata &&\n        publication.Metadata.Direction) {\n        return publication.Metadata.Direction.toLowerCase() === \"rtl\"; //  any other value is LTR\n    }\n    return false;\n}\n\nexport function isFixedLayout(link: Link | undefined): boolean {\n    if (link && link.Properties) {\n        if (link.Properties.Layout === \"fixed\") {\n            return true;\n        }\n        if (typeof link.Properties.Layout !== \"undefined\") {\n            return false;\n        }\n    }\n\n    const publication = win.READIUM2.publication;\n\n    if (publication &&\n        publication.Metadata &&\n        publication.Metadata.Rendition) {\n        return publication.Metadata.Rendition.Layout === \"fixed\";\n    }\n    return false;\n}\n\nexport function __computeReadiumCssJsonMessage(link: Link | undefined): IEventPayload_R2_EVENT_READIUMCSS {\n\n    if (isFixedLayout(link)) {\n        const activeWebView = win.READIUM2.getActiveWebView();\n        return {\n            fixedLayoutWebViewHeight: activeWebView ? activeWebView.clientHeight : undefined,\n            fixedLayoutWebViewWidth: activeWebView ? activeWebView.clientWidth : undefined,\n            isFixedLayout: true,\n            setCSS: undefined,\n        };\n    }\n\n    if (!_computeReadiumCssJsonMessage) {\n        return { setCSS: undefined, isFixedLayout: false };\n    }\n\n    const readiumCssJsonMessage = _computeReadiumCssJsonMessage();\n    return readiumCssJsonMessage;\n}\nlet _computeReadiumCssJsonMessage: () => IEventPayload_R2_EVENT_READIUMCSS = () => {\n    return { setCSS: undefined, isFixedLayout: false };\n};\nexport function setReadiumCssJsonGetter(func: () => IEventPayload_R2_EVENT_READIUMCSS) {\n    _computeReadiumCssJsonMessage = func;\n}\n"]}