{"version":3,"file":"index_.js","sourceRoot":"","sources":["../../../../../../../src/electron/renderer/riots/menuselect/index_.ts"],"names":[],"mappings":"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","sourcesContent":["// http://riotjs.com/guide/\r\n// http://riotjs.com/api/\r\n\r\nexport interface IRiotOptsMenuSelectItem {\r\n    id: string;\r\n    label: string;\r\n    style?: string;\r\n}\r\nexport interface IRiotOptsMenuSelect {\r\n    options: IRiotOptsMenuSelectItem[];\r\n    selected: string;\r\n    disabled: boolean;\r\n}\r\n\r\nexport interface IRiotTagMenuSelect extends\r\n    RiotTag {\r\n    setDisabled: (disabled: boolean) => void;\r\n    setSelectedItem: (item: string) => void;\r\n    getIndexForId: (id: string) => number | undefined;\r\n    getIndexForLabel: (label: string) => number | undefined;\r\n    getIdForLabel: (label: string) => string | undefined;\r\n    getLabelForId: (id: string) => string | undefined;\r\n}\r\n\r\nexport const riotMountMenuSelect = (selector: string, opts: IRiotOptsMenuSelect): RiotTag[] => {\r\n    const tag = riot.mount(selector, opts);\r\n    // console.log(tag); // RiotTag[]\r\n    return tag;\r\n};\r\n\r\n// tslint:disable-next-line:space-before-function-paren\r\n(window as any).riot_menuselect = function (_opts: IRiotOptsMenuSelect) {\r\n    const that = this as IRiotTagMenuSelect;\r\n\r\n    // tslint:disable-next-line:space-before-function-paren\r\n    that.getIndexForId = function (id: string): number | undefined {\r\n        // let nDivider = 0;\r\n        // (this.opts as IRiotOptsMenuSelect).options.forEach((option) => {\r\n        //     if (option.label === \"_\") {\r\n        //         nDivider++;\r\n        //     }\r\n        // });\r\n        let index = -1;\r\n        const found = (this.opts as IRiotOptsMenuSelect).options.find((option) => {\r\n            if (option.label !== \"_\") {\r\n                index++;\r\n            }\r\n            return option.id === id;\r\n        });\r\n        // (this.opts as IRiotOptsMenuSelect).options.indexOf(found) - nDivider\r\n        return found ? index : undefined;\r\n    };\r\n\r\n    // tslint:disable-next-line:space-before-function-paren\r\n    that.getIndexForLabel = function (label: string): number | undefined {\r\n        // let nDivider = 0;\r\n        // (this.opts as IRiotOptsMenuSelect).options.forEach((option) => {\r\n        //     if (option.label === \"_\") {\r\n        //         nDivider++;\r\n        //     }\r\n        // });\r\n        let index = -1;\r\n        const found = (this.opts as IRiotOptsMenuSelect).options.find((option) => {\r\n            if (option.label !== \"_\") {\r\n                index++;\r\n            }\r\n            return option.label === label;\r\n        });\r\n        // (this.opts as IRiotOptsMenuSelect).options.indexOf(found) - nDivider\r\n        return found ? index : undefined;\r\n    };\r\n\r\n    // tslint:disable-next-line:space-before-function-paren\r\n    that.getLabelForId = function (id: string): string | undefined {\r\n        const found = (this.opts as IRiotOptsMenuSelect).options.find((option) => {\r\n            return option.id === id;\r\n        });\r\n        return found ? found.label : undefined;\r\n    };\r\n\r\n    // tslint:disable-next-line:space-before-function-paren\r\n    that.getIdForLabel = function (label: string): string | undefined {\r\n        const found = (this.opts as IRiotOptsMenuSelect).options.find((option) => {\r\n            return option.label === label;\r\n        });\r\n        return found ? found.id : undefined;\r\n    };\r\n\r\n    // tslint:disable-next-line:space-before-function-paren\r\n    that.setSelectedItem = function (item: string) {\r\n\r\n        let index = that.getIndexForId(item);\r\n        if (typeof index === \"undefined\" || index < 0) {\r\n            index = 0;\r\n            item = (this.opts as IRiotOptsMenuSelect).options[0].id;\r\n        }\r\n        // console.log(\"setSelectedItem\");\r\n        // console.log(item);\r\n        // console.log(index);\r\n        (this.opts as IRiotOptsMenuSelect).selected = item;\r\n        (that.root as any).mdcSelect.selectedIndex = index;\r\n        this.update();\r\n    };\r\n\r\n    // tslint:disable-next-line:space-before-function-paren\r\n    that.setDisabled = function (disabled: boolean) {\r\n\r\n        this.opts.disabled = disabled;\r\n        (that.root as any).mdcSelect.disabled = disabled;\r\n        // this.update();\r\n    };\r\n\r\n    that.on(\"mount\", () => {\r\n\r\n        const menuFactory = (menuEl: HTMLElement) => {\r\n            const menu = new (window as any).mdc.menu.MDCSimpleMenu(menuEl);\r\n            (menuEl as any).mdcSimpleMenu = menu;\r\n            return menu;\r\n        };\r\n        // MDCSelect.attachTo(that.root)\r\n        const mdcSelector = new (window as any).mdc.select.MDCSelect(that.root, undefined, menuFactory);\r\n        (that.root as any).mdcSelect = mdcSelector;\r\n\r\n        mdcSelector.disabled = that.opts.disabled;\r\n\r\n        mdcSelector.listen(\"MDCSelect:change\", (ev: any) => {\r\n            // console.log(\"MDCSelect:change: \" + that.root.id);\r\n            // console.log(ev);\r\n            // console.log(ev.detail.selectedOptions[0].textContent);\r\n            // console.log(ev.detail.selectedIndex);\r\n            // console.log(ev.detail.value);\r\n\r\n            // let label = ev.detail.value;\r\n            // const element = that.root.ownerDocument.getElementById(label);\r\n            // if (element) {\r\n            //     console.log(element.textContent);\r\n            //     label = element.textContent;\r\n            // }\r\n\r\n            that.trigger(\"selectionChanged\", ev.detail.value);\r\n        });\r\n    });\r\n};\r\n"]}