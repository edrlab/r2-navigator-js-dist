{"version":3,"file":"readium-css.js","sourceRoot":"","sources":["../../../../../src/electron/main/readium-css.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as express from \"express\";\n\nimport { Publication } from \"@r2-shared-js/models/publication\";\nimport { Link } from \"@r2-shared-js/models/publication-link\";\nimport { Transformers } from \"@r2-shared-js/transform/transformer\";\nimport { TTransformFunction, TransformerHTML } from \"@r2-shared-js/transform/transformer-html\";\nimport { Server } from \"@r2-streamer-js/http/server\";\n\nimport { IEventPayload_R2_EVENT_READIUMCSS } from \"../common/events\";\nimport { readiumCssTransformHtml } from \"../common/readium-css-inject\";\nimport { READIUM_CSS_URL_PATH } from \"../common/readium-css-settings\";\nimport { URL_PARAM_IS_IFRAME } from \"../renderer/common/url-params\";\n\nconst IS_DEV = (process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"dev\");\n\nfunction isFixedLayout(publication: Publication, link: Link | undefined): boolean {\n    if (link && link.Properties) {\n        if (link.Properties.Layout === \"fixed\") {\n            return true;\n        }\n        if (typeof link.Properties.Layout !== \"undefined\") {\n            return false;\n        }\n    }\n    if (publication &&\n        publication.Metadata &&\n        publication.Metadata.Rendition) {\n        return publication.Metadata.Rendition.Layout === \"fixed\";\n    }\n    return false;\n}\n\nexport type TReadiumCssGetterFunction = (\n    publication: Publication,\n    link: Link,\n    sessionInfo: string | undefined,\n) => IEventPayload_R2_EVENT_READIUMCSS;\n\nexport function setupReadiumCSS(\n    server: Server,\n    folderPath: string,\n    readiumCssGetter: TReadiumCssGetterFunction) {\n\n    // https://expressjs.com/en/4x/api.html#express.static\n    const staticOptions = {\n        dotfiles: \"ignore\",\n        etag: true,\n        fallthrough: false,\n        immutable: true,\n        index: false,\n        maxAge: \"1d\",\n        redirect: false,\n        // extensions: [\"css\", \"otf\"],\n        setHeaders: (res: express.Response, _path: string, _stat: any) => {\n            //   res.set('x-timestamp', Date.now())\n            server.setResponseCORS(res);\n        },\n    };\n\n    server.expressUse(\"/\" + READIUM_CSS_URL_PATH, express.static(folderPath, staticOptions));\n\n    const transformerReadiumCss: TTransformFunction = (\n        publication: Publication,\n        link: Link,\n        url: string | undefined,\n        str: string,\n        sessionInfo: string | undefined,\n    ): string => {\n\n        let isIframe = false;\n        if (url) {\n            const url_ = new URL(url);\n            if (url_.searchParams.has(URL_PARAM_IS_IFRAME)) {\n                isIframe = true;\n            }\n        }\n\n        if (isIframe) {\n            return str;\n        }\n\n        let readiumcssJson = readiumCssGetter(publication, link, sessionInfo);\n        if (isFixedLayout(publication, link)) {\n            const readiumcssJson_ = { setCSS: undefined, isFixedLayout: true } as IEventPayload_R2_EVENT_READIUMCSS;\n            if (readiumcssJson.setCSS) {\n                if (readiumcssJson.setCSS.mathJax) {\n                    // TODO: apply MathJax to FXL?\n                    // (reminder: setCSS must remain 'undefined'\n                    // in order to completely remove ReadiumCSS from FXL docs)\n                }\n                if (readiumcssJson.setCSS.reduceMotion) {\n                    // TODO: same as MathJax (see above)\n                }\n                // if (readiumcssJson.setCSS.audioPlaybackRate) {\n                //     // TODO: same as MathJax (see above)\n                // }\n            }\n            readiumcssJson = readiumcssJson_;\n        }\n\n        if (readiumcssJson) {\n            if (!readiumcssJson.urlRoot) {\n                const u = server.serverUrl();\n                if (u) {\n                    readiumcssJson.urlRoot = u;\n                }\n            }\n            if (IS_DEV) {\n                console.log(\"_____ readiumCssJson.urlRoot (setupReadiumCSS() transformer): \", readiumcssJson.urlRoot);\n            }\n\n            // import * as mime from \"mime-types\";\n            let mediaType = \"application/xhtml+xml\"; // mime.lookup(link.Href);\n            if (link && link.TypeLink) {\n                mediaType = link.TypeLink;\n            }\n\n            return readiumCssTransformHtml(str, readiumcssJson, mediaType);\n        } else {\n            return str;\n        }\n    };\n    Transformers.instance().add(new TransformerHTML(transformerReadiumCss));\n}\n"]}