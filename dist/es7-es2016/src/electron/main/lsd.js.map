{"version":3,"file":"lsd.js","sourceRoot":"","sources":["../../../../../src/electron/main/lsd.ts"],"names":[],"mappings":";;;AACA,gDAAgD;AAChD,kDAAkD;AAElD,gCAAgC;AAChC,iCAAiC;AAEjC,MAAM,KAAK,GAAG,MAAM,CAAC,gCAAgC,CAAC,CAAC;AAEvD,qBACI,kBAA0B,EAC1B,eAAiC,EACjC,mBAA2B;;QAE3B,MAAM,WAAW,GAAG,kBAAkB,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAC9E,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/D,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,+BAA+B,CAAC,CAAC;QAC3D,CAAC;QAED,IAAI,iBAAsB,CAAC;QAC3B,IAAI,CAAC;YACD,iBAAiB,GAAG,MAAM,kBAAS,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;YAC9E,WAAW,CAAC,GAAG,CAAC,OAAO,GAAG,iBAAiB,CAAC;YAC5C,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAC9C,CAAC;QAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,KAAK,CAAC,GAAG,CAAC,CAAC;YACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC;IACL,CAAC;CAAA;AAnBD,kCAmBC;AAED,oBACI,kBAA0B,EAC1B,eAAiC,EACjC,mBAA2B,EAC3B,UAA8B;;QAE9B,MAAM,WAAW,GAAG,kBAAkB,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAC9E,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/D,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAC7C,CAAC;QAED,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QACrE,IAAI,iBAAsB,CAAC;QAC3B,IAAI,CAAC;YACD,iBAAiB,GAAG,MAAM,gBAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;YACtF,WAAW,CAAC,GAAG,CAAC,OAAO,GAAG,iBAAiB,CAAC;YAC5C,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAC9C,CAAC;QAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,KAAK,CAAC,GAAG,CAAC,CAAC;YACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC;IACL,CAAC;CAAA;AArBD,gCAqBC","sourcesContent":["import { IDeviceIDManager } from \"@r2-lcp-js/lsd/deviceid-manager\";\nimport { lsdRenew } from \"@r2-lcp-js/lsd/renew\";\nimport { lsdReturn } from \"@r2-lcp-js/lsd/return\";\nimport { Server } from \"@r2-streamer-js/http/server\";\nimport * as debug_ from \"debug\";\nimport * as moment from \"moment\";\n\nconst debug = debug_(\"r2:navigator#electron/main/lsd\");\n\nexport async function doLsdReturn(\n    publicationsServer: Server,\n    deviceIDManager: IDeviceIDManager,\n    publicationFilePath: string): Promise<any> {\n\n    const publication = publicationsServer.cachedPublication(publicationFilePath);\n    if (!publication || !publication.LCP || !publication.LCP.LSDJson) {\n        return Promise.reject(\"no publication LCP LSD data?!\");\n    }\n\n    let renewResponseJson: any;\n    try {\n        renewResponseJson = await lsdReturn(publication.LCP.LSDJson, deviceIDManager);\n        publication.LCP.LSDJson = renewResponseJson;\n        return Promise.resolve(renewResponseJson);\n    } catch (err) {\n        debug(err);\n        return Promise.reject(err);\n    }\n}\n\nexport async function doLsdRenew(\n    publicationsServer: Server,\n    deviceIDManager: IDeviceIDManager,\n    publicationFilePath: string,\n    endDateStr: string | undefined): Promise<any> {\n\n    const publication = publicationsServer.cachedPublication(publicationFilePath);\n    if (!publication || !publication.LCP || !publication.LCP.LSDJson) {\n        return Promise.reject(\"Internal error!\");\n    }\n\n    const endDate = endDateStr ? moment(endDateStr).toDate() : undefined;\n    let renewResponseJson: any;\n    try {\n        renewResponseJson = await lsdRenew(endDate, publication.LCP.LSDJson, deviceIDManager);\n        publication.LCP.LSDJson = renewResponseJson;\n        return Promise.resolve(renewResponseJson);\n    } catch (err) {\n        debug(err);\n        return Promise.reject(err);\n    }\n}\n"]}