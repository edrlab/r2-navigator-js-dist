{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/electron/main/index.ts"],"names":[],"mappings":";;;AAeA,yBAAyB;AACzB,6BAA6B;AAE7B,mEAAkF;AAClF,wDAAqD;AACrD,+DAA2D;AAE3D,yDAAyE;AACzE,gCAAgC;AAChC,uCAAkF;AAClF,uCAAuC;AACvC,yCAAyC;AAEzC,6CAAqD;AACrD,qEAA8D;AAC9D,+BAA4D;AAC5D,+BAAuD;AACvD,iEAAyD;AACzD,+CAAgD;AAChD,yCAA0C;AAI1C,0BAAW,EAAE,CAAC;AACd,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;AAClE,4BAAsB,CAAC,aAAa,CAAC,CAAC;AAEtC,MAAM,KAAK,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAEzC,IAAI,mBAA2B,CAAC;AAChC,IAAI,uBAA+B,CAAC;AACpC,IAAI,oBAA4B,CAAC;AACjC,IAAI,sBAAgC,CAAC;AACrC,IAAI,iBAA2B,CAAC;AAEhC,MAAM,iBAAiB,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AACzE,IAAI,aAAiC,CAAC;AAItC;IACI,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI,sBAAW,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;QAI/C,EAAE,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;AACL,CAAC;AAcD,kBAAO,CAAC,EAAE,CAAC,0BAAiB,EAAE,CAAC,MAAW,EAAE,IAAS,EAAE,EAAE;IACrD,eAAe,EAAE,CAAC;AACtB,CAAC,CAAC,CAAC;AAEH,qCAA2C,mBAA2B,EAAE,cAAsB;;QAE1F,KAAK,CAAC,gCAAgC,GAAG,mBAAmB,GAAG,KAAK,GAAG,cAAc,CAAC,CAAC;QAKvF,IAAI,WAAwB,CAAC;QAC7B,IAAI,CAAC;YACD,WAAW,GAAG,MAAM,mBAAmB,CAAC,0BAA0B,CAAC,mBAAmB,CAAC,CAAC;QAC5F,CAAC;QAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,KAAK,CAAC,GAAG,CAAC,CAAC;YACX,MAAM,CAAC;QACX,CAAC;QAED,IAAI,OAA2B,CAAC;QAChC,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YAEjC,IAAI,CAAC;gBACD,MAAM,oCAA8B,CAAC,WAAW,EAAE,mBAAmB,EAAE,sCAAe,EAAE,GAAG,EAAE;oBACzF,KAAK,CAAC,sCAAsC,CAAC,CAAC;gBAClD,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX,KAAK,CAAC,GAAG,CAAC,CAAC;YACf,CAAC;YAED,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU;gBAC1B,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO;gBAClC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC9C,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC;YAC1D,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACX,OAAO,GAAG,gBAAgB,CAAC;YAC/B,CAAC;QACL,CAAC;QAED,MAAM,qBAAqB,GAAG,IAAI,wBAAa,CAAC;YAC5C,MAAM,EAAE,GAAG;YACX,cAAc,EAAE;gBACZ,2BAA2B,EAAE,KAAK;gBAClC,gBAAgB,EAAE,KAAK;gBACvB,QAAQ,EAAE,IAAI;gBACd,eAAe,EAAE,IAAI;gBACrB,uBAAuB,EAAE,KAAK;gBAC9B,OAAO,EAAE,KAAK;gBACd,WAAW,EAAE,IAAI;gBACjB,UAAU,EAAE,IAAI;aAEnB;YACD,KAAK,EAAE,GAAG;SACb,CAAC,CAAC;QACH,2CAAkB,CAAC,qBAAqB,CAAC,CAAC;QAkB1C,qBAAqB,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;YACnD,KAAK,CAAC,kCAAkC,GAAG,mBAAmB,GAAG,KAAK,GAAG,cAAc,CAAC,CAAC;QAE7F,CAAC,CAAC,CAAC;QAEH,MAAM,UAAU,GAAG,qCAA0B,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAI,OAAO,GAAG,UAAU,SAAS,+BAA+B,UAAU,EAAE,CAAC;QAC7E,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,OAAO,GAAG,OAAO,GAAG,WAAW,GAAG,qCAA0B,CAAC,OAAO,CAAC,CAAC;QAC1E,CAAC;QAKD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,qBAAqB,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,YAAY,EAAE,oBAAoB,EAAE,CAAC,CAAC;IAC/F,CAAC;CAAA;AAED,uBAAY,EAAE,CAAC;AAEf,cAAG,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;IACjB,KAAK,CAAC,WAAW,CAAC,CAAC;IAgBnB,CAAC,GAAS,EAAE;QACR,IAAI,CAAC;YACD,sBAAsB,GAAG,MAAM,SAAS,CAAC,MAAM,EAAE;iBAC5C,KAAK,CAAC,iBAAiB,CAAC;iBACxB,GAAG,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;iBACzC,IAAI,EAAE,CAAC;QAChB,CAAC;QAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,KAAK,CAAC,GAAG,CAAC,CAAC;QACf,CAAC;QACD,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAE9B,mBAAmB,GAAG,IAAI,eAAM,CAAC;YAC7B,iBAAiB,EAAE,KAAK;YACxB,cAAc,EAAE,KAAK;SACxB,CAAC,CAAC;QAEH,uBAAiB,CAAC,mBAAmB,EAAE,sCAAe,CAAC,CAAC;QAExD,6BAAe,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,iBAAiB,CAAC,CAAC,CAAC;QA8ElF,MAAM,QAAQ,GAAG,mBAAmB,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;QAE7E,IAAI,CAAC;YACD,uBAAuB,GAAG,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC;QAChE,CAAC;QAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,KAAK,CAAC,GAAG,CAAC,CAAC;QACf,CAAC;QACD,oBAAoB,GAAG,mBAAmB,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAE1E,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;YACzC,MAAM,CAAC,GAAG,oBAAoB,GAAG,OAAO,EAAE,CAAC;QAC/C,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAEzB,SAAS,EAAE,CAAC;QAEZ,OAAO,CAAC,QAAQ,CAAC,GAAS,EAAE;YAExB,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,sBAA0C,CAAC;YAC/C,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAC/B,IAAI,QAAQ,GAAG,OAAO,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC3B,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;oBACzC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACtB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAC3B,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC;wBAC7C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBACtB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;4BAC3B,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,QAAQ,CAAC,CAAC;wBACxD,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,sBAAsB,GAAG,QAAQ,CAAC;wBACtC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,sBAAsB,GAAG,QAAQ,CAAC;oBACtC,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;oBACrC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACtB,sBAAsB,GAAG,QAAQ,CAAC;gBACtC,CAAC;YACL,CAAC;YAED,EAAE,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;gBACzB,MAAM,gBAAgB,CAAC,sBAAsB,CAAC,CAAC;gBAC/C,MAAM,CAAC;YACX,CAAC;YAED,MAAM,MAAM,GAAG,kDAAkD;gBAC7D,oFAAoF,CAAC;YACzF,MAAM,OAAO,GAAG,+CAA+C,CAAC;YAEhE,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAChC,MAAM,MAAM,GAAG,iBAAM,CAAC,cAAc,CAAC;oBACjC,OAAO,EAAE,CAAC,KAAK,CAAC;oBAChB,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;oBACZ,MAAM;oBACN,OAAO;oBACP,MAAM,EAAE,IAAI;oBACZ,mBAAmB,EAAE,IAAI;oBACzB,KAAK,EAAE,wCAAwC;oBAC/C,IAAI,EAAE,MAAM;iBACf,CAAC,CAAC;gBACH,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACf,KAAK,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,IAAI,GAAG,aAAa,OAAO,OAAO,MAAM,cAAc,CAAC;gBAC7D,MAAM,qBAAqB,GAAG,IAAI,wBAAa,CAAC;oBAC5C,MAAM,EAAE,GAAG;oBACX,cAAc,EAAE;wBACZ,2BAA2B,EAAE,KAAK;wBAClC,gBAAgB,EAAE,KAAK;wBACvB,QAAQ,EAAE,KAAK;wBACf,eAAe,EAAE,KAAK;wBACtB,uBAAuB,EAAE,KAAK;wBAC9B,OAAO,EAAE,KAAK;wBACd,WAAW,EAAE,IAAI;wBACjB,UAAU,EAAE,KAAK;qBAEpB;oBACD,KAAK,EAAE,GAAG;iBACb,CAAC,CAAC;gBAEH,qBAAqB,CAAC,WAAW,CAAC,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC;YACxE,CAAC;QACL,CAAC,CAAA,CAAC,CAAC;IACP,CAAC,CAAA,CAAC,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH;IAEI,MAAM,YAAY,GAAG;QACjB;YACI,KAAK,EAAE,mBAAmB;YAC1B,OAAO,EAAE;gBACL;oBACI,WAAW,EAAE,WAAW;oBACxB,KAAK,EAAE,GAAG,EAAE,GAAG,cAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oBAC5B,KAAK,EAAE,MAAM;iBAChB;aACJ;SACJ;QACD;YACI,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,EACR;SACJ;QACD;YACI,KAAK,EAAE,OAAO;YACd,OAAO,EAAE;gBACL;oBACI,WAAW,EAAE,WAAW;oBACxB,KAAK,EAAE,GAAG,EAAE;wBAER,eAAe,EAAE,CAAC;oBACtB,CAAC;oBACD,KAAK,EAAE,gBAAgB;iBAC1B;aACJ;SACJ;KACJ,CAAC;IAEF,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;QACzB,KAAK,EAAE,GAAS,EAAE;YACd,MAAM,MAAM,GAAG,iBAAM,CAAC,cAAc,CAAC;gBACjC,WAAW,EAAE,aAAa,IAAI,iBAAiB;gBAC/C,OAAO,EAAE;oBACL,EAAE,IAAI,EAAE,kBAAkB,EAAE,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE;oBAC3D,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC,MAAM,CAAC,EAAE;oBAC7C,EAAE,IAAI,EAAE,YAAY,EAAE,UAAU,EAAE,CAAC,KAAK,CAAC,EAAE;iBAG9C;gBACD,OAAO,EAAE,eAAe;gBACxB,UAAU,EAAE,CAAC,UAAU,CAAC;gBACxB,KAAK,EAAE,oBAAoB;aAC9B,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC;YACX,CAAC;YACD,MAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC3B,KAAK,CAAC,QAAQ,CAAC,CAAC;YAChB,MAAM,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,CAAA;QACD,KAAK,EAAE,cAAc;KACjB,CAAC,CAAC;IAEV,iBAAiB,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;QAC5C,MAAM,QAAQ,GAAG,sBAAsB,CAAC,CAAC,CAAC,CAAC;QAC3C,KAAK,CAAC,aAAa,GAAG,QAAQ,GAAG,KAAK,GAAG,cAAc,CAAC,CAAC;QAEzD,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;YACzB,KAAK,EAAE,GAAS,EAAE;gBACd,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAChB,MAAM,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YACrC,CAAC,CAAA;YACD,KAAK,EAAE,QAAQ;SACX,CAAC,CAAC;IACd,CAAC,CAAC,CAAC;IACH,MAAM,IAAI,GAAG,eAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;IAClD,eAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAClC,CAAC;AAED,0BAAgC,QAAgB;;QAC5C,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnC,aAAa,GAAG,GAAG,CAAC;QACpB,KAAK,CAAC,aAAa,CAAC,CAAC;QAErB,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACzC,MAAM,YAAY,GAAG,QAAQ,GAAG,OAAO,CAAC;QACxC,EAAE,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC;YAClB,IAAI,YAAsB,CAAC;YAC3B,IAAI,CAAC;gBACD,YAAY,GAAG,MAAM,sBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;YACvE,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE;oBAClB,MAAM,MAAM,GAAG,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;wBACtC,GAAG,CAAC,CAAC;wBACL,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;oBAChD,MAAM,OAAO,GAAG,0BAA0B,CAAC;oBAC3C,MAAM,GAAG,GAAG,iBAAM,CAAC,cAAc,CAAC;wBAC9B,OAAO,EAAE,CAAC,KAAK,CAAC;wBAChB,QAAQ,EAAE,CAAC;wBACX,SAAS,EAAE,CAAC;wBACZ,MAAM;wBACN,OAAO;wBACP,MAAM,EAAE,IAAI;wBACZ,mBAAmB,EAAE,IAAI;wBACzB,KAAK,EAAE,wCAAwC;wBAC/C,IAAI,EAAE,MAAM;qBACf,CAAC,CAAC;oBACH,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACZ,KAAK,CAAC,IAAI,CAAC,CAAC;oBAChB,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC;YACX,CAAC;YAED,MAAM,MAAM,GAAG,YAAwB,CAAC;YACxC,OAAO,CAAC,QAAQ,CAAC,GAAS,EAAE;gBACxB,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBACvD,MAAM,OAAO,GAAG,kCAAkC,GAAG,YAAY,GAAG,GAAG,CAAC;gBACxE,MAAM,GAAG,GAAG,iBAAM,CAAC,cAAc,CAAC;oBAC9B,OAAO,EAAE,CAAC,KAAK,CAAC;oBAChB,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;oBACZ,MAAM;oBACN,OAAO;oBACP,MAAM,EAAE,IAAI;oBACZ,mBAAmB,EAAE,IAAI;oBACzB,KAAK,EAAE,wCAAwC;oBAC/C,IAAI,EAAE,MAAM;iBACf,CAAC,CAAC;gBACH,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACZ,KAAK,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC;gBAED,MAAM,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC,CAAA,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC;IACL,CAAC;CAAA;AAED,kBAAwB,QAAgB;;QACpC,IAAI,CAAC,GAAG,sBAAsB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACR,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzE,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAExB,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAE9B,iBAAiB,CAAC,IAAI,CAAC,GAAG,oBAAoB,GAAG,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACxE,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAEzB,CAAC,GAAG,sBAAsB,CAAC,MAAM,GAAG,CAAC,CAAC;YAEtC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAClB,SAAS,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;QACP,CAAC;QAED,MAAM,IAAI,GAAG,sBAAsB,CAAC,CAAC,CAAC,CAAC;QACvC,MAAM,cAAc,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAE5C,MAAM,2BAA2B,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAC5D,CAAC;CAAA;AAED,cAAG,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;IACpB,KAAK,CAAC,cAAc,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,cAAG,CAAC,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE;IACvB,KAAK,CAAC,iBAAiB,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC;AAEH,cAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC7B,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAC/B,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;QAChC,cAAG,CAAC,IAAI,EAAE,CAAC;IACf,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,cAAG,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;IAChB,KAAK,CAAC,UAAU,CAAC,CAAC;IAElB,mBAAmB,CAAC,IAAI,EAAE,CAAC;AAC/B,CAAC,CAAC,CAAC","sourcesContent":["// https://github.com/electron/electron/blob/master/docs/api/sandbox-option.md\r\n// https://github.com/electron/electron/blob/master/docs/api/process.md\r\n// https://github.com/electron/electron/blob/master/docs/api/browser-window.md\r\n// https://github.com/electron/electron/blob/master/docs/api/protocol.md\r\n// https://github.com/electron/electron/blob/master/docs/api/web-frame.md\r\n// https://github.com/electron/electron/blob/master/docs/api/web-contents.md\r\n// https://github.com/electron/electron/blob/master/docs/api/web-request.md\r\n// https://github.com/electron/electron/blob/master/docs/api/session.md\r\n// https://github.com/electron/electron/blob/master/docs/api/webview-tag.md\r\n// https://github.com/electron/electron/blob/master/docs/api/browser-view.md\r\n// https://github.com/electron/electron/blob/master/docs/api/client-request.md\r\n// https://github.com/electron/electron/blob/master/docs/api/sandbox-option.md\r\n// https://github.com/electron/electron/blob/master/docs/api/dialog.md\r\n// https://github.com/electron/electron/blob/master/docs/api/ipc-renderer.md\r\n\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\n\r\nimport { encodeURIComponent_RFC3986 } from \"@r2-streamer-js/_utils/http/UrlUtils\";\r\nimport { Server } from \"@r2-streamer-js/http/server\";\r\nimport { initGlobals } from \"@r2-streamer-js/init-globals\";\r\nimport { Publication } from \"@r2-streamer-js/models/publication\";\r\nimport { setLcpNativePluginPath } from \"@r2-streamer-js/parser/epub/lcp\";\r\nimport * as debug_ from \"debug\";\r\nimport { BrowserWindow, Menu, app, dialog, ipcMain, webContents } from \"electron\";\r\nimport * as filehound from \"filehound\";\r\nimport * as portfinder from \"portfinder\";\r\n\r\nimport { R2_EVENT_DEVTOOLS } from \"../common/events\";\r\nimport { trackBrowserWindow } from \"./browser-window-tracker\";\r\nimport { downloadFromLCPL, installLcpHandler } from \"./lcp\";\r\nimport { launchStatusDocumentProcessing } from \"./lsd\";\r\nimport { deviceIDManager } from \"./lsd-deviceid-manager\";\r\nimport { setupReadiumCSS } from \"./readium-css\";\r\nimport { initSessions } from \"./sessions\";\r\n\r\n// import * as mime from \"mime-types\";\r\n\r\ninitGlobals();\r\nconst lcpPluginPath = path.join(process.cwd(), \"LCP\", \"lcp.node\");\r\nsetLcpNativePluginPath(lcpPluginPath);\r\n\r\nconst debug = debug_(\"r2:electron:main\");\r\n\r\nlet _publicationsServer: Server;\r\nlet _publicationsServerPort: number;\r\nlet _publicationsRootUrl: string;\r\nlet _publicationsFilePaths: string[];\r\nlet _publicationsUrls: string[];\r\n\r\nconst DEFAULT_BOOK_PATH = fs.realpathSync(path.resolve(\"./misc/epubs/\"));\r\nlet _lastBookPath: string | undefined;\r\n\r\n// protocol.registerStandardSchemes([\"epub\", \"file\"], { secure: true });\r\n\r\nfunction openAllDevTools() {\r\n    for (const wc of webContents.getAllWebContents()) {\r\n        // if (wc.hostWebContents &&\r\n        //     wc.hostWebContents.id === electronBrowserWindow.webContents.id) {\r\n        // }\r\n        wc.openDevTools();\r\n    }\r\n}\r\n\r\n// function openTopLevelDevTools() {\r\n//     const bw = BrowserWindow.getFocusedWindow();\r\n//     if (bw) {\r\n//         bw.webContents.openDevTools();\r\n//     } else {\r\n//         const arr = BrowserWindow.getAllWindows();\r\n//         arr.forEach((bww) => {\r\n//             bww.webContents.openDevTools();\r\n//         });\r\n//     }\r\n// }\r\n\r\nipcMain.on(R2_EVENT_DEVTOOLS, (_event: any, _arg: any) => {\r\n    openAllDevTools();\r\n});\r\n\r\nasync function createElectronBrowserWindow(publicationFilePath: string, publicationUrl: string) {\r\n\r\n    debug(\"createElectronBrowserWindow() \" + publicationFilePath + \" : \" + publicationUrl);\r\n\r\n    // const fileName = path.basename(publicationFilePath);\r\n    // const ext = path.extname(fileName).toLowerCase();\r\n\r\n    let publication: Publication;\r\n    try {\r\n        publication = await _publicationsServer.loadOrGetCachedPublication(publicationFilePath);\r\n    } catch (err) {\r\n        debug(err);\r\n        return;\r\n    }\r\n\r\n    let lcpHint: string | undefined;\r\n    if (publication && publication.LCP) {\r\n\r\n        try {\r\n            await launchStatusDocumentProcessing(publication, publicationFilePath, deviceIDManager, () => {\r\n                debug(\"launchStatusDocumentProcessing DONE.\");\r\n            });\r\n        } catch (err) {\r\n            debug(err);\r\n        }\r\n\r\n        if (publication.LCP.Encryption &&\r\n            publication.LCP.Encryption.UserKey &&\r\n            publication.LCP.Encryption.UserKey.TextHint) {\r\n            lcpHint = publication.LCP.Encryption.UserKey.TextHint;\r\n        }\r\n        if (!lcpHint) {\r\n            lcpHint = \"LCP passphrase\";\r\n        }\r\n    }\r\n\r\n    const electronBrowserWindow = new BrowserWindow({\r\n        height: 600,\r\n        webPreferences: {\r\n            allowRunningInsecureContent: false,\r\n            contextIsolation: false,\r\n            devTools: true,\r\n            nodeIntegration: true,\r\n            nodeIntegrationInWorker: false,\r\n            sandbox: false,\r\n            webSecurity: true,\r\n            webviewTag: true,\r\n            // preload: __dirname + \"/\" + \"preload.js\",\r\n        },\r\n        width: 800,\r\n    });\r\n    trackBrowserWindow(electronBrowserWindow);\r\n\r\n    // electronBrowserWindow.on(\"resize\", () => {\r\n    //     const [width, height] = electronBrowserWindow.getContentSize();\r\n\r\n    //     for (const wc of webContents.getAllWebContents()) {\r\n    //         if (wc.hostWebContents &&\r\n    //             wc.hostWebContents.id === electronBrowserWindow.webContents.id) {\r\n    //             wc.setSize({\r\n    //                 normal: {\r\n    //                     height: 400,\r\n    //                     width,\r\n    //                 },\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    electronBrowserWindow.webContents.on(\"dom-ready\", () => {\r\n        debug(\"electronBrowserWindow dom-ready \" + publicationFilePath + \" : \" + publicationUrl);\r\n        // electronBrowserWindow.webContents.openDevTools();\r\n    });\r\n\r\n    const urlEncoded = encodeURIComponent_RFC3986(publicationUrl);\r\n    let fullUrl = `file://${__dirname}/../renderer/index.html?pub=${urlEncoded}`;\r\n    if (lcpHint) {\r\n        fullUrl = fullUrl + \"&lcpHint=\" + encodeURIComponent_RFC3986(lcpHint);\r\n    }\r\n    // fullUrl = fullUrl + \"&lcpPlugin=\" + encodeURIComponent_RFC3986(Buffer.from(lcpPluginPath).toString(\"base64\"));\r\n\r\n    // `file://${process.cwd()}/src/electron/renderer/index.html`;\r\n    // `file://${__dirname}/../../../../src/electron/renderer/index.html`\r\n    debug(fullUrl);\r\n    electronBrowserWindow.webContents.loadURL(fullUrl, { extraHeaders: \"pragma: no-cache\\n\" });\r\n}\r\n\r\ninitSessions();\r\n\r\napp.on(\"ready\", () => {\r\n    debug(\"app ready\");\r\n\r\n    // protocol.registerServiceWorkerSchemes([\"epub\"]);\r\n\r\n    // registerFileProtocol\r\n    // protocol.registerBufferProtocol(\"epub\",\r\n    //     (request, callback) => {\r\n    //         debug(request.url);\r\n    //         const data = fs.readFileSync(request.url);\r\n    //         const mimeType = mime.lookup(request.url);\r\n    //         callback({ data, mimeType });\r\n    //     }, (error) => {\r\n    //         debug(error);\r\n    //     });\r\n\r\n    // tslint:disable-next-line:no-floating-promises\r\n    (async () => {\r\n        try {\r\n            _publicationsFilePaths = await filehound.create()\r\n                .paths(DEFAULT_BOOK_PATH)\r\n                .ext([\".epub\", \".epub3\", \".cbz\", \".lcpl\"])\r\n                .find();\r\n        } catch (err) {\r\n            debug(err);\r\n        }\r\n        debug(_publicationsFilePaths);\r\n\r\n        _publicationsServer = new Server({\r\n            disableDecryption: false,\r\n            disableReaders: false,\r\n        });\r\n\r\n        installLcpHandler(_publicationsServer, deviceIDManager);\r\n\r\n        setupReadiumCSS(_publicationsServer, path.join(process.cwd(), \"dist/ReadiumCSS\"));\r\n\r\n        // _publicationsServer.expressGet([\"/resize-sensor.js\"],\r\n        //     (req: express.Request, res: express.Response) => {\r\n\r\n        //         const swPth = \"./renderer/ResizeSensor.js\";\r\n        //         const swFullPath = path.resolve(path.join(__dirname, swPth));\r\n        //         if (!fs.existsSync(swFullPath)) {\r\n\r\n        //             const err = \"Missing ResizeSensor JS! \";\r\n        //             debug(err + swFullPath);\r\n        //             res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n        //                 + err + \"</p></body></html>\");\r\n        //             return;\r\n        //         }\r\n\r\n        //         const swJS = fs.readFileSync(swFullPath, { encoding: \"utf8\" });\r\n        //         // debug(swJS);\r\n\r\n        //         // this.setResponseCORS(res);\r\n        //         res.set(\"Content-Type\", \"text/javascript; charset=utf-8\");\r\n\r\n        //         const checkSum = crypto.createHash(\"sha256\");\r\n        //         checkSum.update(swJS);\r\n        //         const hash = checkSum.digest(\"hex\");\r\n\r\n        //         const match = req.header(\"If-None-Match\");\r\n        //         if (match === hash) {\r\n        //             debug(\"ResizeSensor.js cache\");\r\n        //             res.status(304); // StatusNotModified\r\n        //             res.end();\r\n        //             return;\r\n        //         }\r\n\r\n        //         res.setHeader(\"ETag\", hash);\r\n        //         // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\r\n\r\n        //         res.status(200).send(swJS);\r\n        //     });\r\n\r\n        // _publicationsServer.expressGet([\"/sw.js\"],\r\n        //     (req: express.Request, res: express.Response) => {\r\n\r\n        //         const swPth = \"./renderer/sw/service-worker.js\";\r\n        //         const swFullPath = path.resolve(path.join(__dirname, swPth));\r\n        //         if (!fs.existsSync(swFullPath)) {\r\n\r\n        //             const err = \"Missing Service Worker JS! \";\r\n        //             debug(err + swFullPath);\r\n        //             res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n        //                 + err + \"</p></body></html>\");\r\n        //             return;\r\n        //         }\r\n\r\n        //         const swJS = fs.readFileSync(swFullPath, { encoding: \"utf8\" });\r\n        //         // debug(swJS);\r\n\r\n        //         // this.setResponseCORS(res);\r\n        //         res.set(\"Content-Type\", \"text/javascript; charset=utf-8\");\r\n\r\n        //         const checkSum = crypto.createHash(\"sha256\");\r\n        //         checkSum.update(swJS);\r\n        //         const hash = checkSum.digest(\"hex\");\r\n\r\n        //         const match = req.header(\"If-None-Match\");\r\n        //         if (match === hash) {\r\n        //             debug(\"service-worker.js cache\");\r\n        //             res.status(304); // StatusNotModified\r\n        //             res.end();\r\n        //             return;\r\n        //         }\r\n\r\n        //         res.setHeader(\"ETag\", hash);\r\n        //         // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\r\n\r\n        //         res.status(200).send(swJS);\r\n        //     });\r\n\r\n        const pubPaths = _publicationsServer.addPublications(_publicationsFilePaths);\r\n\r\n        try {\r\n            _publicationsServerPort = await portfinder.getPortPromise();\r\n        } catch (err) {\r\n            debug(err);\r\n        }\r\n        _publicationsRootUrl = _publicationsServer.start(_publicationsServerPort);\r\n\r\n        _publicationsUrls = pubPaths.map((pubPath) => {\r\n            return `${_publicationsRootUrl}${pubPath}`;\r\n        });\r\n        debug(_publicationsUrls);\r\n\r\n        resetMenu();\r\n\r\n        process.nextTick(async () => {\r\n\r\n            const args = process.argv.slice(2);\r\n            console.log(\"args:\");\r\n            console.log(args);\r\n            let filePathToLoadOnLaunch: string | undefined;\r\n            if (args && args.length && args[0]) {\r\n                const argPath = args[0].trim();\r\n                let filePath = argPath;\r\n                console.log(filePath);\r\n                if (!fs.existsSync(filePath)) {\r\n                    filePath = path.join(__dirname, argPath);\r\n                    console.log(filePath);\r\n                    if (!fs.existsSync(filePath)) {\r\n                        filePath = path.join(process.cwd(), argPath);\r\n                        console.log(filePath);\r\n                        if (!fs.existsSync(filePath)) {\r\n                            console.log(\"FILEPATH DOES NOT EXIST: \" + filePath);\r\n                        } else {\r\n                            filePathToLoadOnLaunch = filePath;\r\n                        }\r\n                    } else {\r\n                        filePathToLoadOnLaunch = filePath;\r\n                    }\r\n                } else {\r\n                    filePath = fs.realpathSync(filePath);\r\n                    console.log(filePath);\r\n                    filePathToLoadOnLaunch = filePath;\r\n                }\r\n            }\r\n\r\n            if (filePathToLoadOnLaunch) {\r\n                await openFileDownload(filePathToLoadOnLaunch);\r\n                return;\r\n            }\r\n\r\n            const detail = \"Note that this is only a developer application (\" +\r\n                \"test framework) for the Readium2 NodeJS 'streamer' and Electron-based 'navigator'.\";\r\n            const message = \"Use the 'Electron' menu to load publications.\";\r\n\r\n            if (process.platform === \"darwin\") {\r\n                const choice = dialog.showMessageBox({\r\n                    buttons: [\"&OK\"],\r\n                    cancelId: 0,\r\n                    defaultId: 0,\r\n                    detail,\r\n                    message,\r\n                    noLink: true,\r\n                    normalizeAccessKeys: true,\r\n                    title: \"Readium2 Electron streamer / navigator\",\r\n                    type: \"info\",\r\n                });\r\n                if (choice === 0) {\r\n                    debug(\"ok\");\r\n                }\r\n            } else {\r\n                const html = `<html><h2>${message}<hr>${detail}</h2></html>`;\r\n                const electronBrowserWindow = new BrowserWindow({\r\n                    height: 300,\r\n                    webPreferences: {\r\n                        allowRunningInsecureContent: false,\r\n                        contextIsolation: false,\r\n                        devTools: false,\r\n                        nodeIntegration: false,\r\n                        nodeIntegrationInWorker: false,\r\n                        sandbox: false,\r\n                        webSecurity: true,\r\n                        webviewTag: false,\r\n                        // preload: __dirname + \"/\" + \"preload.js\",\r\n                    },\r\n                    width: 400,\r\n                });\r\n\r\n                electronBrowserWindow.webContents.loadURL(\"data:text/html,\" + html);\r\n            }\r\n        });\r\n    })();\r\n});\r\n\r\nfunction resetMenu() {\r\n\r\n    const menuTemplate = [\r\n        {\r\n            label: \"Readium2 Electron\",\r\n            submenu: [\r\n                {\r\n                    accelerator: \"Command+Q\",\r\n                    click: () => { app.quit(); },\r\n                    label: \"Quit\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            label: \"Open\",\r\n            submenu: [\r\n            ],\r\n        },\r\n        {\r\n            label: \"Tools\",\r\n            submenu: [\r\n                {\r\n                    accelerator: \"Command+B\",\r\n                    click: () => {\r\n                        // openTopLevelDevTools();\r\n                        openAllDevTools();\r\n                    },\r\n                    label: \"Open Dev Tools\",\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n\r\n    menuTemplate[1].submenu.push({\r\n        click: async () => {\r\n            const choice = dialog.showOpenDialog({\r\n                defaultPath: _lastBookPath || DEFAULT_BOOK_PATH,\r\n                filters: [\r\n                    { name: \"EPUB publication\", extensions: [\"epub\", \"epub3\"] },\r\n                    { name: \"LCP license\", extensions: [\"lcpl\"] },\r\n                    { name: \"Comic book\", extensions: [\"cbz\"] },\r\n                    // {name: \"Zip archive\", extensions: [\"zip\"]},\r\n                    // {name: \"Any file\", extensions: [\"*\"]},\r\n                ],\r\n                message: \"Choose a file\",\r\n                properties: [\"openFile\"],\r\n                title: \"Load a publication\",\r\n            });\r\n            if (!choice || !choice.length) {\r\n                return;\r\n            }\r\n            const filePath = choice[0];\r\n            debug(filePath);\r\n            await openFileDownload(filePath);\r\n        },\r\n        label: \"Load file...\",\r\n    } as any);\r\n\r\n    _publicationsUrls.forEach((pubManifestUrl, n) => {\r\n        const filePath = _publicationsFilePaths[n];\r\n        debug(\"MENU ITEM: \" + filePath + \" : \" + pubManifestUrl);\r\n\r\n        menuTemplate[1].submenu.push({\r\n            click: async () => {\r\n                debug(filePath);\r\n                await openFileDownload(filePath);\r\n            },\r\n            label: filePath, // + \" : \" + pubManifestUrl,\r\n        } as any);\r\n    });\r\n    const menu = Menu.buildFromTemplate(menuTemplate);\r\n    Menu.setApplicationMenu(menu);\r\n}\r\n\r\nasync function openFileDownload(filePath: string) {\r\n    const dir = path.dirname(filePath);\r\n    _lastBookPath = dir;\r\n    debug(_lastBookPath);\r\n\r\n    const ext = path.extname(filePath);\r\n    const filename = path.basename(filePath);\r\n    const destFileName = filename + \".epub\";\r\n    if (ext === \".lcpl\") {\r\n        let epubFilePath: string[];\r\n        try {\r\n            epubFilePath = await downloadFromLCPL(filePath, dir, destFileName);\r\n        } catch (err) {\r\n            process.nextTick(() => {\r\n                const detail = (typeof err === \"string\") ?\r\n                    err :\r\n                    (err.toString ? err.toString() : \"ERROR!?\");\r\n                const message = \"LCP EPUB download fail!]\";\r\n                const res = dialog.showMessageBox({\r\n                    buttons: [\"&OK\"],\r\n                    cancelId: 0,\r\n                    defaultId: 0,\r\n                    detail,\r\n                    message,\r\n                    noLink: true,\r\n                    normalizeAccessKeys: true,\r\n                    title: \"Readium2 Electron streamer / navigator\",\r\n                    type: \"info\",\r\n                });\r\n                if (res === 0) {\r\n                    debug(\"ok\");\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const result = epubFilePath as string[];\r\n        process.nextTick(async () => {\r\n            const detail = result[0] + \" ---- [\" + result[1] + \"]\";\r\n            const message = \"LCP EPUB file download success [\" + destFileName + \"]\";\r\n            const res = dialog.showMessageBox({\r\n                buttons: [\"&OK\"],\r\n                cancelId: 0,\r\n                defaultId: 0,\r\n                detail,\r\n                message,\r\n                noLink: true,\r\n                normalizeAccessKeys: true,\r\n                title: \"Readium2 Electron streamer / navigator\",\r\n                type: \"info\",\r\n            });\r\n            if (res === 0) {\r\n                debug(\"ok\");\r\n            }\r\n\r\n            await openFile(result[0]);\r\n        });\r\n    } else {\r\n        await openFile(filePath);\r\n    }\r\n}\r\n\r\nasync function openFile(filePath: string) {\r\n    let n = _publicationsFilePaths.indexOf(filePath);\r\n    if (n < 0) {\r\n        const publicationPaths = _publicationsServer.addPublications([filePath]);\r\n        debug(publicationPaths);\r\n\r\n        _publicationsFilePaths.push(filePath);\r\n        debug(_publicationsFilePaths);\r\n\r\n        _publicationsUrls.push(`${_publicationsRootUrl}${publicationPaths[0]}`);\r\n        debug(_publicationsUrls);\r\n\r\n        n = _publicationsFilePaths.length - 1; // === _publicationsUrls.length - 1\r\n\r\n        process.nextTick(() => {\r\n            resetMenu();\r\n        });\r\n    }\r\n\r\n    const file = _publicationsFilePaths[n];\r\n    const pubManifestUrl = _publicationsUrls[n];\r\n\r\n    await createElectronBrowserWindow(file, pubManifestUrl);\r\n}\r\n\r\napp.on(\"activate\", () => {\r\n    debug(\"app activate\");\r\n});\r\n\r\napp.on(\"before-quit\", () => {\r\n    debug(\"app before quit\");\r\n});\r\n\r\napp.on(\"window-all-closed\", () => {\r\n    debug(\"app window-all-closed\");\r\n    if (process.platform !== \"darwin\") {\r\n        app.quit();\r\n    }\r\n});\r\n\r\napp.on(\"quit\", () => {\r\n    debug(\"app quit\");\r\n\r\n    _publicationsServer.stop();\r\n});\r\n"]}